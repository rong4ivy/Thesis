[
  {
    "context": "There are three blocks A, B, and C. Block A has a medium yellow square to the left of a small blue triangle. Block B is to the right of block A. It has two small blue squares. The square number one is touching the right edge of this block and the square number two is above the square number one. Block C is below block A. It has a big black triangle above a small black triangle. The big black triangle is to the right of a small yellow square. A small yellow triangle is below and to the left of the small black triangle.",
    "question": "What is the relation between the small yellow square and the small yellow triangle",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_yellow_square, medium, yellow, square, a).\nobject(small_blue_triangle, small, blue, triangle, a).\nis(medium_yellow_square, left, small_blue_triangle).\nobject(small_blue_square1, small, blue, square, b).\nobject(small_blue_square2, small, blue, square, b).\nis(small_blue_square1, touching, b).\nis(small_blue_square2, above, small_blue_square1).\nis(b, right, a).\nobject(big_black_triangle, big, black, triangle, c).\nobject(small_black_triangle, small, black, triangle, c).\nobject(small_yellow_square, small, yellow, square, c).\nis(big_black_triangle, above, small_black_triangle).\nis(big_black_triangle, right, small_yellow_square).\nobject(small_yellow_triangle, small, yellow, triangle, c).\nis(small_yellow_triangle, below_and_left, small_black_triangle).\n\n% Query\nquery(Relation) :- object(small_yellow_square, small, yellow, square, _), object(small_yellow_triangle, small, yellow, triangle, _), is(small_yellow_square, Relation, small_yellow_triangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "DK",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_yellow_square, medium, yellow, square, a).\nobject(small_blue_triangle, small, blue, triangle, a).\nis(medium_yellow_square, left, small_blue_triangle).\nobject(small_blue_square1, small, blue, square, b).\nobject(small_blue_square2, small, blue, square, b).\nis(small_blue_square1, touching, b).\nis(small_blue_square2, above, small_blue_square1).\nis(b, right, a).\nobject(big_black_triangle, big, black, triangle, c).\nobject(small_black_triangle, small, black, triangle, c).\nobject(small_yellow_square, small, yellow, square, c).\nis(big_black_triangle, above, small_black_triangle).\nis(big_black_triangle, right, small_yellow_square).\nobject(small_yellow_triangle, small, yellow, triangle, c).\nis(small_yellow_triangle, below_and_left, small_black_triangle).\n\n% Query\nquery(Relation) :- object(small_yellow_square, small, yellow, square, _), object(small_yellow_triangle, small, yellow, triangle, _), is(small_yellow_square, Relation, small_yellow_triangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. It has a small yellow square, a smal black triangle and a small black circle. A medium blue square is above and to the right of the smal black triangle and circle. The small yellow square is above the medium square. The small black circle is above a big blue circle and to the right of the small black triangle. Block A is below another block called B.block B has two big yellow triangle and a big black circle that is touching the top edge of this block. One of the triangles is touching the bottom edge of block B.",
    "question": "What is the relation between the medium square and the big blue circle?",
    "q_type": "FR",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nobject(small_yellow_square, small, yellow, square, a).\nobject(small_black_triangle, small, black, triangle, a).\nobject(small_black_circle, small, black, circle, a).\nobject(medium_blue_square, medium, blue, square, a).\nobject(big_blue_circle, big, blue, circle, a).\nobject(big_yellow_triangle1, big, yellow, triangle, b).\nobject(big_yellow_triangle2, big, yellow, triangle, b).\nobject(big_black_circle, big, black, circle, b).\nis(medium_blue_square, above, small_black_triangle).\nis(medium_blue_square, above, small_black_circle).\nis(medium_blue_square, right, small_black_triangle).\nis(medium_blue_square, right, small_black_circle).\nis(small_yellow_square, above, medium_blue_square).\nis(small_black_circle, above, big_blue_circle).\nis(small_black_circle, right, small_black_triangle).\nis(big_yellow_triangle1, touching, b).\nis(big_yellow_triangle2, touching, b).\nis(big_black_circle, touching, b).\nis(a, below, b).\n\n% Query\nquery(Relation) :- object(medium_blue_square, medium, blue, square, a), object(big_blue_circle, big, blue, circle, a), is(medium_blue_square, Relation, big_blue_circle).\n\n% Rules\n% inverse relation\ninverse(front, behind; in, contain; cover, covered_by; above, below; left_of, right_of; right, left; near, far; close_to, far_from; up, down; on, under; inside, outside).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\n% transitive relation\ntransitive(above; below; over; under; left; right; far; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\n% symmetric relation\nsymmetric(left; right; near; far; close_to; up; down; on; under; inside; outside).\nis(X, R, Y) :- is(X, R, Y), symmetric(R), X != Y.\n\n% Inter-block object relationship\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2.\n\n% Object-block relationship\nis(O, R, B) :- object(O, _, _, _, OB), is(OB, R, B), B != OB.\n\n% Inter-object relationship within the same block\nis(O1, R, O2) :- object(O1, _, _, _, B), object(O2, _, _, _, B), is(O1, R, O2), O1 != O2.\n\n% Transitive relationship between objects in different blocks\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "above",
    "error": null,
    "clean_asp": "% Facts\nobject(small_yellow_square, small, yellow, square, a).\nobject(small_black_triangle, small, black, triangle, a).\nobject(small_black_circle, small, black, circle, a).\nobject(medium_blue_square, medium, blue, square, a).\nobject(big_blue_circle, big, blue, circle, a).\nobject(big_yellow_triangle1, big, yellow, triangle, b).\nobject(big_yellow_triangle2, big, yellow, triangle, b).\nobject(big_black_circle, big, black, circle, b).\nis(medium_blue_square, above, small_black_triangle).\nis(medium_blue_square, above, small_black_circle).\nis(medium_blue_square, right, small_black_triangle).\nis(medium_blue_square, right, small_black_circle).\nis(small_yellow_square, above, medium_blue_square).\nis(small_black_circle, above, big_blue_circle).\nis(small_black_circle, right, small_black_triangle).\nis(big_yellow_triangle1, touching, b).\nis(big_yellow_triangle2, touching, b).\nis(big_black_circle, touching, b).\nis(a, below, b).\n\n% Query\nquery(Relation) :- object(medium_blue_square, medium, blue, square, a), object(big_blue_circle, big, blue, circle, a), is(medium_blue_square, Relation, big_blue_circle).\n\n% Rules\n% inverse relation\ninverse(front, behind; in, contain; cover, covered_by; above, below; left_of, right_of; right, left; near, far; close_to, far_from; up, down; on, under; inside, outside).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\n% transitive relation\ntransitive(above; below; over; under; left; right; far; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\n% symmetric relation\nsymmetric(left; right; near; far; close_to; up; down; on; under; inside; outside).\nis(X, R, Y) :- is(X, R, Y), symmetric(R), X != Y.\n\n% Inter-block object relationship\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2.\n\n% Object-block relationship\nis(O, R, B) :- object(O, _, _, _, OB), is(OB, R, B), B != OB.\n\n% Inter-object relationship within the same block\nis(O1, R, O2) :- object(O1, _, _, _, B), object(O2, _, _, _, B), is(O1, R, O2), O1 != O2.\n\n% Transitive relationship between objects in different blocks\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "asp_result": "above"
  },
  {
    "context": "There are three blocks A, B, and C. Block A is below blocks B and C. It has three circles. The fist circle is big and yellow which is touching the bottom edge of this block. Another is medium and blue which is to the right of the big yellow circle and below and to the right of the medium yellow circle. Block B has a medium yellow circle and a medium black square which are touhing the right edge of this block. there is amedium blue circle to the left of the yellow and black objects in this block. Block C is to the right of the block B. It has a big yellow square that is touching the right edge of the block. It is above a big blue triangle. To the right of the big blue triangle there is a small black circle.",
    "question": "Where is the blue circle in block B regarding to the blue circle which is above a yellow circle?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_yellow_circle, large, yellow, circle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(medium_yellow_circle, medium, yellow, circle, a).\nis(big_yellow_circle, touching, a).\nis(medium_blue_circle, to_the_right, big_yellow_circle).\nis(medium_blue_circle, below, medium_yellow_circle).\nobject(medium_yellow_circle_b, medium, yellow, circle, b).\nobject(medium_black_square, medium, black, square, b).\nis(medium_yellow_circle_b, touching, b).\nis(medium_black_square, touching, b).\nis(medium_blue_circle_b, left, medium_yellow_circle_b).\nis(medium_blue_circle_b, left, medium_black_square).\nobject(big_yellow_square, large, yellow, square, c).\nobject(big_blue_triangle, large, blue, triangle, c).\nis(big_yellow_square, touching, c).\nis(big_blue_triangle, above, big_yellow_square).\nobject(small_black_circle, small, black, circle, c).\nis(small_black_circle, to_the_right, big_blue_triangle).\nis(a, below, b).\nis(a, below, c).\nis(b, left, c).\n\n% Query\nquery(Location) :- object(MediumBlueCircleB, medium, blue, circle, b), \n                     object(MediumBlueCircle, medium, blue, circle, a), \n                     object(YellowCircle, _, yellow, circle, a), \n                     is(MediumBlueCircleB, Location, MediumBlueCircle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), \n                   is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, \n                   O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "above",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_yellow_circle, large, yellow, circle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(medium_yellow_circle, medium, yellow, circle, a).\nis(big_yellow_circle, touching, a).\nis(medium_blue_circle, to_the_right, big_yellow_circle).\nis(medium_blue_circle, below, medium_yellow_circle).\nobject(medium_yellow_circle_b, medium, yellow, circle, b).\nobject(medium_black_square, medium, black, square, b).\nis(medium_yellow_circle_b, touching, b).\nis(medium_black_square, touching, b).\nis(medium_blue_circle_b, left, medium_yellow_circle_b).\nis(medium_blue_circle_b, left, medium_black_square).\nobject(big_yellow_square, large, yellow, square, c).\nobject(big_blue_triangle, large, blue, triangle, c).\nis(big_yellow_square, touching, c).\nis(big_blue_triangle, above, big_yellow_square).\nobject(small_black_circle, small, black, circle, c).\nis(small_black_circle, to_the_right, big_blue_triangle).\nis(a, below, b).\nis(a, below, c).\nis(b, left, c).\n\n% Query\nquery(Location) :- object(MediumBlueCircleB, medium, blue, circle, b), \n                     object(MediumBlueCircle, medium, blue, circle, a), \n                     object(YellowCircle, _, yellow, circle, a), \n                     is(MediumBlueCircleB, Location, MediumBlueCircle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), \n                   is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, \n                   O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "We have three blocks A, B, and C. Block C is below block A and B. Block A has a blue square which is touching the bottom edge of the block and a yellow square which is on top of the blue square. Block B has a yellow square touching the bottom edge of it. And block C has three squares. The first one is yellow and touching the bottom edge of the block. The second one is black and is on top of the yellow one and the third one is also black and on top of the second square.",
    "question": "What is the relation between all balck squares and the blue square?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(blue_square_a, unknown, blue, square, a).\nobject(yellow_square_a, unknown, yellow, square, a).\nis(blue_square_a, touching, a).\nis(yellow_square_a, on_top_of, blue_square_a).\nobject(yellow_square_b, unknown, yellow, square, b).\nis(yellow_square_b, touching, b).\nobject(yellow_square_c, unknown, yellow, square, c).\nis(yellow_square_c, touching, c).\nobject(black_square_c1, unknown, black, square, c).\nis(black_square_c1, on_top_of, yellow_square_c).\nobject(black_square_c2, unknown, black, square, c).\nis(black_square_c2, on_top_of, black_square_c1).\nis(c, below, a).\nis(c, below, b).\n\n% Query\nquery(Relation) :- object(BlueSquare, _, blue, square, _), object(BlackSquare, _, black, square, _), is(BlackSquare, Relation, BlueSquare).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\n\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\n\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "below",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(blue_square_a, unknown, blue, square, a).\nobject(yellow_square_a, unknown, yellow, square, a).\nis(blue_square_a, touching, a).\nis(yellow_square_a, on_top_of, blue_square_a).\nobject(yellow_square_b, unknown, yellow, square, b).\nis(yellow_square_b, touching, b).\nobject(yellow_square_c, unknown, yellow, square, c).\nis(yellow_square_c, touching, c).\nobject(black_square_c1, unknown, black, square, c).\nis(black_square_c1, on_top_of, yellow_square_c).\nobject(black_square_c2, unknown, black, square, c).\nis(black_square_c2, on_top_of, black_square_c1).\nis(c, below, a).\nis(c, below, b).\n\n% Query\nquery(Relation) :- object(BlueSquare, _, blue, square, _), object(BlackSquare, _, black, square, _), is(BlackSquare, Relation, BlueSquare).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\n\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\n\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "below"
  },
  {
    "context": "We have one block called A. there is a big blue circle touching bottom edge and a small blue triangle touching the top edge and another small blue triangle touching right edge of this block. There is a big yellow square above the big circle and below small triangle number one. It is to the left of small triangle number two. This block also has a small yellow and a small black triangles. Both of them are above the big circle and below the big square.",
    "question": "What is the relation between the black triangle and the blue triangle number two?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nobject(big_blue_circle, large, blue, circle, a).\nobject(small_blue_triangle1, small, blue, triangle, a).\nobject(small_blue_triangle2, small, blue, triangle, a).\nobject(big_yellow_square, large, yellow, square, a).\nobject(small_yellow_triangle, small, yellow, triangle, a).\nobject(small_black_triangle, small, black, triangle, a).\nis(big_blue_circle, touching, bottom_edge).\nis(small_blue_triangle1, touching, top_edge).\nis(small_blue_triangle2, touching, right_edge).\nis(big_yellow_square, above, big_blue_circle).\nis(big_yellow_square, below, small_blue_triangle1).\nis(big_yellow_square, left, small_blue_triangle2).\nis(small_yellow_triangle, above, big_blue_circle).\nis(small_yellow_triangle, below, big_yellow_square).\nis(small_black_triangle, above, big_blue_circle).\nis(small_black_triangle, below, big_yellow_square).\n\n% Query\nquery(Relation) :- object(small_black_triangle, _, _, _, _), object(small_blue_triangle2, _, _, _, _), is(small_black_triangle, Relation, small_blue_triangle2).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "left",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nobject(big_blue_circle, large, blue, circle, a).\nobject(small_blue_triangle1, small, blue, triangle, a).\nobject(small_blue_triangle2, small, blue, triangle, a).\nobject(big_yellow_square, large, yellow, square, a).\nobject(small_yellow_triangle, small, yellow, triangle, a).\nobject(small_black_triangle, small, black, triangle, a).\nis(big_blue_circle, touching, bottom_edge).\nis(small_blue_triangle1, touching, top_edge).\nis(small_blue_triangle2, touching, right_edge).\nis(big_yellow_square, above, big_blue_circle).\nis(big_yellow_square, below, small_blue_triangle1).\nis(big_yellow_square, left, small_blue_triangle2).\nis(small_yellow_triangle, above, big_blue_circle).\nis(small_yellow_triangle, below, big_yellow_square).\nis(small_black_triangle, above, big_blue_circle).\nis(small_black_triangle, below, big_yellow_square).\n\n% Query\nquery(Relation) :- object(small_black_triangle, _, _, _, _), object(small_blue_triangle2, _, _, _, _), is(small_black_triangle, Relation, small_blue_triangle2).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "below"
  },
  {
    "context": "There is a block called A which has a medium yellow triangle. To the right of the block A, there is a block called B. It has three circles and a small black triangle. Two of the circles are medium blue which one of them touching the top edge of the block and the other is touching the bottom and left edge of the block B. Anothe circle is big and black which the small black triangle is below and tp the left of it. There is another block C which is to the left of the block A. it has a small black square that is touching the bottom edge of the block and a medium blue circle.",
    "question": "What is the relation between the blue circle which is touching the top edge of block B and the small square?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_yellow_triangle, medium, yellow, triangle, a).\nobject(medium_blue_circle1, medium, blue, circle, b).\nobject(medium_blue_circle2, medium, blue, circle, b).\nobject(big_black_circle, big, black, circle, b).\nobject(small_black_triangle, small, black, triangle, b).\nobject(small_black_square, small, black, square, c).\nobject(medium_blue_circle3, medium, blue, circle, c).\nis(a, left, c).\nis(b, right, a).\nis(medium_blue_circle1, touching, top_edge_of, b).\nis(medium_blue_circle2, touching, bottom_and_left_edge, b).\nis(big_black_circle, above, small_black_triangle).\nis(small_black_triangle, below_and_left, big_black_circle).\nis(small_black_square, touching, bottom_edge, c).\nis(medium_blue_circle3, touching, bottom_edge, c).\n\n% Query\nquery(Relation) :- object(BlueCircle, medium, blue, circle, b), object(SmallSquare, small, black, square, c), is(BlueCircle, Relation, SmallSquare).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "right",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_yellow_triangle, medium, yellow, triangle, a).\nobject(medium_blue_circle1, medium, blue, circle, b).\nobject(medium_blue_circle2, medium, blue, circle, b).\nobject(big_black_circle, big, black, circle, b).\nobject(small_black_triangle, small, black, triangle, b).\nobject(small_black_square, small, black, square, c).\nobject(medium_blue_circle3, medium, blue, circle, c).\nis(a, left, c).\nis(b, right, a).\nis(medium_blue_circle1, touching, top_edge_of, b).\nis(medium_blue_circle2, touching, bottom_and_left_edge, b).\nis(big_black_circle, above, small_black_triangle).\nis(small_black_triangle, below_and_left, big_black_circle).\nis(small_black_square, touching, bottom_edge, c).\nis(medium_blue_circle3, touching, bottom_edge, c).\n\n% Query\nquery(Relation) :- object(BlueCircle, medium, blue, circle, b), object(SmallSquare, small, black, square, c), is(BlueCircle, Relation, SmallSquare).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "right"
  },
  {
    "context": "There are three blue shapes in a block that we called A. Two medium blue squares are below a big blue square. First medium blue square is to the left of the other medium one which is touching the bottom edge of block A. There is another block below the block A we call it B. A big blue triangle is touching the top edge of this block which is above a small black triangle, a big blue circle and a medium blue triangle. The medium triangle is touching the bottom edge of the block. The circle is below and to the left of the small triangle. It is above the medium triangle.",
    "question": "What is the relation between the big triangle and the medium triangle?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP program:\n\n% Facts\nblock(a).\nblock(b).\nobject(big_blue_square, large, blue, square, a).\nobject(medium_blue_square1, medium, blue, square, a).\nobject(medium_blue_square2, medium, blue, square, a).\nis(medium_blue_square1, left, medium_blue_square2).\nis(medium_blue_square1, below, big_blue_square).\nis(medium_blue_square2, below, big_blue_square).\nis(medium_blue_square2, touching, a).\nobject(big_blue_triangle, large, blue, triangle, b).\nobject(small_black_triangle, small, black, triangle, b).\nobject(big_blue_circle, large, blue, circle, b).\nobject(medium_blue_triangle, medium, blue, triangle, b).\nis(big_blue_triangle, touching, b).\nis(small_black_triangle, above, medium_blue_triangle).\nis(big_blue_circle, above, medium_blue_triangle).\nis(big_blue_circle, left, small_black_triangle).\nis(big_blue_circle, below, small_black_triangle).\nis(medium_blue_triangle, touching, b).\n\n% Query\nquery(Relation) :- object(big_blue_triangle, large, blue, triangle, b), object(medium_blue_triangle, medium, blue, triangle, b), is(big_blue_triangle, Relation, medium_blue_triangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "above, far from",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(big_blue_square, large, blue, square, a).\nobject(medium_blue_square1, medium, blue, square, a).\nobject(medium_blue_square2, medium, blue, square, a).\nis(medium_blue_square1, left, medium_blue_square2).\nis(medium_blue_square1, below, big_blue_square).\nis(medium_blue_square2, below, big_blue_square).\nis(medium_blue_square2, touching, a).\nobject(big_blue_triangle, large, blue, triangle, b).\nobject(small_black_triangle, small, black, triangle, b).\nobject(big_blue_circle, large, blue, circle, b).\nobject(medium_blue_triangle, medium, blue, triangle, b).\nis(big_blue_triangle, touching, b).\nis(small_black_triangle, above, medium_blue_triangle).\nis(big_blue_circle, above, medium_blue_triangle).\nis(big_blue_circle, left, small_black_triangle).\nis(big_blue_circle, below, small_black_triangle).\nis(medium_blue_triangle, touching, b).\n\n% Query\nquery(Relation) :- object(big_blue_triangle, large, blue, triangle, b), object(medium_blue_triangle, medium, blue, triangle, b), is(big_blue_triangle, Relation, medium_blue_triangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are two blocks A and B. Block A has two medium yellow circle and a medium yellow triangle. The medium circle number one is to the right of the yellow triangle which is to the right of the medium circle number two. This block also has a medium black triangle touching the bottom edge of it. Block B is to the right of the block A. It has two medium yellow circle and a medium black triangle. It also has a big blue square above the medium yellow circle number one. The medium triangle is to the left of the medium circle number one and to the right of the medium circle number two. The big square is to the right of the triangle.",
    "question": "What is the relation between the triangle below another triangle and the yellow object below the big square?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nobject(medium_yellow_circle1, medium, yellow, circle, a).\nobject(medium_yellow_circle2, medium, yellow, circle, a).\nobject(medium_yellow_triangle, medium, yellow, triangle, a).\nobject(medium_black_triangle, medium, black, triangle, a).\nobject(medium_yellow_circle3, medium, yellow, circle, b).\nobject(medium_yellow_circle4, medium, yellow, circle, b).\nobject(medium_black_triangle2, medium, black, triangle, b).\nobject(big_blue_square, big, blue, square, b).\nis(medium_yellow_circle1, right, medium_yellow_triangle).\nis(medium_yellow_triangle, right, medium_yellow_circle2).\nis(medium_black_triangle, touching, medium_yellow_circle2).\nis(block_b, right, block_a).\nis(medium_yellow_circle3, below, big_blue_square).\nis(medium_black_triangle2, left, medium_yellow_circle3).\nis(medium_black_triangle2, right, medium_yellow_circle4).\n\n% Query\nquery(Relation) :- object(TriangleBelow, _, _, triangle, _), object(TriangleAbove, _, _, triangle, _), is(TriangleBelow, Relation, TriangleAbove), object(YellowObject, _, yellow, _, _), is(YellowObject, below, TriangleAbove).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "left",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(medium_yellow_circle1, medium, yellow, circle, a).\nobject(medium_yellow_circle2, medium, yellow, circle, a).\nobject(medium_yellow_triangle, medium, yellow, triangle, a).\nobject(medium_black_triangle, medium, black, triangle, a).\nobject(medium_yellow_circle3, medium, yellow, circle, b).\nobject(medium_yellow_circle4, medium, yellow, circle, b).\nobject(medium_black_triangle2, medium, black, triangle, b).\nobject(big_blue_square, big, blue, square, b).\nis(medium_yellow_circle1, right, medium_yellow_triangle).\nis(medium_yellow_triangle, right, medium_yellow_circle2).\nis(medium_black_triangle, touching, medium_yellow_circle2).\nis(block_b, right, block_a).\nis(medium_yellow_circle3, below, big_blue_square).\nis(medium_black_triangle2, left, medium_yellow_circle3).\nis(medium_black_triangle2, right, medium_yellow_circle4).\n\n% Query\nquery(Relation) :- object(TriangleBelow, _, _, triangle, _), object(TriangleAbove, _, _, triangle, _), is(TriangleBelow, Relation, TriangleAbove), object(YellowObject, _, yellow, _, _), is(YellowObject, below, TriangleAbove).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blue shapes in a block that we called A. Two medium blue squares are below a big blue square. First medium blue square is to the left of the other medium one which is touching the bottom edge of block A. There is another block below the block A we call it B. A big blue triangle is touching the top edge of this block which is above a small black triangle, a big blue circle and a medium blue triangle. The medium triangle is touching the bottom edge of the block. The circle is below and to the left of the small triangle. It is above the medium triangle.",
    "question": "Where is the circle reagrding to the object above the medium square?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n\n% Facts\nblock(a).\nblock(b).\nobject(big_blue_square, large, blue, square, a).\nobject(medium_blue_square1, medium, blue, square, a).\nobject(medium_blue_square2, medium, blue, square, a).\nis(medium_blue_square1, left, medium_blue_square2).\nis(medium_blue_square2, touching, a).\nobject(big_blue_triangle, large, blue, triangle, b).\nobject(small_black_triangle, small, black, triangle, b).\nobject(big_blue_circle, large, blue, circle, b).\nobject(medium_blue_triangle, medium, blue, triangle, b).\nis(big_blue_triangle, touching, b).\nis(small_black_triangle, above, medium_blue_triangle).\nis(big_blue_circle, below, small_black_triangle).\nis(big_blue_circle, left, small_black_triangle).\nis(big_blue_circle, above, medium_blue_triangle).\nis(medium_blue_triangle, touching, b).\n\n% Query\nquery(Relation) :- object(big_blue_circle, _, _, circle, _), object(_, _, _, _, Block), is(big_blue_circle, Relation, _), Block = b.\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.\n",
    "actual_answer": "below",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(big_blue_square, large, blue, square, a).\nobject(medium_blue_square1, medium, blue, square, a).\nobject(medium_blue_square2, medium, blue, square, a).\nis(medium_blue_square1, left, medium_blue_square2).\nis(medium_blue_square2, touching, a).\nobject(big_blue_triangle, large, blue, triangle, b).\nobject(small_black_triangle, small, black, triangle, b).\nobject(big_blue_circle, large, blue, circle, b).\nobject(medium_blue_triangle, medium, blue, triangle, b).\nis(big_blue_triangle, touching, b).\nis(small_black_triangle, above, medium_blue_triangle).\nis(big_blue_circle, below, small_black_triangle).\nis(big_blue_circle, left, small_black_triangle).\nis(big_blue_circle, above, medium_blue_triangle).\nis(medium_blue_triangle, touching, b).\n\n% Query\nquery(Relation) :- object(big_blue_circle, _, _, circle, _), object(_, _, _, _, Block), is(big_blue_circle, Relation, _), Block = b.\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "below, left, above"
  },
  {
    "context": "There exist a big red square, a big red triangle, a medium red square, and a small green circle in a block called A. The triangle and medium square are touching the bottom edge of the block. The big and medium square are touching the right edge of the block. And the circle is above the big square which is above the medium square. There is another block called B to the left of block A. A medium green square is touching the left edge of block B and is below a medium red square. The medium red square is above and to the left of a small green square. Also a medium red triangle is below and to the left of the small square.",
    "question": "What is the relation between the red square above a green object and a red triangle to the left of a green object?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nobject(big_red_square, large, red, square, a).\nobject(big_red_triangle, large, red, triangle, a).\nobject(medium_red_square, medium, red, square, a).\nobject(small_green_circle, small, green, circle, a).\nobject(medium_green_square, medium, green, square, b).\nobject(medium_red_square, medium, red, square, b).\nobject(small_green_square, small, green, square, b).\nobject(medium_red_triangle, medium, red, triangle, b).\nis(big_red_triangle, touching, medium_red_square).\nis(medium_red_square, touching, bottom_edge, a).\nis(big_red_square, touching, right_edge, a).\nis(medium_red_square, touching, right_edge, a).\nis(small_green_circle, above, big_red_square).\nis(big_red_square, above, medium_red_square).\nis(medium_green_square, touching, left_edge, b).\nis(medium_green_square, below, medium_red_square).\nis(medium_red_square, above, small_green_square).\nis(medium_red_square, left, small_green_square).\nis(medium_red_triangle, below, small_green_square).\nis(medium_red_triangle, left, small_green_square).\nis(b, left, a).\n\n% Query\nquery(Relation) :- object(RedSquare, _, red, square, _), object(GreenObj, _, green, _, _), is(RedSquare, above, GreenObj), object(RedTriangle, _, red, triangle, _), object(GreenObj2, _, green, _, _), is(RedTriangle, left, GreenObj2).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "above",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(big_red_square, large, red, square, a).\nobject(big_red_triangle, large, red, triangle, a).\nobject(medium_red_square, medium, red, square, a).\nobject(small_green_circle, small, green, circle, a).\nobject(medium_green_square, medium, green, square, b).\nobject(medium_red_square, medium, red, square, b).\nobject(small_green_square, small, green, square, b).\nobject(medium_red_triangle, medium, red, triangle, b).\nis(big_red_triangle, touching, medium_red_square).\nis(medium_red_square, touching, bottom_edge, a).\nis(big_red_square, touching, right_edge, a).\nis(medium_red_square, touching, a).\nis(small_green_circle, above, big_red_square).\nis(big_red_square, above, medium_red_square).\nis(medium_green_square, touching, b).\nis(medium_green_square, below, medium_red_square).\nis(medium_red_square, above, small_green_square).\nis(medium_red_square, left, small_green_square).\nis(medium_red_triangle, below, small_green_square).\nis(medium_red_triangle, left, small_green_square).\nis(b, left, a).\n\n% Query\nquery(Relation) :- object(RedSquare, _, red, square, _), object(GreenObj, _, green, _, _), is(RedSquare, above, GreenObj), object(RedTriangle, _, red, triangle, _), object(GreenObj2, _, green, _, _), is(RedTriangle, left, GreenObj2).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "Error: grounding stopped because of errors"
  },
  {
    "context": "We have three blocks A, B, and C. Block B is to the right of block A and C and also is above block C. Block A is above block C. Block A has a big blue square above a big blue triangle. Block B has a big black circle to the left of a medium black triangle which is above and to the left of a medium yellow square. Block C has a medium yellow circle touching the top edge of the block and a big black circle touvhing the bottom edge of the block. Above the big circle there is a medium blue triangle which is below and to the left of a big blue triangle.",
    "question": "Where is the yellow square regarding to the big black circle above a yellow circle?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_blue_square, large, blue, square, a).\nobject(big_blue_triangle, large, blue, triangle, a).\nis(big_blue_square, above, big_blue_triangle).\nobject(big_black_circle, large, black, circle, b).\nobject(medium_black_triangle, medium, black, triangle, b).\nis(medium_black_triangle, above_and_left, medium_yellow_square).\nobject(medium_yellow_square, medium, yellow, square, b).\nis(big_black_circle, left, medium_black_triangle).\nobject(medium_yellow_circle, medium, yellow, circle, c).\nis(medium_yellow_circle, touching, c).\nobject(big_black_circle, large, black, circle, c).\nis(big_black_circle, touching, c).\nobject(medium_blue_triangle, medium, blue, triangle, c).\nis(medium_blue_triangle, below_and_left, big_blue_triangle).\nobject(big_blue_triangle, large, blue, triangle, c).\nis(big_blue_triangle, above, medium_blue_triangle).\nis(b, right, a).\nis(b, above, c).\nis(a, above, c).\n\n% Query\nquery(Location) :- object(MediumYellowSquare, _, yellow, square, _), \n                    object(BigBlackCircle, _, black, circle, _), \n                    object(YellowCircle, _, yellow, circle, _), \n                    is(MediumYellowSquare, Location, BigBlackCircle), \n                    is(YellowCircle, touching, _).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\n\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\n\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), \n                  is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, \n                  O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "right",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_blue_square, large, blue, square, a).\nobject(big_blue_triangle, large, blue, triangle, a).\nis(big_blue_square, above, big_blue_triangle).\nobject(big_black_circle, large, black, circle, b).\nobject(medium_black_triangle, medium, black, triangle, b).\nis(medium_black_triangle, above_and_left, medium_yellow_square).\nobject(medium_yellow_square, medium, yellow, square, b).\nis(big_black_circle, left, medium_black_triangle).\nobject(medium_yellow_circle, medium, yellow, circle, c).\nis(medium_yellow_circle, touching, c).\nobject(big_black_circle, large, black, circle, c).\nis(big_black_circle, touching, c).\nobject(medium_blue_triangle, medium, blue, triangle, c).\nis(medium_blue_triangle, below_and_left, big_blue_triangle).\nobject(big_blue_triangle, large, blue, triangle, c).\nis(big_blue_triangle, above, medium_blue_triangle).\nis(b, right, a).\nis(b, above, c).\nis(a, above, c).\n\n% Query\nquery(Location) :- object(MediumYellowSquare, _, yellow, square, _), \n                    object(BigBlackCircle, _, black, circle, _), \n                    object(YellowCircle, _, yellow, circle, _), \n                    is(MediumYellowSquare, Location, BigBlackCircle), \n                    is(YellowCircle, touching, _).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\n\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\n\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), \n                  is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, \n                  O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. In A there is a small blue circle. There is another block called B Which is to the right of A. In B, there is a large yellow square, Which is near and to the left of a small yellow square. Above both squares there is a black triangle. To the right of B there is a block called C. In C, there is a black square that is to the right and far from a yellow triangle.",
    "question": "What is the relation between the black object above a small shape and the black thing to the right the large thing?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle, small, blue, circle, a).\nobject(large_yellow_square, large, yellow, square, b).\nobject(small_yellow_square, small, yellow, square, b).\nobject(black_triangle, unknown, black, triangle, b).\nobject(black_square, unknown, black, square, c).\nobject(yellow_triangle, unknown, yellow, triangle, c).\nis(b, right, a).\nis(large_yellow_square, near, small_yellow_square).\nis(large_yellow_square, left, small_yellow_square).\nis(black_triangle, above, large_yellow_square).\nis(black_triangle, above, small_yellow_square).\nis(c, right, b).\nis(black_square, right, yellow_triangle).\nis(black_square, far, yellow_triangle).\n\n% Query\nquery(Relation) :- object(BlackAbove, _, black, _, _), object(_, _, _, _, B), is(BlackAbove, Relation, _), object(LargeThing, large, _, _, B), object(BlackRight, _, black, _, _), is(BlackRight, right, LargeThing).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "left",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle, small, blue, circle, a).\nobject(large_yellow_square, large, yellow, square, b).\nobject(small_yellow_square, small, yellow, square, b).\nobject(black_triangle, unknown, black, triangle, b).\nobject(black_square, unknown, black, square, c).\nobject(yellow_triangle, unknown, yellow, triangle, c).\nis(b, right, a).\nis(large_yellow_square, near, small_yellow_square).\nis(large_yellow_square, left, small_yellow_square).\nis(black_triangle, above, large_yellow_square).\nis(black_triangle, above, small_yellow_square).\nis(c, right, b).\nis(black_square, right, yellow_triangle).\nis(black_square, far, yellow_triangle).\n\n% Query\nquery(Relation) :- object(BlackAbove, _, black, _, _), object(_, _, _, _, B), is(BlackAbove, Relation, _), object(LargeThing, large, _, _, B), object(BlackRight, _, black, _, _), is(BlackRight, right, LargeThing).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks A, B, and C. Block A is below blocks B and C. It has three circles. The fist circle is big and yellow which is touching the bottom edge of this block. Another is medium and blue which is to the right of the big yellow circle and below and to the right of the medium yellow circle. Block B has a medium yellow circle and a medium black square which are touhing the right edge of this block. there is amedium blue circle to the left of the yellow and black objects in this block. Block C is to the right of the block B. It has a big yellow square that is touching the right edge of the block. It is above a big blue triangle. To the right of the big blue triangle there is a small black circle.",
    "question": "What is the relation between the big yellow circle and the yellow circle above a blue circle?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_yellow_circle, big, yellow, circle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(medium_yellow_circle, medium, yellow, circle, a).\nis(big_yellow_circle, touching, a).\nis(medium_blue_circle, to_the_right, big_yellow_circle).\nis(medium_blue_circle, below, medium_yellow_circle).\nobject(medium_yellow_circle, medium, yellow, circle, b).\nobject(medium_black_square, medium, black, square, b).\nis(medium_yellow_circle, touching, b).\nis(medium_black_square, touching, b).\nis(medium_blue_circle, left, medium_yellow_circle).\nis(medium_blue_circle, left, medium_black_square).\nobject(big_yellow_square, big, yellow, square, c).\nobject(big_blue_triangle, big, blue, triangle, c).\nis(big_yellow_square, touching, c).\nis(big_blue_triangle, below, big_yellow_square).\nobject(small_black_circle, small, black, circle, c).\nis(small_black_circle, to_the_right, big_blue_triangle).\nis(b, to_the_right, a).\nis(c, to_the_right, b).\n\n% Query\nquery(Relation) :- object(big_yellow_circle, big, yellow, circle, a), object(medium_yellow_circle, medium, yellow, circle, _), is(big_yellow_circle, Relation, medium_yellow_circle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "below",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_yellow_circle, big, yellow, circle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(medium_yellow_circle, medium, yellow, circle, a).\nis(big_yellow_circle, touching, a).\nis(medium_blue_circle, to_the_right, big_yellow_circle).\nis(medium_blue_circle, below, medium_yellow_circle).\nobject(medium_yellow_circle, medium, yellow, circle, b).\nobject(medium_black_square, medium, black, square, b).\nis(medium_yellow_circle, touching, b).\nis(medium_black_square, touching, b).\nis(medium_blue_circle, left, medium_yellow_circle).\nis(medium_blue_circle, left, medium_black_square).\nobject(big_yellow_square, big, yellow, square, c).\nobject(big_blue_triangle, big, blue, triangle, c).\nis(big_yellow_square, touching, c).\nis(big_blue_triangle, below, big_yellow_square).\nobject(small_black_circle, small, black, circle, c).\nis(small_black_circle, to_the_right, big_blue_triangle).\nis(b, to_the_right, a).\nis(c, to_the_right, b).\n\n% Query\nquery(Relation) :- object(big_yellow_circle, big, yellow, circle, a), object(medium_yellow_circle, medium, yellow, circle, _), is(big_yellow_circle, Relation, medium_yellow_circle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "below"
  },
  {
    "context": "There are three blocks A, B, and C. Block A is below blocks B and C. It has three circles. The fist circle is big and yellow which is touching the bottom edge of this block. Another is medium and blue which is to the right of the big yellow circle and below and to the right of the medium yellow circle. Block B has a medium yellow circle and a medium black square which are touhing the right edge of this block. there is amedium blue circle to the left of the yellow and black objects in this block. Block C is to the right of the block B. It has a big yellow square that is touching the right edge of the block. It is above a big blue triangle. To the right of the big blue triangle there is a small black circle.",
    "question": "What is the relation between the small circle and the big square?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_yellow_circle, big, yellow, circle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(medium_yellow_circle, medium, yellow, circle, a).\nis(big_yellow_circle, touching, a).\nis(medium_blue_circle, to_the_right, big_yellow_circle).\nis(medium_blue_circle, below, medium_yellow_circle).\nobject(medium_yellow_circle, medium, yellow, circle, b).\nobject(medium_black_square, medium, black, square, b).\nis(medium_yellow_circle, touching, b).\nis(medium_black_square, touching, b).\nis(medium_blue_circle, left, medium_yellow_circle).\nis(medium_blue_circle, left, medium_black_square).\nobject(big_yellow_square, big, yellow, square, c).\nobject(big_blue_triangle, big, blue, triangle, c).\nis(big_yellow_square, touching, c).\nis(big_blue_triangle, below, big_yellow_square).\nobject(small_black_circle, small, black, circle, c).\nis(small_black_circle, to_the_right, big_blue_triangle).\nis(a, below, b).\nis(a, below, c).\nis(b, left, c).\n\n% Query\nquery(Relation) :- object(big_yellow_square, big, yellow, square, c), object(small_black_circle, small, black, circle, c), is(small_black_circle, Relation, big_yellow_square).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.\n",
    "actual_answer": "left",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_yellow_circle, big, yellow, circle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(medium_yellow_circle, medium, yellow, circle, a).\nis(big_yellow_circle, touching, a).\nis(medium_blue_circle, to_the_right, big_yellow_circle).\nis(medium_blue_circle, below, medium_yellow_circle).\nobject(medium_yellow_circle, medium, yellow, circle, b).\nobject(medium_black_square, medium, black, square, b).\nis(medium_yellow_circle, touching, b).\nis(medium_black_square, touching, b).\nis(medium_blue_circle, left, medium_yellow_circle).\nis(medium_blue_circle, left, medium_black_square).\nobject(big_yellow_square, big, yellow, square, c).\nobject(big_blue_triangle, big, blue, triangle, c).\nis(big_yellow_square, touching, c).\nis(big_blue_triangle, below, big_yellow_square).\nobject(small_black_circle, small, black, circle, c).\nis(small_black_circle, to_the_right, big_blue_triangle).\nis(a, below, b).\nis(a, below, c).\nis(b, left, c).\n\n% Query\nquery(Relation) :- object(big_yellow_square, big, yellow, square, c), object(small_black_circle, small, black, circle, c), is(small_black_circle, Relation, big_yellow_square).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "left"
  },
  {
    "context": "There is a block called A. It has a big blue circle and a red square. The big blue circle is below the red square. There is another block called B Which is above block A. There are a small blue circle and a yellow square in this block. The small blue circle is to the left of the yellow square.",
    "question": "Where is the circle left to a square regarding to a circle below a square?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nobject(big_blue_circle, large, blue, circle, a).\nobject(red_square, unknown, red, square, a).\nis(big_blue_circle, below, red_square).\nobject(small_blue_circle, small, blue, circle, b).\nobject(yellow_square, unknown, yellow, square, b).\nis(small_blue_circle, left, yellow_square).\nis(b, above, a).\n\n% Query\nquery(Relation) :- object(Circle1, _, _, circle, _), object(Square1, _, _, square, _), is(Circle1, below, Square1), object(Circle2, _, _, circle, _), object(Square2, _, _, square, _), is(Circle2, Relation, Square2), Circle1 != Circle2, Square1 != Square2.\n#show query/1.\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.",
    "actual_answer": "above",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(big_blue_circle, large, blue, circle, a).\nobject(red_square, unknown, red, square, a).\nis(big_blue_circle, below, red_square).\nobject(small_blue_circle, small, blue, circle, b).\nobject(yellow_square, unknown, yellow, square, b).\nis(small_blue_circle, left, yellow_square).\nis(b, above, a).\n\n% Query\nquery(Relation) :- object(Circle1, _, _, circle, _), object(Square1, _, _, square, _), is(Circle1, below, Square1), object(Circle2, _, _, circle, _), object(Square2, _, _, square, _), is(Circle2, Relation, Square2), Circle1 != Circle2, Square1 != Square2.\n#show query/1.",
    "asp_result": "left"
  },
  {
    "context": "There are three blocks A, B and C. A blue triangle is touching the right edge of block A. Block B has four objects. There is a medium black square at the top of this block. There is a big blue square at the top of this block and near to the medium square. Two big black circles are below these objects. one of the circles is touching the bottom edge of its block. block C is above A and block B is above it. Three medium blue triangles and two squares are in this block. the squares are below all triangles. two of the triangles and one of the squares are to the left of the  other square.",
    "question": "where is the triangle in block A regarding to a circle in block B?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(blue_triangle, unknown, blue, triangle, a).\nis(blue_triangle, touching, right_edge_of_a).\nobject(medium_black_square, medium, black, square, b).\nobject(big_blue_square, big, blue, square, b).\nis(big_blue_square, near, medium_black_square).\nobject(big_black_circle1, big, black, circle, b).\nobject(big_black_circle2, big, black, circle, b).\nis(big_black_circle1, touching, bottom_edge_of_b).\nis(b, above, c).\nis(c, above, a).\nobject(medium_blue_triangle1, medium, blue, triangle, c).\nobject(medium_blue_triangle2, medium, blue, triangle, c).\nobject(medium_blue_triangle3, medium, blue, triangle, c).\nobject(square1, unknown, unknown, square, c).\nobject(square2, unknown, unknown, square, c).\nis(square1, below, medium_blue_triangle1).\nis(square1, below, medium_blue_triangle2).\nis(square1, below, medium_blue_triangle3).\nis(square2, below, medium_blue_triangle1).\nis(square2, below, medium_blue_triangle2).\nis(square2, below, medium_blue_triangle3).\nis(medium_blue_triangle1, left, square2).\nis(medium_blue_triangle2, left, square2).\nis(medium_blue_triangle3, not_left, square2).\n\n% Query\nquery(Relation) :- object(blue_triangle, _, _, triangle, a), object(big_black_circle, _, _, circle, b), is(blue_triangle, Relation, big_black_circle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "below",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(blue_triangle, unknown, blue, triangle, a).\nis(blue_triangle, touching, right_edge_of_a).\nobject(medium_black_square, medium, black, square, b).\nobject(big_blue_square, big, blue, square, b).\nis(big_blue_square, near, medium_black_square).\nobject(big_black_circle1, big, black, circle, b).\nobject(big_black_circle2, big, black, circle, b).\nis(big_black_circle1, touching, bottom_edge_of_b).\nis(b, above, c).\nis(c, above, a).\nobject(medium_blue_triangle1, medium, blue, triangle, c).\nobject(medium_blue_triangle2, medium, blue, triangle, c).\nobject(medium_blue_triangle3, medium, blue, triangle, c).\nobject(square1, unknown, unknown, square, c).\nobject(square2, unknown, unknown, square, c).\nis(square1, below, medium_blue_triangle1).\nis(square1, below, medium_blue_triangle2).\nis(square1, below, medium_blue_triangle3).\nis(square2, below, medium_blue_triangle1).\nis(square2, below, medium_blue_triangle2).\nis(square2, below, medium_blue_triangle3).\nis(medium_blue_triangle1, left, square2).\nis(medium_blue_triangle2, left, square2).\nis(medium_blue_triangle3, not_left, square2).\n\n% Query\nquery(Relation) :- object(blue_triangle, _, _, triangle, a), object(big_black_circle, _, _, circle, b), is(blue_triangle, Relation, big_black_circle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. It has a small yellow square, a smal black triangle and a small black circle. A medium blue square is above and to the right of the smal black triangle and circle. The small yellow square is above the medium square. The small black circle is above a big blue circle and to the right of the small black triangle. Block A is below another block called B.block B has two big yellow triangle and a big black circle that is touching the top edge of this block. One of the triangles is touching the bottom edge of block B.",
    "question": "what is the relation between the big yellow triangle that is touching the bottom edge of a block and another big yellow triangle?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP program:\n\n% Facts\nblock(a).\nblock(b).\nobject(small_yellow_square, small, yellow, square, a).\nobject(small_black_triangle, small, black, triangle, a).\nobject(small_black_circle, small, black, circle, a).\nobject(medium_blue_square, medium, blue, square, a).\nobject(big_blue_circle, big, blue, circle, a).\nobject(big_yellow_triangle_bottom, big, yellow, triangle, b).\nobject(big_yellow_triangle_top, big, yellow, triangle, b).\nobject(big_black_circle, big, black, circle, b).\nis(small_yellow_square, above, medium_blue_square).\nis(medium_blue_square, above_and_right, small_black_triangle).\nis(medium_blue_square, above_and_right, small_black_circle).\nis(small_yellow_square, above, medium_blue_square).\nis(small_black_circle, above, big_blue_circle).\nis(small_black_circle, right, small_black_triangle).\nis(big_yellow_triangle_bottom, touching, block(b)).\nis(big_yellow_triangle_top, touching, block(b)).\nis(big_black_circle, touching, block(b)).\nis(a, below, b).\n\n% Query\nquery(Relation) :- object(big_yellow_triangle_bottom, big, yellow, triangle, _), object(big_yellow_triangle_top, big, yellow, triangle, _), is(big_yellow_triangle_bottom, Relation, big_yellow_triangle_top).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "below",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(small_yellow_square, small, yellow, square, a).\nobject(small_black_triangle, small, black, triangle, a).\nobject(small_black_circle, small, black, circle, a).\nobject(medium_blue_square, medium, blue, square, a).\nobject(big_blue_circle, big, blue, circle, a).\nobject(big_yellow_triangle_bottom, big, yellow, triangle, b).\nobject(big_yellow_triangle_top, big, yellow, triangle, b).\nobject(big_black_circle, big, black, circle, b).\nis(small_yellow_square, above, medium_blue_square).\nis(medium_blue_square, above_and_right, small_black_triangle).\nis(medium_blue_square, above_and_right, small_black_circle).\nis(small_yellow_square, above, medium_blue_square).\nis(small_black_circle, above, big_blue_circle).\nis(small_black_circle, right, small_black_triangle).\nis(big_yellow_triangle_bottom, touching, block(b)).\nis(big_yellow_triangle_top, touching, block(b)).\nis(big_black_circle, touching, block(b)).\nis(a, below, b).\n\n% Query\nquery(Relation) :- object(big_yellow_triangle_bottom, big, yellow, triangle, _), object(big_yellow_triangle_top, big, yellow, triangle, _), is(big_yellow_triangle_bottom, Relation, big_yellow_triangle_top).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "below"
  },
  {
    "context": "I see three blocks. The first block is (A) has two big and medium green triangles. The medium one is above the big one. Below and to the left of these two triangles, there is a midsize green circle. below the first block the other blocks exist, block B and C. Block C is to the right of the block B. Block B has medium white rectangle and circle to the right of a medium green triangle. The rectangle is above the circle. Block C has a huge red rectangle touching bottom and right edge, a little white circle touching the top edge and a midsize red circle touching the left edge of the block.",
    "question": "What is the relation between the white object above a red square and the white object above another white object?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_green_triangle, large, green, triangle, a).\nobject(med_green_triangle, medium, green, triangle, a).\nobject(mid_green_circle, midsize, green, circle, a).\nis(med_green_triangle, above, big_green_triangle).\nis(mid_green_circle, below_and_left, big_green_triangle).\nis(b, below, a).\nis(c, right, b).\nobject(med_white_rectangle, medium, white, rectangle, b).\nobject(med_green_triangle, medium, green, triangle, b).\nobject(med_white_circle, medium, white, circle, b).\nis(med_white_rectangle, above, med_white_circle).\nis(med_white_circle, right, med_green_triangle).\nobject(huge_red_rectangle, huge, red, rectangle, c).\nobject(lit_white_circle, little, white, circle, c).\nobject(mid_red_circle, midsize, red, circle, c).\nis(huge_red_rectangle, touching, c).\nis(lit_white_circle, touching, c).\nis(mid_red_circle, touching, c).\n\n% Query\nquery(Relation) :- object(WhiteObj1, _, white, _, _), object(WhiteObj2, _, white, _, _), object(RedSquare, _, _, square, _), is(WhiteObj1, above, RedSquare), is(WhiteObj2, above, WhiteObj1), is(WhiteObj1, Relation, WhiteObj2).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "right",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_green_triangle, large, green, triangle, a).\nobject(med_green_triangle, medium, green, triangle, a).\nobject(mid_green_circle, midsize, green, circle, a).\nis(med_green_triangle, above, big_green_triangle).\nis(mid_green_circle, below_and_left, big_green_triangle).\nis(b, below, a).\nis(c, right, b).\nobject(med_white_rectangle, medium, white, rectangle, b).\nobject(med_green_triangle, medium, green, triangle, b).\nobject(med_white_circle, medium, white, circle, b).\nis(med_white_rectangle, above, med_white_circle).\nis(med_white_circle, right, med_green_triangle).\nobject(huge_red_rectangle, huge, red, rectangle, c).\nobject(lit_white_circle, little, white, circle, c).\nobject(mid_red_circle, midsize, red, circle, c).\nis(huge_red_rectangle, touching, c).\nis(lit_white_circle, touching, c).\nis(mid_red_circle, touching, c).\n\n% Query\nquery(Relation) :- object(WhiteObj1, _, white, _, _), object(WhiteObj2, _, white, _, _), object(RedSquare, _, _, square, _), is(WhiteObj1, above, RedSquare), is(WhiteObj2, above, WhiteObj1), is(WhiteObj1, Relation, WhiteObj2).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "right"
  },
  {
    "context": "There is a block called A. It has a small yellow square, a smal black triangle and a small black circle. A medium blue square is above and to the right of the smal black triangle and circle. The small yellow square is above the medium square. The small black circle is above a big blue circle and to the right of the small black triangle. Block A is below another block called B.block B has two big yellow triangle and a big black circle that is touching the top edge of this block. One of the triangles is touching the bottom edge of block B.",
    "question": "What is the relation between the big blue circle and the small square?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n\n% Facts\nblock(a).\nblock(b).\nobject(small_yellow_square, small, yellow, square, a).\nobject(small_black_triangle, small, black, triangle, a).\nobject(small_black_circle, small, black, circle, a).\nobject(medium_blue_square, medium, blue, square, a).\nobject(big_blue_circle, big, blue, circle, a).\nobject(big_yellow_triangle1, big, yellow, triangle, b).\nobject(big_yellow_triangle2, big, yellow, triangle, b).\nobject(big_black_circle, big, black, circle, b).\nis(medium_blue_square, above, small_black_triangle).\nis(medium_blue_square, above, small_black_circle).\nis(medium_blue_square, right, small_black_triangle).\nis(medium_blue_square, right, small_black_circle).\nis(small_yellow_square, above, medium_blue_square).\nis(small_black_circle, above, big_blue_circle).\nis(small_black_circle, right, small_black_triangle).\nis(big_black_circle, touching, b).\nis(big_yellow_triangle1, touching, b).\nis(big_yellow_triangle2, touching, b).\nis(a, below, b).\n\n% Query\nquery(Relation) :- object(big_blue_circle, big, blue, circle, _), object(small_yellow_square, small, yellow, square, _), is(big_blue_circle, Relation, small_yellow_square).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.\n",
    "actual_answer": "below",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(small_yellow_square, small, yellow, square, a).\nobject(small_black_triangle, small, black, triangle, a).\nobject(small_black_circle, small, black, circle, a).\nobject(medium_blue_square, medium, blue, square, a).\nobject(big_blue_circle, big, blue, circle, a).\nobject(big_yellow_triangle1, big, yellow, triangle, b).\nobject(big_yellow_triangle2, big, yellow, triangle, b).\nobject(big_black_circle, big, black, circle, b).\nis(medium_blue_square, above, small_black_triangle).\nis(medium_blue_square, above, small_black_circle).\nis(medium_blue_square, right, small_black_triangle).\nis(medium_blue_square, right, small_black_circle).\nis(small_yellow_square, above, medium_blue_square).\nis(small_black_circle, above, big_blue_circle).\nis(small_black_circle, right, small_black_triangle).\nis(big_black_circle, touching, b).\nis(big_yellow_triangle1, touching, b).\nis(big_yellow_triangle2, touching, b).\nis(a, below, b).\n\n% Query\nquery(Relation) :- object(big_blue_circle, big, blue, circle, _), object(small_yellow_square, small, yellow, square, _), is(big_blue_circle, Relation, small_yellow_square).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "below"
  },
  {
    "context": "There exist a big red square, a big red triangle, a medium red square, and a small green circle in a block called A. The triangle and medium square are touching the bottom edge of the block. The big and medium square are touching the right edge of the block. And the circle is above the big square which is above the medium square. There is another block called B to the left of block A. A medium green square is touching the left edge of block B and is below a medium red square. The medium red square is above and to the left of a small green square. Also a medium red triangle is below and to the left of the small square.",
    "question": "Where is the red triangle which is to the right of a small square regarding to the red square above another red square?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nobject(big_red_square, large, red, square, a).\nobject(big_red_triangle, large, red, triangle, a).\nobject(medium_red_square, medium, red, square, a).\nobject(small_green_circle, small, green, circle, a).\nis(big_red_triangle, touching, a).\nis(medium_red_square, touching, a).\nis(big_red_square, touching, a).\nis(medium_red_square, right, big_red_square).\nis(big_red_square, above, medium_red_square).\nis(small_green_circle, above, big_red_square).\nis(big_red_square, above, medium_red_square).\nis(medium_green_square, touching, b).\nis(medium_green_square, below, medium_red_square_b).\nis(medium_red_square_b, above, small_green_square_b).\nis(medium_red_triangle_b, below, small_green_square_b).\nis(medium_red_square_b, left, medium_red_triangle_b).\nis(b, left, a).\n\n% Query\nquery(Block) :- \n    object(RedTriangle, large, red, triangle, Block), \n    object(SmallSquare, small, _, square, Block), \n    is(RedTriangle, right, SmallSquare), \n    object(RedSquareAbove, large, red, square, Block), \n    is(RedSquareAbove, above, RedSquareBelow), \n    is(RedTriangle, right, RedSquareBelow).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "left, below",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(big_red_square, large, red, square, a).\nobject(big_red_triangle, large, red, triangle, a).\nobject(medium_red_square, medium, red, square, a).\nobject(small_green_circle, small, green, circle, a).\nis(big_red_triangle, touching, a).\nis(medium_red_square, touching, a).\nis(big_red_square, touching, a).\nis(medium_red_square, right, big_red_square).\nis(big_red_square, above, medium_red_square).\nis(small_green_circle, above, big_red_square).\nis(big_red_square, above, medium_red_square).\nis(medium_green_square, touching, b).\nis(medium_green_square, below, medium_red_square_b).\nis(medium_red_square_b, above, small_green_square_b).\nis(medium_red_triangle_b, below, small_green_square_b).\nis(medium_red_square_b, left, medium_red_triangle_b).\nis(b, left, a).\n\n% Query\nquery(Block) :- \n    object(RedTriangle, large, red, triangle, Block), \n    object(SmallSquare, small, _, square, Block), \n    is(RedTriangle, right, SmallSquare), \n    object(RedSquareAbove, large, red, square, Block), \n    is(RedSquareAbove, above, RedSquareBelow), \n    is(RedTriangle, right, RedSquareBelow).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "left"
  },
  {
    "context": "There are three blocks A, B and C. Block A has a medium white triangle and a small red rectangle. There exists a medium white rectangle to the left of the triangle and to the right of the red rectangle. Aove block A there is block B. It has a small white oval touching the bottom edge of the block and a medium white triangle to the right of it. Below block A there is block C. Its has a small green triangle touching the top edge of the block. A medium white triangle is below a small green rectangle. Another small green triangle is below and to the right of the white triangle.",
    "question": "Where is the small shape below the green rectangle regarding to the triangle touching the top edge of a block?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_white_triangle, medium, white, triangle, a).\nobject(small_red_rectangle, small, red, rectangle, a).\nobject(medium_white_rectangle, medium, white, rectangle, a).\nis(medium_white_rectangle, left, medium_white_triangle).\nis(medium_white_rectangle, right, small_red_rectangle).\nobject(small_white_oval, small, white, oval, b).\nis(small_white_oval, touching, b).\nobject(medium_white_triangle_b, medium, white, triangle, b).\nis(medium_white_triangle_b, right, small_white_oval).\nobject(small_green_triangle, small, green, triangle, c).\nis(small_green_triangle, touching, c).\nobject(medium_white_triangle_c, medium, white, triangle, c).\nis(medium_white_triangle_c, below, small_green_rectangle).\nobject(small_green_rectangle, small, green, rectangle, c).\nobject(small_green_triangle_c, small, green, triangle, c).\nis(small_green_triangle_c, below_and_right, medium_white_triangle_c).\n\n% Query\nquery(Location) :- \n    object(SmallShape, small, _, _, _), \n    object(GreenRectangle, small, green, rectangle, _), \n    object(Triangle, _, _, triangle, _), \n    is(SmallShape, below, GreenRectangle), \n    is(Triangle, touching, _), \n    is(SmallShape, Location, Triangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    is(B1, R, B2), \n    O1 != O2, \n    symmetric(R).\nis(O1, R, O3) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    object(O3, _, _, _, B3), \n    is(B1, R, B2), \n    is(B2, R, B3), \n    transitive(R), \n    B1 != B2, \n    B2 != B3, \n    B1 != B3, \n    O1 != O2, \n    O2 != O3, \n    O1 != O3.\n\n#show query/1.",
    "actual_answer": "below",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_white_triangle, medium, white, triangle, a).\nobject(small_red_rectangle, small, red, rectangle, a).\nobject(medium_white_rectangle, medium, white, rectangle, a).\nis(medium_white_rectangle, left, medium_white_triangle).\nis(medium_white_rectangle, right, small_red_rectangle).\nobject(small_white_oval, small, white, oval, b).\nis(small_white_oval, touching, b).\nobject(medium_white_triangle_b, medium, white, triangle, b).\nis(medium_white_triangle_b, right, small_white_oval).\nobject(small_green_triangle, small, green, triangle, c).\nis(small_green_triangle, touching, c).\nobject(medium_white_triangle_c, medium, white, triangle, c).\nis(medium_white_triangle_c, below, small_green_rectangle).\nobject(small_green_rectangle, small, green, rectangle, c).\nobject(small_green_triangle_c, small, green, triangle, c).\nis(small_green_triangle_c, below_and_right, medium_white_triangle_c).\n\n% Query\nquery(Location) :- \n    object(SmallShape, small, _, _, _), \n    object(GreenRectangle, small, green, rectangle, _), \n    object(Triangle, _, _, triangle, _), \n    is(SmallShape, below, GreenRectangle), \n    is(Triangle, touching, _), \n    is(SmallShape, Location, Triangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    is(B1, R, B2), \n    O1 != O2, \n    symmetric(R).\nis(O1, R, O3) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    object(O3, _, _, _, B3), \n    is(B1, R, B2), \n    is(B2, R, B3), \n    transitive(R), \n    B1 != B2, \n    B2 != B3, \n    B1 != B3, \n    O1 != O2, \n    O2 != O3, \n    O1 != O3.\n#show query/1.",
    "asp_result": "below"
  },
  {
    "context": "There is a block. We called it A. It has four medium squares. Two of them are yellow and two of them are blue. one of the blue square is touching the bottom edge of this block. The other bue square is on it. Then the yellow squares are on the second blue square. we have another block called B. block A is on this block. block B has two black square up on each other.",
    "question": "where is the medium blue square number one regarding the medium yellow square number two?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nobject(medium_yellow_square_1, medium, yellow, square, a).\nobject(medium_yellow_square_2, medium, yellow, square, a).\nobject(medium_blue_square_1, medium, blue, square, a).\nobject(medium_blue_square_2, medium, blue, square, a).\nis(medium_blue_square_1, touching, a).\nis(medium_blue_square_2, on, a).\nis(medium_yellow_square_1, on, medium_blue_square_2).\nis(medium_yellow_square_2, on, medium_blue_square_2).\nobject(black_square_1, unknown, black, square, b).\nobject(black_square_2, unknown, black, square, b).\nis(black_square_1, on, black_square_2).\nis(a, on, b).\n\n% Query\nquery(Relation) :- object(medium_blue_square_1, medium, blue, square, a), object(medium_yellow_square_2, medium, yellow, square, a), is(medium_blue_square_1, Relation, medium_yellow_square_2).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\n\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\n\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "below",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(medium_yellow_square_1, medium, yellow, square, a).\nobject(medium_yellow_square_2, medium, yellow, square, a).\nobject(medium_blue_square_1, medium, blue, square, a).\nobject(medium_blue_square_2, medium, blue, square, a).\nis(medium_blue_square_1, touching, a).\nis(medium_blue_square_2, on, a).\nis(medium_yellow_square_1, on, medium_blue_square_2).\nis(medium_yellow_square_2, on, medium_blue_square_2).\nobject(black_square_1, unknown, black, square, b).\nobject(black_square_2, unknown, black, square, b).\nis(black_square_1, on, black_square_2).\nis(a, on, b).\n\n% Query\nquery(Relation) :- object(medium_blue_square_1, medium, blue, square, a), object(medium_yellow_square_2, medium, yellow, square, a), is(medium_blue_square_1, Relation, medium_yellow_square_2).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\n\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\n\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "below"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the left of B and B is to the left of C. In A, there is a small black circle near and above a small yellow triangle. The small yellow triangle is far above the large blue circle. There is a large black square near and to the right of the large blue circle. In B, there is a small blue square near and above a small black circle. The small black circle near and above a large yellow circle. The large yellow circle is far above a large black circle. In C, there is a large blue circle near and to the left of a small blue triangle. The small blue triangle is far to the left small yellow triangle. The small yellow triangle is near and to the left of a small black square.",
    "question": "What is the relation between the small blue thing in C and the large blue thing in C?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_black_circle, small, black, circle, a).\nobject(small_yellow_triangle, small, yellow, triangle, a).\nobject(large_blue_circle, large, blue, circle, a).\nobject(large_black_square, large, black, square, a).\nis(small_black_circle, near, small_yellow_triangle).\nis(small_black_circle, above, small_yellow_triangle).\nis(small_yellow_triangle, far_above, large_blue_circle).\nis(large_black_square, near, large_blue_circle).\nis(large_black_square, to_the_right, large_blue_circle).\nobject(small_blue_square, small, blue, square, b).\nobject(small_black_circle, small, black, circle, b).\nobject(large_yellow_circle, large, yellow, circle, b).\nobject(large_black_circle, large, black, circle, b).\nis(small_blue_square, near, small_black_circle).\nis(small_blue_square, above, small_black_circle).\nis(small_black_circle, near, large_yellow_circle).\nis(small_black_circle, above, large_yellow_circle).\nis(large_yellow_circle, far_above, large_black_circle).\nobject(large_blue_circle, large, blue, circle, c).\nobject(small_blue_triangle, small, blue, triangle, c).\nobject(small_yellow_triangle, small, yellow, triangle, c).\nobject(small_black_square, small, black, square, c).\nis(large_blue_circle, near, small_blue_triangle).\nis(large_blue_circle, left, small_blue_triangle).\nis(small_blue_triangle, far_left, small_yellow_triangle).\nis(small_yellow_triangle, near, small_black_square).\nis(small_yellow_triangle, left, small_black_square).\nis(a, left, b).\nis(b, left, c).\n\n% Query\nquery(Relation) :- object(SmallBlue, small, blue, _, c), object(LargeBlue, large, blue, _, c), is(SmallBlue, Relation, LargeBlue).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "right, near to",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_black_circle, small, black, circle, a).\nobject(small_yellow_triangle, small, yellow, triangle, a).\nobject(large_blue_circle, large, blue, circle, a).\nobject(large_black_square, large, black, square, a).\nis(small_black_circle, near, small_yellow_triangle).\nis(small_black_circle, above, small_yellow_triangle).\nis(small_yellow_triangle, far_above, large_blue_circle).\nis(large_black_square, near, large_blue_circle).\nis(large_black_square, to_the_right, large_blue_circle).\nobject(small_blue_square, small, blue, square, b).\nobject(small_black_circle, small, black, circle, b).\nobject(large_yellow_circle, large, yellow, circle, b).\nobject(large_black_circle, large, black, circle, b).\nis(small_blue_square, near, small_black_circle).\nis(small_blue_square, above, small_black_circle).\nis(small_black_circle, near, large_yellow_circle).\nis(small_black_circle, above, large_yellow_circle).\nis(large_yellow_circle, far_above, large_black_circle).\nobject(large_blue_circle, large, blue, circle, c).\nobject(small_blue_triangle, small, blue, triangle, c).\nobject(small_yellow_triangle, small, yellow, triangle, c).\nobject(small_black_square, small, black, square, c).\nis(large_blue_circle, near, small_blue_triangle).\nis(large_blue_circle, left, small_blue_triangle).\nis(small_blue_triangle, far_left, small_yellow_triangle).\nis(small_yellow_triangle, near, small_black_square).\nis(small_yellow_triangle, left, small_black_square).\nis(a, left, b).\nis(b, left, c).\n\n% Query\nquery(Relation) :- object(SmallBlue, small, blue, _, c), object(LargeBlue, large, blue, _, c), is(SmallBlue, Relation, LargeBlue).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "near"
  },
  {
    "context": "We have three blocks A, B, and C. Block B is to the right of block A and C and also is above block C. Block A is above block C. Block A has a big blue square above a big blue triangle. Block B has a big black circle to the left of a medium black triangle which is above and to the left of a medium yellow square. Block C has a medium yellow circle touching the top edge of the block and a big black circle touvhing the bottom edge of the block. Above the big circle there is a medium blue triangle which is below and to the left of a big blue triangle.",
    "question": "What is the relation between the big circle below another circle and the big blue triangle below another big blue triangle?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_blue_square, large, blue, square, a).\nobject(big_blue_triangle, large, blue, triangle, a).\nobject(big_black_circle, large, black, circle, b).\nobject(medium_black_triangle, medium, black, triangle, b).\nobject(medium_yellow_square, medium, yellow, square, b).\nobject(medium_yellow_circle, medium, yellow, circle, c).\nobject(big_black_circle, large, black, circle, c).\nobject(medium_blue_triangle, medium, blue, triangle, c).\nobject(big_blue_triangle_2, large, blue, triangle, c).\nis(b, right, a).\nis(b, above, c).\nis(a, above, c).\nis(big_blue_square, above, big_blue_triangle).\nis(big_black_circle, left, medium_black_triangle).\nis(medium_black_triangle, above_and_left, medium_yellow_square).\nis(medium_yellow_circle, touching, c).\nis(big_black_circle, touching, c).\nis(medium_blue_triangle, below_and_left, big_blue_triangle_2).\nis(big_blue_triangle, below, big_blue_square).\n\n% Query\nquery(Relation) :- object(BigCircle, large, _, circle, _), object(BigBlueTriangle, large, blue, triangle, _), is(BigCircle, below, _), is(BigBlueTriangle, below, _), is(BigCircle, Relation, BigBlueTriangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "below",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_blue_square, large, blue, square, a).\nobject(big_blue_triangle, large, blue, triangle, a).\nobject(big_black_circle, large, black, circle, b).\nobject(medium_black_triangle, medium, black, triangle, b).\nobject(medium_yellow_square, medium, yellow, square, b).\nobject(medium_yellow_circle, medium, yellow, circle, c).\nobject(big_black_circle, large, black, circle, c).\nobject(medium_blue_triangle, medium, blue, triangle, c).\nobject(big_blue_triangle_2, large, blue, triangle, c).\nis(b, right, a).\nis(b, above, c).\nis(a, above, c).\nis(big_blue_square, above, big_blue_triangle).\nis(big_black_circle, left, medium_black_triangle).\nis(medium_black_triangle, above_and_left, medium_yellow_square).\nis(medium_yellow_circle, touching, c).\nis(big_black_circle, touching, c).\nis(medium_blue_triangle, below_and_left, big_blue_triangle_2).\nis(big_blue_triangle, below, big_blue_square).\n\n% Query\nquery(Relation) :- object(BigCircle, large, _, circle, _), object(BigBlueTriangle, large, blue, triangle, _), is(BigCircle, below, _), is(BigBlueTriangle, below, _), is(BigCircle, Relation, BigBlueTriangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "below"
  },
  {
    "context": "There exist a big red square, a big red triangle, a medium red square, and a small green circle in a block called A. The triangle and medium square are touching the bottom edge of the block. The big and medium square are touching the right edge of the block. And the circle is above the big square which is above the medium square. There is another block called B to the left of block A. A medium green square is touching the left edge of block B and is below a medium red square. The medium red square is above and to the left of a small green square. Also a medium red triangle is below and to the left of the small square.",
    "question": "What is the relation between the red square above a green object and a red triangle below a green object?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nobject(big_red_square, large, red, square, a).\nobject(big_red_triangle, large, red, triangle, a).\nobject(medium_red_square, medium, red, square, a).\nobject(small_green_circle, small, green, circle, a).\nobject(medium_green_square, medium, green, square, b).\nobject(medium_red_square, medium, red, square, b).\nobject(small_green_square, small, green, square, b).\nobject(medium_red_triangle, medium, red, triangle, b).\nis(big_red_triangle, touching, medium_red_square).\nis(medium_red_square, touching, bottom_edge, a).\nis(big_red_square, touching, right_edge, a).\nis(medium_red_square, touching, right_edge, a).\nis(small_green_circle, above, big_red_square).\nis(big_red_square, above, medium_red_square).\nis(medium_green_square, touching, left_edge, b).\nis(medium_green_square, below, medium_red_square).\nis(medium_red_square, above, small_green_square).\nis(medium_red_square, left, small_green_square).\nis(medium_red_triangle, below, small_green_square).\nis(medium_red_triangle, left, small_green_square).\nis(b, left, a).\n\n% Query\nquery(Relation) :- \n    object(RedSquare, _, red, square, _), \n    object(GreenObj, _, green, _, _), \n    is(RedSquare, above, GreenObj), \n    object(RedTriangle, _, red, triangle, _), \n    object(GreenObj2, _, green, _, _), \n    is(RedTriangle, below, GreenObj2), \n    is(RedSquare, Relation, RedTriangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    is(B1, R, B2), \n    O1 != O2, \n    symmetric(R).\nis(O1, R, O3) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    object(O3, _, _, _, B3), \n    is(B1, R, B2), \n    is(B2, R, B3), \n    transitive(R), \n    B1 != B2, \n    B2 != B3, \n    B1 != B3, \n    O1 != O2, \n    O2 != O3, \n    O1 != O3.\n\n#show query/1.",
    "actual_answer": "left",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(big_red_square, large, red, square, a).\nobject(big_red_triangle, large, red, triangle, a).\nobject(medium_red_square, medium, red, square, a).\nobject(small_green_circle, small, green, circle, a).\nobject(medium_green_square, medium, green, square, b).\nobject(medium_red_square, medium, red, square, b).\nobject(small_green_square, small, green, square, b).\nobject(medium_red_triangle, medium, red, triangle, b).\nis(big_red_triangle, touching, medium_red_square).\nis(medium_red_square, touching, bottom_edge, a).\nis(big_red_square, touching, right_edge, a).\nis(medium_red_square, touching, right_edge, a).\nis(small_green_circle, above, big_red_square).\nis(big_red_square, above, medium_red_square).\nis(medium_green_square, touching, left_edge, b).\nis(medium_green_square, below, medium_red_square).\nis(medium_red_square, above, small_green_square).\nis(medium_red_square, left, small_green_square).\nis(medium_red_triangle, below, small_green_square).\nis(medium_red_triangle, left, small_green_square).\nis(b, left, a).\n\n% Query\nquery(Relation) :- \n    object(RedSquare, _, red, square, _), \n    object(GreenObj, _, green, _, _), \n    is(RedSquare, above, GreenObj), \n    object(RedTriangle, _, red, triangle, _), \n    object(GreenObj2, _, green, _, _), \n    is(RedTriangle, below, GreenObj2), \n    is(RedSquare, Relation, RedTriangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    is(B1, R, B2), \n    O1 != O2, \n    symmetric(R).\nis(O1, R, O3) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    object(O3, _, _, _, B3), \n    is(B1, R, B2), \n    is(B2, R, B3), \n    transitive(R), \n    B1 != B2, \n    B2 != B3, \n    B1 != B3, \n    O1 != O2, \n    O2 != O3, \n    O1 != O3.\n#show query/1.",
    "asp_result": "left"
  },
  {
    "context": "I see three blocks. The first block is (A) has two big and medium green triangles. The medium one is above the big one. Below and to the left of these two triangles, there is a midsize green circle. below the first block the other blocks exist, block B and C. Block C is to the right of the block B. Block B has medium white rectangle and circle to the right of a medium green triangle. The rectangle is above the circle. Block C has a huge red rectangle touching bottom and right edge, a little white circle touching the top edge and a midsize red circle touching the left edge of the block.",
    "question": "What is the relation between the red circle and red rectangle?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_green_triangle, large, green, triangle, a).\nobject(medium_green_triangle, medium, green, triangle, a).\nobject(midsize_green_circle, midsize, green, circle, a).\nobject(medium_white_rectangle, medium, white, rectangle, b).\nobject(medium_green_triangle, medium, green, triangle, b).\nobject(medium_white_circle, medium, white, circle, b).\nobject(huge_red_rectangle, huge, red, rectangle, c).\nobject(little_white_circle, little, white, circle, c).\nobject(midsize_red_circle, midsize, red, circle, c).\nis(medium_green_triangle, above, big_green_triangle).\nis(midsize_green_circle, below_and_left, big_green_triangle).\nis(medium_white_rectangle, above, medium_white_circle).\nis(medium_green_triangle, left, medium_white_rectangle).\nis(block_c, right, block_b).\nis(huge_red_rectangle, touching, midsize_red_circle).\nis(huge_red_rectangle, touching, little_white_circle).\nis(midsize_red_circle, touching, huge_red_rectangle).\nis(little_white_circle, touching, huge_red_rectangle).\n\n% Query\nquery(Relation) :- object(midsize_red_circle, _, _, circle, _), object(huge_red_rectangle, _, _, rectangle, _), is(midsize_red_circle, Relation, huge_red_rectangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "left, far from",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(big_green_triangle, large, green, triangle, a).\nobject(medium_green_triangle, medium, green, triangle, a).\nobject(midsize_green_circle, midsize, green, circle, a).\nobject(medium_white_rectangle, medium, white, rectangle, b).\nobject(medium_green_triangle, medium, green, triangle, b).\nobject(medium_white_circle, medium, white, circle, b).\nobject(huge_red_rectangle, huge, red, rectangle, c).\nobject(little_white_circle, little, white, circle, c).\nobject(midsize_red_circle, midsize, red, circle, c).\nis(medium_green_triangle, above, big_green_triangle).\nis(midsize_green_circle, below_and_left, big_green_triangle).\nis(medium_white_rectangle, above, medium_white_circle).\nis(medium_green_triangle, left, medium_white_rectangle).\nis(block_c, right, block_b).\nis(huge_red_rectangle, touching, midsize_red_circle).\nis(huge_red_rectangle, touching, little_white_circle).\nis(midsize_red_circle, touching, huge_red_rectangle).\nis(little_white_circle, touching, huge_red_rectangle).\n\n% Query\nquery(Relation) :- object(midsize_red_circle, _, _, circle, _), object(huge_red_rectangle, _, _, rectangle, _), is(midsize_red_circle, Relation, huge_red_rectangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "touching"
  },
  {
    "context": "There are three blue shapes in a block that we called A. Two medium blue squares are below a big blue square. First medium blue square is to the left of the other medium one which is touching the bottom edge of block A. There is another block below the block A we call it B. A big blue triangle is touching the top edge of this block which is above a small black triangle, a big blue circle and a medium blue triangle. The medium triangle is touching the bottom edge of the block. The circle is below and to the left of the small triangle. It is above the medium triangle.",
    "question": "What is the relation between the circle above the blue triangle and the black object below a blue triangle?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n\n% Facts\nblock(a).\nblock(b).\nobject(big_blue_square, large, blue, square, a).\nobject(medium_blue_square1, medium, blue, square, a).\nobject(medium_blue_square2, medium, blue, square, a).\nis(medium_blue_square1, left, medium_blue_square2).\nis(medium_blue_square2, touching, a).\nobject(big_blue_triangle, large, blue, triangle, b).\nobject(small_black_triangle, small, black, triangle, b).\nobject(big_blue_circle, large, blue, circle, b).\nobject(medium_blue_triangle, medium, blue, triangle, b).\nis(big_blue_triangle, touching, b).\nis(small_black_triangle, below, big_blue_triangle).\nis(big_blue_circle, above, small_black_triangle).\nis(big_blue_circle, left, small_black_triangle).\nis(big_blue_circle, above, medium_blue_triangle).\nis(medium_blue_triangle, touching, b).\nis(b, below, a).\n\n% Query\nquery(Relation) :- object(big_blue_circle, large, blue, circle, b), object(small_black_triangle, small, black, triangle, b), is(big_blue_circle, Relation, small_black_triangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.\n",
    "actual_answer": "left",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(big_blue_square, large, blue, square, a).\nobject(medium_blue_square1, medium, blue, square, a).\nobject(medium_blue_square2, medium, blue, square, a).\nis(medium_blue_square1, left, medium_blue_square2).\nis(medium_blue_square2, touching, a).\nobject(big_blue_triangle, large, blue, triangle, b).\nobject(small_black_triangle, small, black, triangle, b).\nobject(big_blue_circle, large, blue, circle, b).\nobject(medium_blue_triangle, medium, blue, triangle, b).\nis(big_blue_triangle, touching, b).\nis(small_black_triangle, below, big_blue_triangle).\nis(big_blue_circle, above, small_black_triangle).\nis(big_blue_circle, left, small_black_triangle).\nis(big_blue_circle, above, medium_blue_triangle).\nis(medium_blue_triangle, touching, b).\nis(b, below, a).\n\n% Query\nquery(Relation) :- object(big_blue_circle, large, blue, circle, b), object(small_black_triangle, small, black, triangle, b), is(big_blue_circle, Relation, small_black_triangle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "above, left"
  },
  {
    "context": "There is a block called A. Inside A, there is a black triangle that is above and to the left of a black circle. There is another block called B which is to the right of A. In B, there are two yellow circles, a blue circle, and a blue square. The blue circle is touching the left edge of B. One of the yellow circles is to the right of the blue circle and to the left of the blue square. The blue square is touching the right edge of B and is above the other yellow circle, Which is also touching the right edge of B.",
    "question": "What relations exist between the blue object above the yellow thing and the black object above the black thing?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nobject(black_triangle, unknown, black, triangle, a).\nobject(black_circle, unknown, black, circle, a).\nis(black_triangle, above, black_circle).\nis(black_triangle, left, black_circle).\nis(b, right, a).\nobject(yellow_circle1, unknown, yellow, circle, b).\nobject(yellow_circle2, unknown, yellow, circle, b).\nobject(blue_circle, unknown, blue, circle, b).\nobject(blue_square, unknown, blue, square, b).\nis(blue_circle, touching, b).\nis(yellow_circle1, right, blue_circle).\nis(yellow_circle1, left, blue_square).\nis(blue_square, touching, b).\nis(blue_square, above, yellow_circle2).\nis(yellow_circle2, touching, b).\n\n% Query\nquery(Relation) :- object(BlueObj, _, blue, _, _), object(BlackObj, _, black, _, _), is(BlueObj, above, YellowObj), is(BlackObj, above, BlackObj2), is(BlueObj, Relation, BlackObj).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "right",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nobject(black_triangle, unknown, black, triangle, a).\nobject(black_circle, unknown, black, circle, a).\nis(black_triangle, above, black_circle).\nis(black_triangle, left, black_circle).\nis(b, right, a).\nobject(yellow_circle1, unknown, yellow, circle, b).\nobject(yellow_circle2, unknown, yellow, circle, b).\nobject(blue_circle, unknown, blue, circle, b).\nobject(blue_square, unknown, blue, square, b).\nis(blue_circle, touching, b).\nis(yellow_circle1, right, blue_circle).\nis(yellow_circle1, left, blue_square).\nis(blue_square, touching, b).\nis(blue_square, above, yellow_circle2).\nis(yellow_circle2, touching, b).\n\n% Query\nquery(Relation) :- object(BlueObj, _, blue, _, _), object(BlackObj, _, black, _, _), is(BlueObj, above, YellowObj), is(BlackObj, above, BlackObj2), is(BlueObj, Relation, BlackObj).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "right"
  },
  {
    "context": "There are three blocks A, B and C. A blue triangle is touching the right edge of block A. Block B has four objects. There is a medium black square at the top of this block. There is a big blue square at the top of this block and near to the medium square. Two big black circles are below these objects. one of the circles is touching the bottom edge of its block. block C is above A and block B is above it. Three medium blue triangles and two squares are in this block. the squares are below all triangles. two of the triangles and one of the squares are to the left of the  other square.",
    "question": "What is the relation between all medium blue triangles and all big black circles?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(blue_triangle, unknown, blue, triangle, a).\nis(blue_triangle, touching, a).\nobject(medium_black_square, medium, black, square, b).\nobject(big_blue_square, big, blue, square, b).\nis(big_blue_square, near, medium_black_square).\nobject(big_black_circle1, big, black, circle, b).\nobject(big_black_circle2, big, black, circle, b).\nis(big_black_circle1, touching, b).\nis(big_black_circle2, below, big_blue_square).\nis(big_black_circle2, below, medium_black_square).\nis(c, above, a).\nis(b, above, c).\nobject(medium_blue_triangle1, medium, blue, triangle, c).\nobject(medium_blue_triangle2, medium, blue, triangle, c).\nobject(medium_blue_triangle3, medium, blue, triangle, c).\nobject(square1, unknown, unknown, square, c).\nobject(square2, unknown, unknown, square, c).\nis(square1, below, medium_blue_triangle1).\nis(square1, below, medium_blue_triangle2).\nis(square1, below, medium_blue_triangle3).\nis(square2, below, medium_blue_triangle1).\nis(square2, below, medium_blue_triangle2).\nis(square2, below, medium_blue_triangle3).\nis(medium_blue_triangle1, left, square2).\nis(medium_blue_triangle2, left, square2).\n\n% Query\nquery(Relation) :- object(MediumBlueTriangle, medium, blue, triangle, _), object(BigBlackCircle, big, black, circle, _), is(MediumBlueTriangle, Relation, BigBlackCircle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "below",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(blue_triangle, unknown, blue, triangle, a).\nis(blue_triangle, touching, a).\nobject(medium_black_square, medium, black, square, b).\nobject(big_blue_square, big, blue, square, b).\nis(big_blue_square, near, medium_black_square).\nobject(big_black_circle1, big, black, circle, b).\nobject(big_black_circle2, big, black, circle, b).\nis(big_black_circle1, touching, b).\nis(big_black_circle2, below, big_blue_square).\nis(big_black_circle2, below, medium_black_square).\nis(c, above, a).\nis(b, above, c).\nobject(medium_blue_triangle1, medium, blue, triangle, c).\nobject(medium_blue_triangle2, medium, blue, triangle, c).\nobject(medium_blue_triangle3, medium, blue, triangle, c).\nobject(square1, unknown, unknown, square, c).\nobject(square2, unknown, unknown, square, c).\nis(square1, below, medium_blue_triangle1).\nis(square1, below, medium_blue_triangle2).\nis(square1, below, medium_blue_triangle3).\nis(square2, below, medium_blue_triangle1).\nis(square2, below, medium_blue_triangle2).\nis(square2, below, medium_blue_triangle3).\nis(medium_blue_triangle1, left, square2).\nis(medium_blue_triangle2, left, square2).\n\n% Query\nquery(Relation) :- object(MediumBlueTriangle, medium, blue, triangle, _), object(BigBlackCircle, big, black, circle, _), is(MediumBlueTriangle, Relation, BigBlackCircle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the right of B and B is to the right of C. In A, there is a small yellow triangle far above a medium blue circle. The medium blue circle is near and above a small black square. There is a large black triangle near and to the right of the medium blue circle. In B, there is a small blue square far below a small black triangle. There is a large blue circle far to the left of the small blue square. In C, there is a small black circle far to the left of a medium black circle. The medium black circle is near and to the left of the medium black triangle.",
    "question": "What is the relation between the medium black triangle and the medium black circle?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "% Facts\nblock(a). block(b). block(c).\nobject(small_yellow_triangle, small, yellow, triangle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(small_black_square, small, black, square, a).\nobject(large_black_triangle, large, black, triangle, a).\nobject(small_blue_square, small, blue, square, b).\nobject(small_black_triangle, small, black, triangle, b).\nobject(large_blue_circle, large, blue, circle, b).\nobject(small_black_circle, small, black, circle, c).\nobject(medium_black_circle, medium, black, circle, c).\nobject(medium_black_triangle, medium, black, triangle, c).\nis(a, right, b).\nis(b, right, c).\nis(small_yellow_triangle, far_above, medium_blue_circle).\nis(medium_blue_circle, near_and_above, small_black_square).\nis(large_black_triangle, near_and_right, medium_blue_circle).\nis(small_blue_square, far_below, small_black_triangle).\nis(large_blue_circle, far_left, small_blue_square).\nis(small_black_circle, far_left, medium_black_circle).\nis(medium_black_circle, near_and_left, medium_black_triangle).\n\n% Query\nquery(Relation) :- object(medium_black_triangle, medium, black, triangle, c), object(medium_black_circle, medium, black, circle, c), is(medium_black_triangle, Relation, medium_black_circle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\n\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\n\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "right, near to",
    "error": null,
    "clean_asp": "% Facts\nblock(a). block(b). block(c).\nobject(small_yellow_triangle, small, yellow, triangle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(small_black_square, small, black, square, a).\nobject(large_black_triangle, large, black, triangle, a).\nobject(small_blue_square, small, blue, square, b).\nobject(small_black_triangle, small, black, triangle, b).\nobject(large_blue_circle, large, blue, circle, b).\nobject(small_black_circle, small, black, circle, c).\nobject(medium_black_circle, medium, black, circle, c).\nobject(medium_black_triangle, medium, black, triangle, c).\nis(a, right, b).\nis(b, right, c).\nis(small_yellow_triangle, far_above, medium_blue_circle).\nis(medium_blue_circle, near_and_above, small_black_square).\nis(large_black_triangle, near_and_right, medium_blue_circle).\nis(small_blue_square, far_below, small_black_triangle).\nis(large_blue_circle, far_left, small_blue_square).\nis(small_black_circle, far_left, medium_black_circle).\nis(medium_black_circle, near_and_left, medium_black_triangle).\n\n% Query\nquery(Relation) :- object(medium_black_triangle, medium, black, triangle, c), object(medium_black_circle, medium, black, circle, c), is(medium_black_triangle, Relation, medium_black_circle).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\n\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\n\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "right"
  },
  {
    "context": "We have one block called A. there is a big blue circle touching bottom edge and a small blue triangle touching the top edge and another small blue triangle touching right edge of this block. There is a big yellow square above the big circle and below small triangle number one. It is to the left of small triangle number two. This block also has a small yellow and a small black triangles. Both of them are above the big circle and below the big square.",
    "question": "Where is the big square regarding to the object which is below a black object?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nobject(big_blue_circle, big, blue, circle, a).\nobject(big_yellow_square, big, yellow, square, a).\nobject(small_blue_triangle1, small, blue, triangle, a).\nobject(small_blue_triangle2, small, blue, triangle, a).\nobject(small_yellow_triangle, small, yellow, triangle, a).\nobject(small_black_triangle, small, black, triangle, a).\nis(big_blue_circle, touching, bottom_edge).\nis(small_blue_triangle1, touching, top_edge).\nis(small_blue_triangle2, touching, right_edge).\nis(big_yellow_square, above, big_blue_circle).\nis(big_yellow_square, below, small_blue_triangle1).\nis(big_yellow_square, left, small_blue_triangle2).\nis(small_yellow_triangle, above, big_blue_circle).\nis(small_yellow_triangle, below, big_yellow_square).\nis(small_black_triangle, above, big_blue_circle).\nis(small_black_triangle, below, big_yellow_square).\n\n% Query\nquery(Location) :- object(BigSquare, big, _, square, _), object(BlackObj, _, black, _, _), is(BigSquare, Location, BlackObj).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n\n#show query/1.",
    "actual_answer": "above",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nobject(big_blue_circle, big, blue, circle, a).\nobject(big_yellow_square, big, yellow, square, a).\nobject(small_blue_triangle1, small, blue, triangle, a).\nobject(small_blue_triangle2, small, blue, triangle, a).\nobject(small_yellow_triangle, small, yellow, triangle, a).\nobject(small_black_triangle, small, black, triangle, a).\nis(big_blue_circle, touching, bottom_edge).\nis(small_blue_triangle1, touching, top_edge).\nis(small_blue_triangle2, touching, right_edge).\nis(big_yellow_square, above, big_blue_circle).\nis(big_yellow_square, below, small_blue_triangle1).\nis(big_yellow_square, left, small_blue_triangle2).\nis(small_yellow_triangle, above, big_blue_circle).\nis(small_yellow_triangle, below, big_yellow_square).\nis(small_black_triangle, above, big_blue_circle).\nis(small_black_triangle, below, big_yellow_square).\n\n% Query\nquery(Location) :- object(BigSquare, big, _, square, _), object(BlackObj, _, black, _, _), is(BigSquare, Location, BlackObj).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\nis(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, symmetric(R).\nis(O1, R, O3) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), object(O3, _, _, _, B3), is(B1, R, B2), is(B2, R, B3), transitive(R), B1 != B2, B2 != B3, B1 != B3, O1 != O2, O2 != O3, O1 != O3.\n#show query/1.",
    "asp_result": "above"
  },
  {
    "context": "There are three blocks A, B, and C. Block A has a medium yellow square to the left of a small blue triangle. Block B is to the right of block A. It has two small blue squares. The square number one is touching the right edge of this block and the square number two is above the square number one. Block C is below block A. It has a big black triangle above a small black triangle. The big black triangle is to the right of a small yellow square. A small yellow triangle is below and to the left of the small black triangle.",
    "question": "What is the relation between the small triangle to the left of a blue square and the medium object above the big triangle?",
    "q_type": "FR",
    "choices": "left, right, above, below, near to, far from, touching, DK",
    "predicted_ASP": "Here is the complete ASP code:\n\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_yellow_square, medium, yellow, square, a).\nobject(small_blue_triangle, small, blue, triangle, a).\nis(medium_yellow_square, left, small_blue_triangle).\nis(a, left, b).\nobject(small_blue_square1, small, blue, square, b).\nobject(small_blue_square2, small, blue, square, b).\nis(small_blue_square1, touching, b).\nis(small_blue_square2, above, small_blue_square1).\nis(b, right, a).\nblock(c).\nis(c, below, a).\nobject(big_black_triangle, big, black, triangle, c).\nobject(small_black_triangle, small, black, triangle, c).\nis(big_black_triangle, above, small_black_triangle).\nobject(small_yellow_square, small, yellow, square, c).\nis(big_black_triangle, right, small_yellow_square).\nobject(small_yellow_triangle, small, yellow, triangle, c).\nis(small_yellow_triangle, below_and_left, small_black_triangle).\n\n% Query\nquery(Relation) :- \n    object(SmallTriangle, small, _, triangle, _), \n    object(MediumObject, medium, _, _, _), \n    object(BigTriangle, big, black, triangle, _), \n    is(SmallTriangle, left, BlueSquare), \n    is(MediumObject, above, BigTriangle), \n    is(SmallTriangle, Relation, MediumObject).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\n\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\nis(O1, R, O2) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    is(B1, R, B2), \n    O1 != O2, \n    symmetric(R).\n\nis(O1, R, O3) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    object(O3, _, _, _, B3), \n    is(B1, R, B2), \n    is(B2, R, B3), \n    transitive(R), \n    B1 != B2, \n    B2 != B3, \n    B1 != B3, \n    O1 != O2, \n    O2 != O3, \n    O1 != O3.\n\n#show query/1.",
    "actual_answer": "right",
    "error": null,
    "clean_asp": "% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_yellow_square, medium, yellow, square, a).\nobject(small_blue_triangle, small, blue, triangle, a).\nis(medium_yellow_square, left, small_blue_triangle).\nis(a, left, b).\nobject(small_blue_square1, small, blue, square, b).\nobject(small_blue_square2, small, blue, square, b).\nis(small_blue_square1, touching, b).\nis(small_blue_square2, above, small_blue_square1).\nis(b, right, a).\nblock(c).\nis(c, below, a).\nobject(big_black_triangle, big, black, triangle, c).\nobject(small_black_triangle, small, black, triangle, c).\nis(big_black_triangle, above, small_black_triangle).\nobject(small_yellow_square, small, yellow, square, c).\nis(big_black_triangle, right, small_yellow_square).\nobject(small_yellow_triangle, small, yellow, triangle, c).\nis(small_yellow_triangle, below_and_left, small_black_triangle).\n\n% Query\nquery(Relation) :- \n    object(SmallTriangle, small, _, triangle, _), \n    object(MediumObject, medium, _, _, _), \n    object(BigTriangle, big, black, triangle, _), \n    is(SmallTriangle, left, BlueSquare), \n    is(MediumObject, above, BigTriangle), \n    is(SmallTriangle, Relation, MediumObject).\n\n% Rules\ninverse(front, behind; cover, covered_by; above, below; right, left; near, far; close, far; up, down; on, under; in, contain).\nis(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2).\n\nsymmetric(touching; adjacent; near; close; connected).\nis(Y, R, X) :- is(X, R, Y), symmetric(R).\n\ntransitive(above; below; over; under; left; right; far; near; contain; cover; in; on; between; inside; disjoint).\nis(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n\nis(O1, R, O2) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    is(B1, R, B2), \n    O1 != O2, \n    symmetric(R).\n\nis(O1, R, O3) :- \n    object(O1, _, _, _, B1), \n    object(O2, _, _, _, B2), \n    object(O3, _, _, _, B3), \n    is(B1, R, B2), \n    is(B2, R, B3), \n    transitive(R), \n    B1 != B2, \n    B2 != B3, \n    B1 != B3, \n    O1 != O2, \n    O2 != O3, \n    O1 != O3.\n#show query/1.",
    "asp_result": "right"
  }
]