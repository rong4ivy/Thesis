[
 {
    "context": "There are three blocks named A, B, and C. B is to the right of A and C is to the right of B. In A there is a large black square that is touching left edge of A. In B, there is a large blue square Which is near and to the right of a large blue triangle. Far below the triangle there is a large yellow circle. The large yellow circle is touching the bottom of B. In C, there is a small blue circle that is to the right of a small black triangle.",
    "question": "What object is to the left of the large blue square? the large black square  or  the small black triangle?",
    "q_type": "CO",
    "predicted_ASP": "block(a). block(b). block(c).object(large_black_square, large, black, square, a). object(large_blue_square, large, blue, square, b). object(large_blue_triangle, large, blue, triangle, b). object(large_yellow_circle, large, yellow, circle, b). object(small_blue_circle, small, blue, circle, c). object(small_black_triangle, small, black, triangle, c).is(b, right, a). is(c, right, b). is(large_black_square, left, a). is(large_blue_square, right, large_blue_triangle). is(large_yellow_circle, below, large_blue_triangle). is(large_yellow_circle, touching, b). is(small_blue_circle, right, small_black_triangle).query(Object) :- object(Object, _, _, _, _), is(Object, left, large_blue_square).",
    "actual_answer": "[' the large black square ']",
    "asp_result": "large_black_square, large_blue_triangle"
  },
  {
    "context": "There are three blocks named A, B, and C. B is to the right of A and C is to the right of B. In A there is a large black square that is touching left edge of A. In B, there is a large blue square Which is near and to the right of a large blue triangle. Far below the triangle there is a large yellow circle. The large yellow circle is touching the bottom of B. In C, there is a small blue circle that is to the right of a small black triangle.",
    "question": "What object is far from the yellow thing? the large blue triangle  or  the small black triangle?",
    "q_type": "CO",
    "predicted_ASP": "block(a). block(b). block(c). object(large_black_square, large, black, square, a). object(large_blue_square, large, blue, square, b). object(large_blue_triangle, large, blue, triangle, b). object(large_yellow_circle, large, yellow, circle, b). object(small_blue_circle, small, blue, circle, c). object(small_black_triangle, small, black, triangle, c). is(large_black_square, left, large_blue_square). is(large_blue_square, near, large_blue_triangle). is(large_blue_triangle, far_above, large_yellow_circle). is(small_blue_circle, right, small_black_triangle).query(Object) :- object(Object, _, _, _, _), object(large_yellow_circle, _, yellow, _, _), is(Object, far, large_yellow_circle).",
    "actual_answer": "[' the large blue triangle ']",
    "asp_result": "large_black_square, large_blue_square, large_blue_triangle, large_yellow_circle, small_blue_circle, small_black_triangle"
  },
  {
    "context": "There is a block called A. In A, there are four blue circles: two small ones, a medium one, and a large one. The two small circles are below the large circle. The medium circle is far above and to the left of the large circle. There is another block called B, Which is to the right of A. In B, there is a blue triangle near the right edge of B. There is another block called C, Which is to the right of B. In C, there is a yellow circle, a large yellow triangle, and a black square. The yellow circle is near and to the left of the yellow triangle. The black square is to the right and below the yellow triangle.",
    "question": "What object is above the black thing? the yellow triangle  or  the blue triangle?",
    "q_type": "CO",
    "predicted_ASP":"block(a). block(b). block(c). object(large_blue_circle, large, blue, circle, a). object(small_blue_circle, small, blue, circle, a). object(medium_blue_circle, medium, blue, circle, a). object(blue_triangle, unknown, blue, triangle, b). object(yellow_circle, unknown, yellow, circle, c). object(large_yellow_triangle, large, yellow, triangle, c). object(black_square, unknown, black, square, c). is(small_blue_circle, below, large_blue_circle). is(medium_blue_circle, far_above, large_blue_circle). is(yellow_circle, near, large_yellow_triangle). is(black_square, right, large_yellow_triangle).query(Object) :- object(Object, _, _, _, _), object(black_square, _, black, _, _), is(Object, above, black_square).",
    "actual_answer": "[' the yellow triangle ']",
    "asp_result": "large_yellow_triangle"
  },
  {
    "context": "There is a block called A. In A, there are four blue circles: two small ones, a medium one, and a large one. The two small circles are below the large circle. The medium circle is far above and to the left of the large circle. There is another block called B, Which is to the right of A. In B, there is a blue triangle near the right edge of B. There is another block called C, Which is to the right of B. In C, there is a yellow circle, a large yellow triangle, and a black square. The yellow circle is near and to the left of the yellow triangle. The black square is to the right and below the yellow triangle.",
    "question": "What object is far from the medium blue thing? the yellow circle  or  the small blue circle?",
    "q_type": "CO",
    "predicted_ASP": "% block(a). block(b). block(c). object(large_blue_circle, large, blue, circle, a). object(small_blue_circle, small, blue, circle, a). object(medium_blue_circle, medium, blue, circle, a). object(blue_triangle, unknown, blue, triangle, b). object(yellow_circle, unknown, yellow, circle, c). object(large_yellow_triangle, large, yellow, triangle, c). object(black_square, unknown, black, square, c). is(small_blue_circle, below, large_blue_circle). is(medium_blue_circle, far_above, large_blue_circle). is(yellow_circle, near, large_yellow_triangle). is(black_square, right, large_yellow_triangle).query(Object) :- object(Object, _, _, _, _), object(medium_blue_circle, medium, blue, _, _), is(Object, far, medium_blue_circle)." ,
    "actual_answer": "[' the small blue circle']",
    "asp_result": "large_blue_circle"
  },
  {
    "context": "There are three blocks named A, B, and C. A is to the right of B and B is to the right of C. In A, there is a small yellow triangle that is near and to the left of a medium yellow circle. In B, there is a medium black circle Which is above a large blue triangle. The large triangle is above and near a small blue circle. There is also a large black circle far below the small blue circle. In C, there is a medium blue circle.",
    "question": "What object is to the left of the large blue thing? the medium blue circle  or  the yellow triangle?",
    "q_type": "CO",
    "predicted_ASP": " block(a). block(b). block(c). object(small_yellow_triangle, small, yellow, triangle, a). object(medium_yellow_circle, medium, yellow, circle, a). object(medium_black_circle, medium, black, circle, b). object(large_blue_triangle, large, blue, triangle, b). object(small_blue_circle, small, blue, circle, b). object(large_black_circle, large, black, circle, b). object(medium_blue_circle, medium, blue, circle, c). is(small_yellow_triangle, near, medium_yellow_circle). is(medium_black_circle, above, large_blue_triangle). is(large_blue_triangle, above, small_blue_circle). is(small_blue_circle, far, large_black_circle). is(small_blue_circle, below, large_black_circle).query(Object) :- object(Object, _, _, _, _), object(large_blue_triangle, large, blue, _, _), is(Object, left, large_blue_triangle).",
    "actual_answer": "[' the medium blue circle ']",
    "asp_result": "Error: parsing failed"
  },
  {
    "context": "There are three blocks named A, B, and C. A is to the right of B and B is to the right of C. In A, there is a small yellow triangle that is near and to the left of a medium yellow circle. In B, there is a medium black circle Which is above a large blue triangle. The large triangle is above and near a small blue circle. There is also a large black circle far below the small blue circle. In C, there is a medium blue circle.",
    "question": "What object is not below the large blue thing? the medium black circle  or  the small blue circle?",
    "q_type": "CO",
    "predicted_ASP": "block(a). block(b). block(c). object(small_yellow_triangle, small, yellow, triangle, a). object(medium_yellow_circle, medium, yellow, circle, a). object(medium_black_circle, medium, black, circle, b). object(large_blue_triangle, large, blue, triangle, b). object(small_blue_circle, small, blue, circle, b). object(large_black_circle, large, black, circle, b). object(medium_blue_circle, medium, blue, circle, c). is(small_yellow_triangle, near, medium_yellow_circle). is(medium_black_circle, above, large_blue_triangle). is(large_blue_triangle, above, small_blue_circle). is(small_blue_circle, below, large_black_circle).query(Object) :- object(Object, _, _, _, _), object(large_blue_triangle, large, blue, _, _), not is(Object, below, large_blue_triangle)." ,
    "actual_answer": "[' the medium black circle ']",
    "asp_result": "small_yellow_triangle, medium_yellow_circle, medium_black_circle, large_blue_triangle, medium_blue_circle"
  },
  {
    "context": "There are three blocks called A, B and C. A is to the left of B and B is to the left of C. In A, there is a small blue circle. In B, there is a large blue triangle that is touching the top of a small yellow triangle. In C, there are four circles, a large yellow one, a small blue one, a small black one, and a large black one. The large yellow circle is touching the large black circle and is above and near the small blue circle. The small black circle is near and to the right of the small blue circle. The large black circle is above and near the small black circle.",
    "question": "What object is near the large yellow thing? the small blue circle  or  the small yellow triangle?",
    "q_type": "CO",
    "predicted_ASP": "block(a). block(b). block(c). object(small_blue_circle, small, blue, circle, a). object(large_blue_triangle, large, blue, triangle, b). object(small_yellow_triangle, small, yellow, triangle, b). object(large_yellow_circle, large, yellow, circle, c). object(small_blue_circle_2, small, blue, circle, c). object(small_black_circle, small, black, circle, c). object(large_black_circle, large, black, circle, c). is(large_yellow_circle, touching, large_black_circle). is(large_yellow_circle, above, small_blue_circle_2). is(small_black_circle, near, small_blue_circle_2). is(large_black_circle, above, small_black_circle).query(Object) :- object(Object, _, _, _, _), object(large_yellow_circle, large, yellow, _, _), is(Object, near, large_yellow_circle).",
     "actual_answer": "[' the small blue circle ']",
    "asp_result": "small_blue_circle_c"
  },
  {
    "context": "There are three blocks called A, B and C. A is to the left of B and B is to the left of C. In A, there is a small blue circle. In B, there is a large blue triangle that is touching the top of a small yellow triangle. In C, there are four circles, a large yellow one, a small blue one, a small black one, and a large black one. The large yellow circle is touching the large black circle and is above and near the small blue circle. The small black circle is near and to the right of the small blue circle. The large black circle is above and near the small black circle.",
    "question": "What object is not touching the large blue triangle? the small yellow triangle  or  the large black square?",
    "q_type": "CO",
    "predicted_ASP": "block(a). block(b). block(c). object(small_blue_circle, small, blue, circle, a). object(large_blue_triangle, large, blue, triangle, b). object(small_yellow_triangle, small, yellow, triangle, b). object(large_yellow_circle, large, yellow, circle, c). object(small_blue_circle_2, small, blue, circle, c). object(small_black_circle, small, black, circle, c). object(large_black_circle, large, black, circle, c). is(large_yellow_circle, touching, large_black_circle). is(large_yellow_circle, above, small_blue_circle_2). is(small_black_circle, near, small_blue_circle_2). is(large_black_circle, above, small_black_circle). query(Object) :- object(Object, _, _, _, _), object(large_blue_triangle, large, blue, _, _), not is(Object, touching, large_blue_triangle).",
    "actual_answer": "[' the large black square']",
    "asp_result": "small_blue_circle, large_blue_triangle, large_yellow_circle, small_blue_circle_c, small_black_circle, large_black_circle"
  },
  {
    "context": "There are three blocks called A, B, and C. B is to the right of A and C is to the right of B. In A, there is a medium blue circle Which is near and above a small blue circle. In B, there is a large yellow triangle Which is to the right and touching a large blue triangle. There is also a small yellow triangle to the left of the large blue triangle. In C, there is a small blue circle that is far above a blue triangle. The blue triangle is to the left of a black triangle.",
    "question": "What object is to is not touching a large blue thing? the large yellow triangle  or  the small blue circle?",
    "q_type": "CO",
    "predicted_ASP": "block(a).\nblock(b).\nblock(c).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(small_blue_circle, small, blue, circle, a).\nobject(large_yellow_triangle, large, yellow, triangle, b).\nobject(large_blue_triangle, large, blue, triangle, b).\nobject(small_yellow_triangle, small, yellow, triangle, b).\nobject(small_blue_circle_2, small, blue, circle, c).\nobject(blue_triangle, unknown, blue, triangle, c).\nobject(black_triangle, unknown, black, triangle, c).\nis(medium_blue_circle, near, small_blue_circle).\nis(large_yellow_triangle, right, large_blue_triangle).\nis(small_yellow_triangle, left, large_blue_triangle).\nis(small_blue_circle_2, far, blue_triangle).\nis(blue_triangle, left, black_triangle).\n\nquery(Object) :- object(Object, _, _, _, _), object(large_blue_triangle, large, blue, _, _), not is(Object, touching, large_blue_triangle).",
    "actual_answer": "[' the small blue circle']",
    "asp_result": "Error: grounding stopped because of errors"
  },
  {
    "context": "There are three blocks called A, B, and C. B is to the right of A and C is to the right of B. In A, there is a medium blue circle Which is near and above a small blue circle. In B, there is a large yellow triangle Which is to the right and touching a large blue triangle. There is also a small yellow triangle to the left of the large blue triangle. In C, there is a small blue circle that is far above a blue triangle. The blue triangle is to the left of a black triangle.",
    "question": "What object is to the right of the small yellow thing? the large yellow triangle  or  the medium blue circle?",
    "q_type": "CO",
    "predicted_ASP": " block(a). block(b). block(c). object(medium_blue_circle, medium, blue, circle, a). object(small_blue_circle, small, blue, circle, a). object(large_yellow_triangle, large, yellow, triangle, b). object(small_yellow_triangle, small, yellow, triangle, b). object(large_blue_triangle, large, blue, triangle, b). object(small_blue_circle_c, small, blue, circle, c). object(blue_triangle, unknown, blue, triangle, c). object(black_triangle, unknown, black, triangle, c).is(medium_blue_circle, above, small_blue_circle). is(large_yellow_triangle, left, large_blue_triangle). is(small_yellow_triangle, left, large_blue_triangle). is(small_blue_circle_c, far, blue_triangle). is(blue_triangle, left, black_triangle).query(Object) :- object(Object, _, _, _, _), is(Object, left, small_yellow_triangle).",
    "actual_answer": "[' the large yellow triangle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. In A there is a small blue circle. There is another block called B Which is to the right of A. In B, there is a large yellow square, Which is near and to the left of a small yellow square. Above both squares there is a black triangle. To the right of B there is a block called C. In C, there is a black square that is to the right and far from a yellow triangle.",
    "question": "What object is not below the black object in B? the black square  or  the large yellow square ?",
    "q_type": "CO",
    "predicted_ASP": "block(a). block(b). block(c).object(small_blue_circle, small, blue, circle, a). object(large_yellow_square, large, yellow, square, b). object(small_yellow_square, small, yellow, square, b). object(black_triangle, unknown, black, triangle, b). object(black_square, unknown, black, square, c). object(yellow_triangle, unknown, yellow, triangle, c).is(large_yellow_square, left, small_yellow_square). is(black_triangle, above, large_yellow_square). is(black_square, left, yellow_triangle). is(black_square, far, yellow_triangle).query(Object) :- object(Object, _, _, _, _), not is(Object, below, black_triangle).",
    "actual_answer": "[' the black square ']",
    "asp_result": "black_square, yellow_triangle, black_triangle"
  },
  {
    "context": "There is a block called A. In A there is a small blue circle. There is another block called B Which is to the right of A. In B, there is a large yellow square, Which is near and to the left of a small yellow square. Above both squares there is a black triangle. To the right of B there is a block called C. In C, there is a black square that is to the right and far from a yellow triangle.",
    "question": "What object is to the left of the black thing in C? the small blue circle  or  the yellow triangle ?",
    "q_type": "CO",
    "predicted_ASP": "block(a). block(b). block(c).object(small_blue_circle, small, blue, circle, a). object(large_yellow_square, large, yellow, square, b). object(small_yellow_square, small, yellow, square, b). object(black_triangle, unknown, black, triangle, b). object(black_square, unknown, black, square, c). object(yellow_triangle, unknown, yellow, triangle, c).is(b, left, a). is(c, left, b). is(large_yellow_square, left, small_yellow_square). is(black_triangle, above, large_yellow_square). is(black_square, left, yellow_triangle). is(black_square, far, yellow_triangle). query(Object) :- object(Object, _, _, _, _),  object(black_thing, _, black, _, c).is(Object, left, black_thing), ",
    "actual_answer": "[' the small blue circle ']",
    "asp_result": "yellow_triangle"
  },
  {
    "context": "There is a block called A. In A there is a small blue circle. There is another block called B Which is to the right of A. In B, there is a large yellow square, Which is near and to the left of a small yellow square. Above both squares there is a black triangle. To the right of B there is a block called C. In C, there is a black square that is to the right and far from a yellow triangle.",
    "question": "Which object is left of a black square? the yellow triangle  or  the small circle ?",
    "q_type": "CO",
    "predicted_ASP": "block(a). block(b). block(c).object(small_blue_circle, small, blue, circle, a). object(large_yellow_square, large, yellow, square, b). object(small_yellow_square, small, yellow, square, b). object(black_triangle, unknown, black, triangle, b). object(black_square, unknown, black, square, c). object(yellow_triangle, unknown, yellow, triangle, c).is(b, left, a). is(c, left, b). is(large_yellow_square, left, small_yellow_square). is(black_triangle, above, large_yellow_square). is(black_square, left, yellow_triangle). is(black_square, far, yellow_triangle).query(Object) :- object(Object, _, _, _, _), is(Object, left, black_square), Object != yellow_triangle. ",
    "actual_answer": "['the small circle']",
    "asp_result": "Error: parsing failed"
  },
  {
    "context": "There is a block called A. In A there is a small blue circle. There is another block called B Which is to the right of A. In B, there is a large yellow square, Which is near and to the left of a small yellow square. Above both squares there is a black triangle. To the right of B there is a block called C. In C, there is a black square that is to the right and far from a yellow triangle.",
    "question": "Which object is near to a small square? the black triangle  or  the large square?",
    "q_type": "CO",
    "predicted_ASP": "block(a). block(b). block(c).object(small_blue_circle, small, blue, circle, a). object(large_yellow_square, large, yellow, square, b). object(small_yellow_square, small, yellow, square, b). object(black_triangle, unknown, black, triangle, b). object(black_square, unknown, black, square, c). object(yellow_triangle, unknown, yellow, triangle, c).is(b, left, a). is(c, left, b). is(large_yellow_square, left, small_yellow_square). is(black_triangle, above, large_yellow_square). is(black_square, left, yellow_triangle). is(black_square, far, yellow_triangle).query(Object) :- object(Object, _, _, _, _), is(Object, near, small_yellow_square), Object != black_triangle.",
    "actual_answer": "[' the large square']",
    "asp_result": "Error: grounding stopped because of errors"
  }
]