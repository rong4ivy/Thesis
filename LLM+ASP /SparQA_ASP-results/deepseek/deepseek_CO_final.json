[
  {
    "context": "There is a block called A. In A there is a red triangle Which is above a black circle. The black circle is touching the bottom of A. A yellow square is touching the top edge of A and below that there is a red oval is touching the right edge of A. There is a second block call B Which is to the left of A. Inside B there are 3 squares, a brown one, a green one, and a red one. The green square is above the red square and touching the left edge of B. The brown square is touching both the bottom edge and the right edge of B. The red square is touching the left edge of the brown square.",
    "question": "Which object is above the brown square? the green square or  the red square?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nobject(red_triangle, unknown, red, triangle, a).\nobject(black_circle, unknown, black, circle, a).\nobject(yellow_square, unknown, yellow, square, a).\nobject(red_oval, unknown, red, oval, a).\nobject(brown_square, unknown, brown, square, b).\nobject(green_square, unknown, green, square, b).\nobject(red_square, unknown, red, square, b).\nis(red_triangle, above, black_circle).\nis(black_circle, below, red_triangle).\nis(yellow_square, above, red_oval).\nis(red_oval, below, yellow_square).\nis(green_square, above, red_square).\nis(red_square, below, green_square).\nis(brown_square, below, green_square).\nis(green_square, above, brown_square).\nis(red_square, left, brown_square).\nis(brown_square, right, red_square).\nis(b, left, a).\nis(a, right, b).\n\n% Query\nquery(Object) :- object(Object, _, _, _, b), object(brown_square, _, brown, square, b), is(Object, above, brown_square).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the green square']",
    "asp_result": "green_square"
  },
  {
    "context": "There is a block called A. In A there is a red triangle Which is above a black circle. The black circle is touching the bottom of A. A yellow square is touching the top edge of A and below that there is a red oval is touching the right edge of A. There is a second block call B Which is to the left of A. Inside B there are 3 squares, a brown one, a green one, and a red one. The green square is above the red square and touching the left edge of B. The brown square is touching both the bottom edge and the right edge of B. The red square is touching the left edge of the brown square.",
    "question": "Which objects are not touching a square?the red triangle  or  the black circle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nobject(red_triangle, unknown, red, triangle, a).\nobject(black_circle, unknown, black, circle, a).\nobject(yellow_square, unknown, yellow, square, a).\nobject(red_oval, unknown, red, oval, a).\nobject(brown_square, unknown, brown, square, b).\nobject(green_square, unknown, green, square, b).\nobject(red_square, unknown, red, square, b).\nis(red_triangle, above, black_circle).\nis(black_circle, below, red_triangle).\nis(yellow_square, above, red_oval).\nis(red_oval, below, yellow_square).\nis(green_square, above, red_square).\nis(red_square, below, green_square).\nis(brown_square, adjacent, green_square).\nis(green_square, adjacent, brown_square).\nis(red_square, adjacent, brown_square).\nis(brown_square, adjacent, red_square).\nis(a, right, b).\nis(b, left, a).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), not object(Square, _, _, square, _), not is(Object, adjacent, Square).\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['both of them']",
    "asp_result": "Error: grounding stopped because of errors"
  },
  {
    "context": "There are three blocks called A, B, and C. A is on top of B and B is on top of C. In A there are 3 circles: a small red one, a green one, and a big blue one. The small red and green circles are above the big blue circle. The big blue circle is touching the bottom edge of A, and the green circle is touching the top edge of A. In B there is a orange triangle, Which is above a purple rectangle. The purple rectangle is touching the bottom edge of B. In C, there are 3 squares, a small white one, a small black one, and a large yellow one. The small white square is touching the left edge of C, while the small black square is touching the right edge of C. The large yellow square is adjacent to the white square, and is touching the bottom edge of C.",
    "question": "Which object is to the left of the yellow square? the white square or  the black square?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_red_circle, small, red, circle, a).\nobject(green_circle, unknown, green, circle, a).\nobject(big_blue_circle, large, blue, circle, a).\nobject(orange_triangle, unknown, orange, triangle, b).\nobject(purple_rectangle, unknown, purple, rectangle, b).\nobject(small_white_square, small, white, square, c).\nobject(small_black_square, small, black, square, c).\nobject(large_yellow_square, large, yellow, square, c).\nis(small_red_circle, above, big_blue_circle).\nis(green_circle, above, big_blue_circle).\nis(green_circle, above, small_red_circle).\nis(orange_triangle, above, purple_rectangle).\nis(small_white_square, left, small_black_square).\nis(large_yellow_square, adjacent, small_white_square).\nis(large_yellow_square, left, small_black_square).\n\n% Query\nquery(Object) :- object(Object, _, _, _, c), object(large_yellow_square, large, yellow, square, c), is(Object, left, large_yellow_square).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the white square']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. A is on top of B and B is on top of C. In A there are 3 circles: a small red one, a green one, and a big blue one. The small red and green circles are above the big blue circle. The big blue circle is touching the bottom edge of A, and the green circle is touching the top edge of A. In B there is a orange triangle, Which is above a purple rectangle. The purple rectangle is touching the bottom edge of B. In C, there are 3 squares, a small white one, a small black one, and a large yellow one. The small white square is touching the left edge of C, while the small black square is touching the right edge of C. The large yellow square is adjacent to the white square, and is touching the bottom edge of C.",
    "question": "What object is not above the purple rectangle? the orange triangle or  the white square?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_red_circle, small, red, circle, a).\nobject(green_circle, unknown, green, circle, a).\nobject(big_blue_circle, large, blue, circle, a).\nobject(orange_triangle, unknown, orange, triangle, b).\nobject(purple_rectangle, unknown, purple, rectangle, b).\nobject(small_white_square, small, white, square, c).\nobject(small_black_square, small, black, square, c).\nobject(large_yellow_square, large, yellow, square, c).\nis(small_red_circle, above, big_blue_circle).\nis(green_circle, above, big_blue_circle).\nis(big_blue_circle, below, small_red_circle).\nis(big_blue_circle, below, green_circle).\nis(orange_triangle, above, purple_rectangle).\nis(purple_rectangle, below, orange_triangle).\nis(small_white_square, left, small_black_square).\nis(small_black_square, right, small_white_square).\nis(large_yellow_square, adjacent, small_white_square).\nis(small_white_square, adjacent, large_yellow_square).\nis(a, above, b).\nis(b, above, c).\nis(b, below, a).\nis(c, below, b).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), object(purple_rectangle, _, purple, rectangle, _), not is(Object, above, purple_rectangle), Object != orange_triangle.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the white square']",
    "asp_result": "purple_rectangle, small_white_square, small_black_square, large_yellow_square"
  },
  {
    "context": "There is a block called A. Inside there's a red oval that is above a blue triangle. The blue triangle is touching the right edge of A and the top of a large black square. Touching the bottom edge of A is  a small orange square. The is a block called B Which is to the right and touching A. Inside B there are 5 triangles, a red one, a green one, a large yellow one, a brown one, and an orange one. The red and orange triangles are touching the left edge of B and the orange triangle is above the red triangle. The large yellow triangle is touching the top edge of B. The green triangle is touching the right edge of B. The brown triangle is below all of the other triangles and is touching the bottom of B.",
    "question": "What object is below the orange triangle? the red triangle  or  the yellow triangle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nobject(red_oval, unknown, red, oval, a).\nobject(blue_triangle, unknown, blue, triangle, a).\nobject(large_black_square, large, black, square, a).\nobject(small_orange_square, small, orange, square, a).\nobject(red_triangle, unknown, red, triangle, b).\nobject(green_triangle, unknown, green, triangle, b).\nobject(large_yellow_triangle, large, yellow, triangle, b).\nobject(brown_triangle, unknown, brown, triangle, b).\nobject(orange_triangle, unknown, orange, triangle, b).\nis(red_oval, above, blue_triangle).\nis(blue_triangle, right, large_black_square).\nis(small_orange_square, below, large_black_square).\nis(b, right, a).\nis(orange_triangle, above, red_triangle).\nis(large_yellow_triangle, above, orange_triangle).\nis(green_triangle, right, large_yellow_triangle).\nis(brown_triangle, below, green_triangle).\nis(brown_triangle, below, large_yellow_triangle).\nis(brown_triangle, below, orange_triangle).\nis(brown_triangle, below, red_triangle).\n\n% Query\nquery(Object) :- object(orange_triangle, unknown, orange, triangle, b), object(Object, _, _, _, b), is(Object, below, orange_triangle).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the red triangle ']",
    "asp_result": "red_triangle, brown_triangle"
  },
  {
    "context": "There is a block called A. Inside there's a red oval that is above a blue triangle. The blue triangle is touching the right edge of A and the top of a large black square. Touching the bottom edge of A is  a small orange square. The is a block called B Which is to the right and touching A. Inside B there are 5 triangles, a red one, a green one, a large yellow one, a brown one, and an orange one. The red and orange triangles are touching the left edge of B and the orange triangle is above the red triangle. The large yellow triangle is touching the top edge of B. The green triangle is touching the right edge of B. The brown triangle is below all of the other triangles and is touching the bottom of B.",
    "question": "What object is touching the bottom of the blue triangle? the brown triangle  or  the black square?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nobject(red_oval, unknown, red, oval, a).\nobject(blue_triangle, unknown, blue, triangle, a).\nobject(large_black_square, large, black, square, a).\nobject(small_orange_square, small, orange, square, a).\nobject(red_triangle, unknown, red, triangle, b).\nobject(green_triangle, unknown, green, triangle, b).\nobject(large_yellow_triangle, large, yellow, triangle, b).\nobject(brown_triangle, unknown, brown, triangle, b).\nobject(orange_triangle, unknown, orange, triangle, b).\nis(red_oval, above, blue_triangle).\nis(blue_triangle, right, large_black_square).\nis(small_orange_square, below, blue_triangle).\nis(b, right, a).\nis(orange_triangle, above, red_triangle).\nis(large_yellow_triangle, above, orange_triangle).\nis(green_triangle, right, large_yellow_triangle).\nis(brown_triangle, below, green_triangle).\nis(brown_triangle, below, large_yellow_triangle).\nis(brown_triangle, below, orange_triangle).\nis(brown_triangle, below, red_triangle).\n\n% Query\nquery(Object) :- object(blue_triangle, _, blue, triangle, _), object(Object, _, _, _, _), is(Object, below, blue_triangle).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the black square']",
    "asp_result": "small_orange_square"
  },
  {
    "context": "There are three blocks called A, B, and C. B is to the right of and touching the right edge of A and C is above and touching the top of B. In A, there is a blue square touching the left edge of A. A red triangle is next to the blue square and is above a yellow circle is touching the bottom edge of A. In B, there is a purple rectangle and an orange oval. The orange oval is touching the right edge of B and the rectangle is near and to the left of and the oval. In C, there is a small triangle a large triangle and a pink triangle. The small triangle is above the large triangle and is touching the top of C. The pink triangle is touching the bottom of C, with the large triangle to the right of the pink triangle.",
    "question": "What object is to the left of the red thing? the blue square  or  the orange oval?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(blue_square, unknown, blue, square, a).\nobject(red_triangle, unknown, red, triangle, a).\nobject(yellow_circle, unknown, yellow, circle, a).\nobject(purple_rectangle, unknown, purple, rectangle, b).\nobject(orange_oval, unknown, orange, oval, b).\nobject(small_triangle, small, unknown, triangle, c).\nobject(large_triangle, large, unknown, triangle, c).\nobject(pink_triangle, unknown, pink, triangle, c).\nis(b, right, a).\nis(c, above, b).\nis(blue_square, left, a).\nis(red_triangle, near, blue_square).\nis(red_triangle, above, yellow_circle).\nis(orange_oval, right, b).\nis(purple_rectangle, near, orange_oval).\nis(purple_rectangle, left, orange_oval).\nis(small_triangle, above, large_triangle).\nis(small_triangle, above, c).\nis(pink_triangle, below, c).\nis(large_triangle, right, pink_triangle).\n\n% Query\nquery(Object) :- object(red_thing, _, red, _, _), object(Object, _, _, _, _), is(Object, left, red_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the blue square ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. B is to the right of and touching the right edge of A and C is above and touching the top of B. In A, there is a blue square touching the left edge of A. A red triangle is next to the blue square and is above a yellow circle is touching the bottom edge of A. In B, there is a purple rectangle and an orange oval. The orange oval is touching the right edge of B and the rectangle is near and to the left of and the oval. In C, there is a small triangle a large triangle and a pink triangle. The small triangle is above the large triangle and is touching the top of C. The pink triangle is touching the bottom of C, with the large triangle to the right of the pink triangle.",
    "question": "What object is near the purple thing? the orange oval  or  the small triangle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(blue_square, unknown, blue, square, a).\nobject(red_triangle, unknown, red, triangle, a).\nobject(yellow_circle, unknown, yellow, circle, a).\nobject(purple_rectangle, unknown, purple, rectangle, b).\nobject(orange_oval, unknown, orange, oval, b).\nobject(small_triangle, small, unknown, triangle, c).\nobject(large_triangle, large, unknown, triangle, c).\nobject(pink_triangle, unknown, pink, triangle, c).\nis(b, right, a).\nis(b, adjacent, a).\nis(c, above, b).\nis(c, adjacent, b).\nis(blue_square, left, a).\nis(red_triangle, near, blue_square).\nis(red_triangle, above, yellow_circle).\nis(yellow_circle, below, red_triangle).\nis(yellow_circle, below, a).\nis(orange_oval, right, b).\nis(purple_rectangle, near, orange_oval).\nis(purple_rectangle, left, orange_oval).\nis(small_triangle, above, large_triangle).\nis(small_triangle, above, c).\nis(pink_triangle, below, c).\nis(large_triangle, right, pink_triangle).\n\n% Query\nquery(Object) :- object(purple_rectangle, _, purple, _, _), object(Object, _, _, _, _), is(Object, near, purple_rectangle), Object = orange_oval.\nquery(Object) :- object(purple_rectangle, _, purple, _, _), object(Object, _, _, _, _), is(Object, near, purple_rectangle), Object = small_triangle.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the orange oval ']",
    "asp_result": "orange_oval"
  },
  {
    "context": "There are two blocks called A and B. A is to the right of B. In A, there is a blue triangle, Which is above a orange rectangle, Which is above a black circle. The black circle is touching the bottom of A. In B there are four squares. A yellow square is above a white square and to the left of a green square. A large purple square is touching the bottom of B and is to the left and near of the white square. The green square is on top of the purple square.",
    "question": "What object is near the large thing? the white square or  the orange rectangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nobject(blue_triangle, unknown, blue, triangle, a).\nobject(orange_rectangle, unknown, orange, rectangle, a).\nobject(black_circle, unknown, black, circle, a).\nobject(yellow_square, unknown, yellow, square, b).\nobject(white_square, unknown, white, square, b).\nobject(green_square, unknown, green, square, b).\nobject(large_purple_square, large, purple, square, b).\nis(blue_triangle, above, orange_rectangle).\nis(orange_rectangle, above, black_circle).\nis(yellow_square, above, white_square).\nis(yellow_square, left, green_square).\nis(large_purple_square, left, white_square).\nis(large_purple_square, near, white_square).\nis(green_square, above, large_purple_square).\n\n% Query\nquery(Object) :- object(large_thing, large, _, _, _), object(Object, _, _, _, _), is(Object, near, large_thing), Object = white_square.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the white square']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are two blocks called A and B. A is to the right of B. In A, there is a blue triangle, Which is above a orange rectangle, Which is above a black circle. The black circle is touching the bottom of A. In B there are four squares. A yellow square is above a white square and to the left of a green square. A large purple square is touching the bottom of B and is to the left and near of the white square. The green square is on top of the purple square.",
    "question": "What thing is not below an orange thing the yellow square or  the blue triangle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nobject(blue_triangle, unknown, blue, triangle, a).\nobject(orange_rectangle, unknown, orange, rectangle, a).\nobject(black_circle, unknown, black, circle, a).\nobject(yellow_square, unknown, yellow, square, b).\nobject(white_square, unknown, white, square, b).\nobject(green_square, unknown, green, square, b).\nobject(large_purple_square, large, purple, square, b).\nis(blue_triangle, above, orange_rectangle).\nis(orange_rectangle, above, black_circle).\nis(yellow_square, above, white_square).\nis(yellow_square, left, green_square).\nis(large_purple_square, left, white_square).\nis(large_purple_square, near, white_square).\nis(green_square, above, large_purple_square).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), object(OrangeThing, _, orange, _, _), not is(Object, below, OrangeThing), Object != yellow_square.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['both of them']",
    "asp_result": "blue_triangle, orange_rectangle, white_square, green_square, large_purple_square"
  },
  {
    "context": "There is a block called A. In A, there are four circles that are touching the bottom of A. The red circle is touching and to the left of the yellow circle. The pink circle is touching and to the right of the green circle. The yellow circle is touching and to the left of the green circle. Touching the bottom of A is a block called B. In B, there is a blue rectangle touching the top and the left of B. Near and to the right of the blue rectangle is a purple rectangle that is also touching the top of B. At the bottom of B there is a white triangle. Far to the left of B there is a block called C. In C, there is a brown oval that is to the right of an  orange square.",
    "question": "Which object is not touching another object? the orange square  or  the yellow circle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(red_circle, unknown, red, circle, a).\nobject(yellow_circle, unknown, yellow, circle, a).\nobject(pink_circle, unknown, pink, circle, a).\nobject(green_circle, unknown, green, circle, a).\nobject(blue_rectangle, unknown, blue, rectangle, b).\nobject(purple_rectangle, unknown, purple, rectangle, b).\nobject(white_triangle, unknown, white, triangle, b).\nobject(brown_oval, unknown, brown, oval, c).\nobject(orange_square, unknown, orange, square, c).\nis(red_circle, left, yellow_circle).\nis(pink_circle, right, green_circle).\nis(yellow_circle, left, green_circle).\nis(blue_rectangle, near, purple_rectangle).\nis(purple_rectangle, right, blue_rectangle).\nis(brown_oval, right, orange_square).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), not is(Object, _, _), Object = orange_square.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the orange square ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. In A, there are four circles that are touching the bottom of A. The red circle is touching and to the left of the yellow circle. The pink circle is touching and to the right of the green circle. The yellow circle is touching and to the left of the green circle. Touching the bottom of A is a block called B. In B, there is a blue rectangle touching the top and the left of B. Near and to the right of the blue rectangle is a purple rectangle that is also touching the top of B. At the bottom of B there is a white triangle. Far to the left of B there is a block called C. In C, there is a brown oval that is to the right of an  orange square.",
    "question": "What object is to the left of the pink thing the purple rectangle or  the yellow circle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(red_circle, unknown, red, circle, a).\nobject(yellow_circle, unknown, yellow, circle, a).\nobject(pink_circle, unknown, pink, circle, a).\nobject(green_circle, unknown, green, circle, a).\nobject(blue_rectangle, unknown, blue, rectangle, b).\nobject(purple_rectangle, unknown, purple, rectangle, b).\nobject(white_triangle, unknown, white, triangle, b).\nobject(brown_oval, unknown, brown, oval, c).\nobject(orange_square, unknown, orange, square, c).\nis(red_circle, left, yellow_circle).\nis(pink_circle, right, green_circle).\nis(yellow_circle, left, green_circle).\nis(blue_rectangle, near, purple_rectangle).\nis(purple_rectangle, right, blue_rectangle).\nis(brown_oval, right, orange_square).\n% Query\nquery(Object) :- object(pink_thing, _, pink, _, _), object(Object, _, _, _, _), is(Object, left, pink_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the yellow circle']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. In A, there are four circles that are touching the bottom of A. The red circle is touching and to the left of the yellow circle. The pink circle is touching and to the right of the green circle. The yellow circle is touching and to the left of the green circle. Touching the bottom of A is a block called B. In B, there is a blue rectangle touching the top and the left of B. Near and to the right of the blue rectangle is a purple rectangle that is also touching the top of B. At the bottom of B there is a white triangle. Far to the left of B there is a block called C. In C, there is a brown oval that is to the right of an  orange square.",
    "question": "What object is above a white thing? the purple rectangle  or  the blue rectangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(red_circle, unknown, red, circle, a).\nobject(yellow_circle, unknown, yellow, circle, a).\nobject(pink_circle, unknown, pink, circle, a).\nobject(green_circle, unknown, green, circle, a).\nobject(blue_rectangle, unknown, blue, rectangle, b).\nobject(purple_rectangle, unknown, purple, rectangle, b).\nobject(white_triangle, unknown, white, triangle, b).\nobject(brown_oval, unknown, brown, oval, c).\nobject(orange_square, unknown, orange, square, c).\nis(red_circle, left, yellow_circle).\nis(pink_circle, right, green_circle).\nis(yellow_circle, left, green_circle).\nis(blue_rectangle, near, purple_rectangle).\nis(purple_rectangle, right, blue_rectangle).\nis(purple_rectangle, above, white_triangle).\nis(blue_rectangle, above, white_triangle).\nis(brown_oval, right, orange_square).\n% Query\nquery(Object) :- object(Object, _, _, _, _), object(WhiteThing, _, white, _, _), is(Object, above, WhiteThing), Object = purple_rectangle.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['both of them']",
    "asp_result": "purple_rectangle"
  },
  {
    "context": "There is a block named A. In A, there is a pink triangle that touches the bottom of A. There is also a white triangle that touches the left edge of A, a red triangle that touches the top of A, and a green triangle that touches the right edge of A. Below A there is a block called B. In B, there is a small square, a large square, and a yellow circle. The large square is to the right of and near the yellow circle. The yellow circe is to the right of and above the small square. Below B there is a blocked named C. In C, there is a brown oval that is on top of a blue rectangle.",
    "question": "What object is to the below the brown thing? the blue rectangle  or  the small square ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(pink_triangle, unknown, pink, triangle, a).\nobject(white_triangle, unknown, white, triangle, a).\nobject(red_triangle, unknown, red, triangle, a).\nobject(green_triangle, unknown, green, triangle, a).\nobject(small_square, small, unknown, square, b).\nobject(large_square, large, unknown, square, b).\nobject(yellow_circle, unknown, yellow, circle, b).\nobject(brown_oval, unknown, brown, oval, c).\nobject(blue_rectangle, unknown, blue, rectangle, c).\nis(pink_triangle, below, white_triangle).\nis(white_triangle, below, red_triangle).\nis(red_triangle, below, green_triangle).\nis(large_square, right, yellow_circle).\nis(large_square, near, yellow_circle).\nis(yellow_circle, right, small_square).\nis(yellow_circle, above, small_square).\nis(brown_oval, above, blue_rectangle).\n\n% Query\nquery(Object) :- object(brown_thing, _, brown, _, _), object(Object, _, _, _, _), is(Object, below, brown_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the blue rectangle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block named A. In A, there is a pink triangle that touches the bottom of A. There is also a white triangle that touches the left edge of A, a red triangle that touches the top of A, and a green triangle that touches the right edge of A. Below A there is a block called B. In B, there is a small square, a large square, and a yellow circle. The large square is to the right of and near the yellow circle. The yellow circe is to the right of and above the small square. Below B there is a blocked named C. In C, there is a brown oval that is on top of a blue rectangle.",
    "question": "What object is below the white thing? they yellow circle  or  the red triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(pink_triangle, unknown, pink, triangle, a).\nobject(white_triangle, unknown, white, triangle, a).\nobject(red_triangle, unknown, red, triangle, a).\nobject(green_triangle, unknown, green, triangle, a).\nobject(small_square, small, unknown, square, b).\nobject(large_square, large, unknown, square, b).\nobject(yellow_circle, unknown, yellow, circle, b).\nobject(brown_oval, unknown, brown, oval, c).\nobject(blue_rectangle, unknown, blue, rectangle, c).\nis(pink_triangle, below, white_triangle).\nis(white_triangle, left, red_triangle).\nis(red_triangle, above, green_triangle).\nis(green_triangle, right, pink_triangle).\nis(large_square, right, yellow_circle).\nis(large_square, near, yellow_circle).\nis(yellow_circle, right, small_square).\nis(yellow_circle, above, small_square).\nis(brown_oval, above, blue_rectangle).\n\n% Query\nquery(Object) :- object(white_thing, _, white, _, _), object(Object, _, _, _, _), is(Object, below, white_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the red triangle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks names A, B, and C. A is to the left of B and B is to the left of C. In A, there is a small square Which is below and to the left of a yellow circle. In B, there is a yellow circle above and to the right of a large blue square. In C, there is a small black square that is below a small yellow triangle. Near and to the right of the square is a large black triangle. The large triangle is also to the left of and near a large blue square. Far above the blue square is a small yellow circle. The small triangle is to the left and far from the small circle.",
    "question": "What object is to the right of the yellow thing in A? the small yellow square or  the large blue square?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_square, small, unknown, square, a).\nobject(yellow_circle_a, unknown, yellow, circle, a).\nobject(large_blue_square, large, blue, square, b).\nobject(yellow_circle_b, unknown, yellow, circle, b).\nobject(small_black_square, small, black, square, c).\nobject(small_yellow_triangle, small, yellow, triangle, c).\nobject(large_black_triangle, large, black, triangle, c).\nobject(large_blue_square_c, large, blue, square, c).\nobject(small_yellow_circle, small, yellow, circle, c).\nis(a, left, b).\nis(b, left, c).\nis(small_square, below, yellow_circle_a).\nis(small_square, left, yellow_circle_a).\nis(yellow_circle_b, above, large_blue_square).\nis(yellow_circle_b, right, large_blue_square).\nis(small_black_square, below, small_yellow_triangle).\nis(large_black_triangle, near, small_black_square).\nis(large_black_triangle, right, small_black_square).\nis(large_black_triangle, left, large_blue_square_c).\nis(large_black_triangle, near, large_blue_square_c).\nis(small_yellow_circle, far, large_blue_square_c).\nis(small_yellow_circle, above, large_blue_square_c).\nis(small_yellow_triangle, left, small_yellow_circle).\nis(small_yellow_triangle, far, small_yellow_circle).\n\n% Query\nquery(Object) :- object(yellow_thing, _, yellow, _, a), object(Object, _, _, _, a), is(Object, right, yellow_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the large blue square']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks names A, B, and C. A is to the left of B and B is to the left of C. In A, there is a small square Which is below and to the left of a yellow circle. In B, there is a yellow circle above and to the right of a large blue square. In C, there is a small black square that is below a small yellow triangle. Near and to the right of the square is a large black triangle. The large triangle is also to the left of and near a large blue square. Far above the blue square is a small yellow circle. The small triangle is to the left and far from the small circle.",
    "question": "What is the object is above the large, black object in C? the small black square  or  the small yellow triangle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_square, small, unknown, square, a).\nobject(yellow_circle_a, unknown, yellow, circle, a).\nobject(large_blue_square, large, blue, square, b).\nobject(yellow_circle_b, unknown, yellow, circle, b).\nobject(small_black_square, small, black, square, c).\nobject(small_yellow_triangle, small, yellow, triangle, c).\nobject(large_black_triangle, large, black, triangle, c).\nobject(large_blue_square_c, large, blue, square, c).\nobject(small_yellow_circle, small, yellow, circle, c).\nis(a, left, b).\nis(b, left, c).\nis(small_square, below, yellow_circle_a).\nis(small_square, left, yellow_circle_a).\nis(yellow_circle_b, above, large_blue_square).\nis(yellow_circle_b, right, large_blue_square).\nis(small_black_square, below, small_yellow_triangle).\nis(large_black_triangle, near, small_black_square).\nis(large_black_triangle, right, small_black_square).\nis(large_black_triangle, left, large_blue_square_c).\nis(large_black_triangle, near, large_blue_square_c).\nis(small_yellow_circle, far, large_blue_square_c).\nis(small_yellow_circle, above, large_blue_square_c).\nis(small_yellow_triangle, left, small_yellow_circle).\nis(small_yellow_triangle, far, small_yellow_circle).\n\n% Query\nquery(Object) :- object(Object, _, _, _, c), object(large_black_triangle, large, black, triangle, c), is(Object, above, large_black_triangle).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small yellow triangle']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks named A, B, and C. B is to the right of A and C is to the right of B. In A there is a large black square that is touching left edge of A. In B, there is a large blue square Which is near and to the right of a large blue triangle. Far below the triangle there is a large yellow circle. The large yellow circle is touching the bottom of B. In C, there is a small blue circle that is to the right of a small black triangle.",
    "question": "What object is to the left of the large blue square? the large black square  or  the small black triangle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(large_black_square, large, black, square, a).\nobject(large_blue_square, large, blue, square, b).\nobject(large_blue_triangle, large, blue, triangle, b).\nobject(large_yellow_circle, large, yellow, circle, b).\nobject(small_blue_circle, small, blue, circle, c).\nobject(small_black_triangle, small, black, triangle, c).\nis(b, right, a).\nis(c, right, b).\nis(large_black_square, left, large_blue_square).\nis(large_blue_triangle, near, large_blue_square).\nis(large_blue_triangle, right, large_blue_square).\nis(large_yellow_circle, far, large_blue_triangle).\nis(large_yellow_circle, below, large_blue_triangle).\nis(small_blue_circle, right, small_black_triangle).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), is(Object, left, large_blue_square).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the large black square ']",
    "asp_result": "large_black_square"
  },
  {
    "context": "There are three blocks named A, B, and C. B is to the right of A and C is to the right of B. In A there is a large black square that is touching left edge of A. In B, there is a large blue square Which is near and to the right of a large blue triangle. Far below the triangle there is a large yellow circle. The large yellow circle is touching the bottom of B. In C, there is a small blue circle that is to the right of a small black triangle.",
    "question": "What object is far from the yellow thing? the large blue triangle  or  the small black triangle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(large_black_square, large, black, square, a).\nobject(large_blue_square, large, blue, square, b).\nobject(large_blue_triangle, large, blue, triangle, b).\nobject(large_yellow_circle, large, yellow, circle, b).\nobject(small_blue_circle, small, blue, circle, c).\nobject(small_black_triangle, small, black, triangle, c).\nis(b, right, a).\nis(c, right, b).\nis(large_black_square, left, a).\nis(large_blue_square, near, large_blue_triangle).\nis(large_blue_square, right, large_blue_triangle).\nis(large_yellow_circle, far, large_blue_triangle).\nis(large_yellow_circle, below, large_blue_triangle).\nis(large_yellow_circle, bottom, b).\nis(small_blue_circle, right, small_black_triangle).\n\n% Query\nquery(Object) :- object(large_yellow_circle, large, yellow, _, _), object(Object, _, _, _, _), not is(Object, far, large_yellow_circle).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the large blue triangle ']",
    "asp_result": "large_black_square, large_blue_square, large_yellow_circle, small_blue_circle, small_black_triangle"
  },
  {
    "context": "There is a block called A. In A, there are four blue circles: two small ones, a medium one, and a large one. The two small circles are below the large circle. The medium circle is far above and to the left of the large circle. There is another block called B, Which is to the right of A. In B, there is a blue triangle near the right edge of B. There is another block called C, Which is to the right of B. In C, there is a yellow circle, a large yellow triangle, and a black square. The yellow circle is near and to the left of the yellow triangle. The black square is to the right and below the yellow triangle.",
    "question": "What object is above the black thing? the yellow triangle  or  the blue triangle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle1, small, blue, circle, a).\nobject(small_blue_circle2, small, blue, circle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(large_blue_circle, large, blue, circle, a).\nobject(blue_triangle, unknown, blue, triangle, b).\nobject(yellow_circle, unknown, yellow, circle, c).\nobject(large_yellow_triangle, large, yellow, triangle, c).\nobject(black_square, unknown, black, square, c).\nis(small_blue_circle1, below, large_blue_circle).\nis(small_blue_circle2, below, large_blue_circle).\nis(medium_blue_circle, far, large_blue_circle).\nis(medium_blue_circle, left, large_blue_circle).\nis(b, right, a).\nis(c, right, b).\nis(yellow_circle, near, large_yellow_triangle).\nis(yellow_circle, left, large_yellow_triangle).\nis(black_square, right, large_yellow_triangle).\nis(black_square, below, large_yellow_triangle).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), object(black_thing, _, black, _, _), is(Object, above, black_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the yellow triangle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. In A, there are four blue circles: two small ones, a medium one, and a large one. The two small circles are below the large circle. The medium circle is far above and to the left of the large circle. There is another block called B, Which is to the right of A. In B, there is a blue triangle near the right edge of B. There is another block called C, Which is to the right of B. In C, there is a yellow circle, a large yellow triangle, and a black square. The yellow circle is near and to the left of the yellow triangle. The black square is to the right and below the yellow triangle.",
    "question": "What object is far from the medium blue thing? the yellow circle  or  the small blue circle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle1, small, blue, circle, a).\nobject(small_blue_circle2, small, blue, circle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(large_blue_circle, large, blue, circle, a).\nobject(blue_triangle, unknown, blue, triangle, b).\nobject(yellow_circle, unknown, yellow, circle, c).\nobject(large_yellow_triangle, large, yellow, triangle, c).\nobject(black_square, unknown, black, square, c).\nis(small_blue_circle1, below, large_blue_circle).\nis(small_blue_circle2, below, large_blue_circle).\nis(medium_blue_circle, far, large_blue_circle).\nis(medium_blue_circle, left, large_blue_circle).\nis(b, right, a).\nis(c, right, b).\nis(yellow_circle, near, large_yellow_triangle).\nis(yellow_circle, left, large_yellow_triangle).\nis(black_square, right, large_yellow_triangle).\nis(black_square, below, large_yellow_triangle).\n\n% Query\nquery(Object) :- object(medium_blue_circle, medium, blue, circle, _), object(Object, _, _, _, _), is(Object, far, medium_blue_circle), Object = yellow_circle.\nquery(Object) :- object(medium_blue_circle, medium, blue, circle, _), object(Object, _, _, _, _), is(Object, far, medium_blue_circle), Object = small_blue_circle1.\nquery(Object) :- object(medium_blue_circle, medium, blue, circle, _), object(Object, _, _, _, _), is(Object, far, medium_blue_circle), Object = small_blue_circle2.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small blue circle']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks named A, B, and C. A is to the right of B and B is to the right of C. In A, there is a small yellow triangle that is near and to the left of a medium yellow circle. In B, there is a medium black circle Which is above a large blue triangle. The large triangle is above and near a small blue circle. There is also a large black circle far below the small blue circle. In C, there is a medium blue circle.",
    "question": "What object is to the left of the large blue thing? the medium blue circle  or  the yellow triangle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_yellow_triangle, small, yellow, triangle, a).\nobject(medium_yellow_circle, medium, yellow, circle, a).\nobject(medium_black_circle, medium, black, circle, b).\nobject(large_blue_triangle, large, blue, triangle, b).\nobject(small_blue_circle, small, blue, circle, b).\nobject(large_black_circle, large, black, circle, b).\nobject(medium_blue_circle, medium, blue, circle, c).\nis(a, right, b).\nis(b, right, c).\nis(small_yellow_triangle, near, medium_yellow_circle).\nis(small_yellow_triangle, left, medium_yellow_circle).\nis(medium_black_circle, above, large_blue_triangle).\nis(large_blue_triangle, above, small_blue_circle).\nis(large_black_circle, far, small_blue_circle).\nis(large_black_circle, below, small_blue_circle).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), object(large_blue_thing, large, blue, _, _), is(Object, left, large_blue_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the medium blue circle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks named A, B, and C. A is to the right of B and B is to the right of C. In A, there is a small yellow triangle that is near and to the left of a medium yellow circle. In B, there is a medium black circle Which is above a large blue triangle. The large triangle is above and near a small blue circle. There is also a large black circle far below the small blue circle. In C, there is a medium blue circle.",
    "question": "What object is not below the large blue thing? the medium black circle  or  the small blue circle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_yellow_triangle, small, yellow, triangle, a).\nobject(medium_yellow_circle, medium, yellow, circle, a).\nobject(medium_black_circle, medium, black, circle, b).\nobject(large_blue_triangle, large, blue, triangle, b).\nobject(small_blue_circle, small, blue, circle, b).\nobject(large_black_circle, large, black, circle, b).\nobject(medium_blue_circle, medium, blue, circle, c).\nis(a, right, b).\nis(b, right, c).\nis(small_yellow_triangle, near, medium_yellow_circle).\nis(small_yellow_triangle, left, medium_yellow_circle).\nis(medium_black_circle, above, large_blue_triangle).\nis(large_blue_triangle, above, small_blue_circle).\nis(large_black_circle, far, small_blue_circle).\nis(large_black_circle, below, small_blue_circle).\n\n% Query\nquery(Object) :- object(Object, medium, black, circle, _), not is(Object, below, large_blue_thing); object(Object, small, blue, circle, _), not is(Object, below, large_blue_thing).\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the medium black circle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B and C. A is to the left of B and B is to the left of C. In A, there is a small blue circle. In B, there is a large blue triangle that is touching the top of a small yellow triangle. In C, there are four circles, a large yellow one, a small blue one, a small black one, and a large black one. The large yellow circle is touching the large black circle and is above and near the small blue circle. The small black circle is near and to the right of the small blue circle. The large black circle is above and near the small black circle.",
    "question": "What object is near the large yellow thing? the small blue circle  or  the small yellow triangle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle, small, blue, circle, a).\nobject(large_blue_triangle, large, blue, triangle, b).\nobject(small_yellow_triangle, small, yellow, triangle, b).\nobject(large_yellow_circle, large, yellow, circle, c).\nobject(small_blue_circle2, small, blue, circle, c).\nobject(small_black_circle, small, black, circle, c).\nobject(large_black_circle, large, black, circle, c).\nis(a, left, b).\nis(b, left, c).\nis(large_blue_triangle, above, small_yellow_triangle).\nis(large_yellow_circle, near, small_blue_circle2).\nis(large_yellow_circle, above, small_blue_circle2).\nis(small_black_circle, near, small_blue_circle2).\nis(small_black_circle, right, small_blue_circle2).\nis(large_black_circle, above, small_black_circle).\nis(large_black_circle, near, small_black_circle).\nis(large_yellow_circle, near, large_black_circle).\nis(large_yellow_circle, above, large_black_circle).\n\n% Query\nquery(Object) :- object(large_yellow_thing, large, yellow, _, _), object(Object, _, _, _, _), is(Object, near, large_yellow_thing).\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small blue circle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B and C. A is to the left of B and B is to the left of C. In A, there is a small blue circle. In B, there is a large blue triangle that is touching the top of a small yellow triangle. In C, there are four circles, a large yellow one, a small blue one, a small black one, and a large black one. The large yellow circle is touching the large black circle and is above and near the small blue circle. The small black circle is near and to the right of the small blue circle. The large black circle is above and near the small black circle.",
    "question": "What object is not touching the large blue triangle? the small yellow triangle  or  the large black square?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle, small, blue, circle, a).\nobject(large_blue_triangle, large, blue, triangle, b).\nobject(small_yellow_triangle, small, yellow, triangle, b).\nobject(large_yellow_circle, large, yellow, circle, c).\nobject(small_blue_circle_2, small, blue, circle, c).\nobject(small_black_circle, small, black, circle, c).\nobject(large_black_circle, large, black, circle, c).\nis(a, left, b).\nis(b, left, c).\nis(large_blue_triangle, above, small_yellow_triangle).\nis(large_yellow_circle, near, small_blue_circle_2).\nis(large_yellow_circle, above, small_blue_circle_2).\nis(small_black_circle, near, small_blue_circle_2).\nis(small_black_circle, right, small_blue_circle_2).\nis(large_black_circle, near, small_black_circle).\nis(large_black_circle, above, small_black_circle).\nis(large_yellow_circle, near, large_black_circle).\nis(large_yellow_circle, above, large_black_circle).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), not is(Object, near, large_blue_triangle), Object != large_black_square.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the large black square']",
    "asp_result": "small_blue_circle, large_blue_triangle, small_yellow_triangle, large_yellow_circle, small_blue_circle_2, small_black_circle, large_black_circle"
  },
  {
    "context": "There are three blocks called A, B, and C. B is to the right of A and C is to the right of B. In A, there is a medium blue circle Which is near and above a small blue circle. In B, there is a large yellow triangle Which is to the right and touching a large blue triangle. There is also a small yellow triangle to the left of the large blue triangle. In C, there is a small blue circle that is far above a blue triangle. The blue triangle is to the left of a black triangle.",
    "question": "What object is to is not touching a large blue thing? the large yellow triangle  or  the small blue circle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(small_blue_circle, small, blue, circle, a).\nobject(large_yellow_triangle, large, yellow, triangle, b).\nobject(large_blue_triangle, large, blue, triangle, b).\nobject(small_yellow_triangle, small, yellow, triangle, b).\nobject(small_blue_circle_c, small, blue, circle, c).\nobject(blue_triangle, unknown, blue, triangle, c).\nobject(black_triangle, unknown, black, triangle, c).\nis(medium_blue_circle, near, small_blue_circle).\nis(medium_blue_circle, above, small_blue_circle).\nis(large_yellow_triangle, right, large_blue_triangle).\nis(large_yellow_triangle, touching, large_blue_triangle).\nis(small_yellow_triangle, left, large_blue_triangle).\nis(small_blue_circle_c, far, blue_triangle).\nis(small_blue_circle_c, above, blue_triangle).\nis(blue_triangle, left, black_triangle).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), not is(Object, touching, large_blue_triangle).\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small blue circle']",
    "asp_result": "medium_blue_circle, small_blue_circle, large_blue_triangle, small_yellow_triangle, small_blue_circle_c, blue_triangle, black_triangle"
  },
  {
    "context": "There are three blocks called A, B, and C. B is to the right of A and C is to the right of B. In A, there is a medium blue circle Which is near and above a small blue circle. In B, there is a large yellow triangle Which is to the right and touching a large blue triangle. There is also a small yellow triangle to the left of the large blue triangle. In C, there is a small blue circle that is far above a blue triangle. The blue triangle is to the left of a black triangle.",
    "question": "What object is to the right of the small yellow thing? the large yellow triangle  or  the medium blue circle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(small_blue_circle, small, blue, circle, a).\nobject(large_yellow_triangle, large, yellow, triangle, b).\nobject(large_blue_triangle, large, blue, triangle, b).\nobject(small_yellow_triangle, small, yellow, triangle, b).\nobject(small_blue_circle, small, blue, circle, c).\nobject(blue_triangle, unknown, blue, triangle, c).\nobject(black_triangle, unknown, black, triangle, c).\nis(b, right, a).\nis(c, right, b).\nis(medium_blue_circle, near, small_blue_circle).\nis(medium_blue_circle, above, small_blue_circle).\nis(large_yellow_triangle, right, large_blue_triangle).\nis(small_yellow_triangle, left, large_blue_triangle).\nis(small_blue_circle, far, blue_triangle).\nis(blue_triangle, left, black_triangle).\n\n% Query\nquery(Object) :- object(small_yellow_thing, small, yellow, _, _), object(Object, _, _, _, _), is(Object, right, small_yellow_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the large yellow triangle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. In A there is a small blue circle. There is another block called B Which is to the right of A. In B, there is a large yellow square, Which is near and to the left of a small yellow square. Above both squares there is a black triangle. To the right of B there is a block called C. In C, there is a black square that is to the right and far from a yellow triangle.",
    "question": "What object is not below the black object in B? the black square  or  the large yellow square ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle, small, blue, circle, a).\nobject(large_yellow_square, large, yellow, square, b).\nobject(small_yellow_square, small, yellow, square, b).\nobject(black_triangle, unknown, black, triangle, b).\nobject(black_square, unknown, black, square, c).\nobject(yellow_triangle, unknown, yellow, triangle, c).\nis(b, right, a).\nis(small_yellow_square, left, large_yellow_square).\nis(small_yellow_square, near, large_yellow_square).\nis(black_triangle, above, large_yellow_square).\nis(black_triangle, above, small_yellow_square).\nis(c, right, b).\nis(black_square, right, yellow_triangle).\nis(black_square, far, yellow_triangle).\n\n% Query\nquery(Object) :- object(Object, _, _, _, b), object(BlackObject, _, black, _, b), not is(Object, below, BlackObject).\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the black square ']",
    "asp_result": "black_triangle"
  },
  {
    "context": "There is a block called A. In A there is a small blue circle. There is another block called B Which is to the right of A. In B, there is a large yellow square, Which is near and to the left of a small yellow square. Above both squares there is a black triangle. To the right of B there is a block called C. In C, there is a black square that is to the right and far from a yellow triangle.",
    "question": "What object is to the left of the black thing in C? the small blue circle  or  the yellow triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle, small, blue, circle, a).\nobject(large_yellow_square, large, yellow, square, b).\nobject(small_yellow_square, small, yellow, square, b).\nobject(black_triangle, unknown, black, triangle, b).\nobject(black_square, unknown, black, square, c).\nobject(yellow_triangle, unknown, yellow, triangle, c).\nis(b, right, a).\nis(small_yellow_square, left, large_yellow_square).\nis(small_yellow_square, near, large_yellow_square).\nis(black_triangle, above, large_yellow_square).\nis(black_triangle, above, small_yellow_square).\nis(c, right, b).\nis(yellow_triangle, far, black_square).\nis(yellow_triangle, right, black_square).\n\n% Query\nquery(Object) :- object(black_thing, _, black, _, c), object(Object, _, _, _, _), is(Object, left, black_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small blue circle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. In A there is a small blue circle. There is another block called B Which is to the right of A. In B, there is a large yellow square, Which is near and to the left of a small yellow square. Above both squares there is a black triangle. To the right of B there is a block called C. In C, there is a black square that is to the right and far from a yellow triangle.",
    "question": "Which object is left of a black square? the yellow triangle  or  the small circle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle, small, blue, circle, a).\nobject(large_yellow_square, large, yellow, square, b).\nobject(small_yellow_square, small, yellow, square, b).\nobject(black_triangle, unknown, black, triangle, b).\nobject(black_square, unknown, black, square, c).\nobject(yellow_triangle, unknown, yellow, triangle, c).\nis(b, right, a).\nis(small_yellow_square, left, large_yellow_square).\nis(small_yellow_square, near, large_yellow_square).\nis(black_triangle, above, large_yellow_square).\nis(black_triangle, above, small_yellow_square).\nis(c, right, b).\nis(yellow_triangle, far, black_square).\nis(yellow_triangle, right, black_square).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), object(black_square, _, _, _, _), is(Object, left, black_square).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small circle']",
    "asp_result": "small_blue_circle, large_yellow_square, small_yellow_square, black_triangle"
  },
  {
    "context": "There is a block called A. In A there is a small blue circle. There is another block called B Which is to the right of A. In B, there is a large yellow square, Which is near and to the left of a small yellow square. Above both squares there is a black triangle. To the right of B there is a block called C. In C, there is a black square that is to the right and far from a yellow triangle.",
    "question": "Which object is near to a small square? the black triangle  or  the large square?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle, small, blue, circle, a).\nobject(large_yellow_square, large, yellow, square, b).\nobject(small_yellow_square, small, yellow, square, b).\nobject(black_triangle, unknown, black, triangle, b).\nobject(black_square, unknown, black, square, c).\nobject(yellow_triangle, unknown, yellow, triangle, c).\nis(b, right, a).\nis(small_yellow_square, left, large_yellow_square).\nis(small_yellow_square, near, large_yellow_square).\nis(black_triangle, above, large_yellow_square).\nis(black_triangle, above, small_yellow_square).\nis(c, right, b).\nis(black_square, right, yellow_triangle).\nis(black_square, far, yellow_triangle).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), object(small_yellow_square, small, yellow, square, _), is(Object, near, small_yellow_square).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the large square']",
    "asp_result": "large_yellow_square"
  },
  {
    "context": "There are three blocks called A, B, and C. In A, there is a large blue circle that is near and to the left of a large yellow circle. There is also a medium black triangle below the blue circle. In B, Which is to the right of A, there are three small blue circles far above two small black triangles. C is to the right of B. In C, there is a large blue triangle that is near and to the left of a medium black circle. There is also a large black triangle near and below the large blue triangle.",
    "question": "What object is far from the small black thing? the small blue circle  or  the large yellow circle?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(large_blue_circle, large, blue, circle, a).\nobject(large_yellow_circle, large, yellow, circle, a).\nobject(medium_black_triangle, medium, black, triangle, a).\nobject(small_blue_circle1, small, blue, circle, b).\nobject(small_blue_circle2, small, blue, circle, b).\nobject(small_blue_circle3, small, blue, circle, b).\nobject(small_black_triangle1, small, black, triangle, b).\nobject(small_black_triangle2, small, black, triangle, b).\nobject(large_blue_triangle, large, blue, triangle, c).\nobject(medium_black_circle, medium, black, circle, c).\nobject(large_black_triangle, large, black, triangle, c).\nis(large_blue_circle, near, large_yellow_circle).\nis(large_blue_circle, left, large_yellow_circle).\nis(medium_black_triangle, below, large_blue_circle).\nis(b, right, a).\nis(c, right, b).\nis(small_blue_circle1, far, small_black_triangle1).\nis(small_blue_circle1, far, small_black_triangle2).\nis(small_blue_circle2, far, small_black_triangle1).\nis(small_blue_circle2, far, small_black_triangle2).\nis(small_blue_circle3, far, small_black_triangle1).\nis(small_blue_circle3, far, small_black_triangle2).\nis(large_blue_triangle, near, medium_black_circle).\nis(large_blue_triangle, left, medium_black_circle).\nis(large_black_triangle, near, large_blue_triangle).\nis(large_black_triangle, below, large_blue_triangle).\n\n% Query\nquery(Object) :- object(Object, small, blue, circle, _), not is(Object, far, small_black), object(small_black, small, black, _, _), is(_, far, small_black), Object != small_black.\nquery(Object) :- object(Object, large, yellow, circle, _), not is(Object, far, small_black), object(small_black, small, black, _, _), is(_, far, small_black), Object != small_black.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small blue circle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the left of B and B is to the left of C. In A, there is a large blue triangle that is near and below a medium black triangle. There is also a large black triangle that is near and below the large blue triangle. In B, there are two medium blue circles that are to the left of a medium black circle. The black circle is near and above a large blue circle. In C, there is a large yellow circle that is near and to the left of a small black triangle. There is also a large blue triangle near and to the right of the small black triangle.",
    "question": "What object is to the right of the medium blue things in B? the medium black circle  or  the large yellow circle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(large_blue_triangle, large, blue, triangle, a).\nobject(medium_black_triangle, medium, black, triangle, a).\nobject(large_black_triangle, large, black, triangle, a).\nobject(medium_blue_circle1, medium, blue, circle, b).\nobject(medium_blue_circle2, medium, blue, circle, b).\nobject(medium_black_circle, medium, black, circle, b).\nobject(large_blue_circle, large, blue, circle, b).\nobject(large_yellow_circle, large, yellow, circle, c).\nobject(small_black_triangle, small, black, triangle, c).\nobject(large_blue_triangle2, large, blue, triangle, c).\nis(a, left, b).\nis(b, left, c).\nis(large_blue_triangle, near, medium_black_triangle).\nis(large_blue_triangle, below, medium_black_triangle).\nis(large_black_triangle, near, large_blue_triangle).\nis(large_black_triangle, below, large_blue_triangle).\nis(medium_blue_circle1, left, medium_black_circle).\nis(medium_blue_circle2, left, medium_black_circle).\nis(medium_black_circle, near, large_blue_circle).\nis(medium_black_circle, above, large_blue_circle).\nis(large_yellow_circle, near, small_black_triangle).\nis(large_yellow_circle, left, small_black_triangle).\nis(large_blue_triangle2, near, small_black_triangle).\nis(large_blue_triangle2, right, small_black_triangle).\n\n% Query\nquery(Object) :- object(Object, _, _, _, b), object(medium_blue_thing1, medium, blue, _, b), object(medium_blue_thing2, medium, blue, _, b), is(Object, right, medium_blue_thing1); is(Object, right, medium_blue_thing2).\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['both of them']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the left of B and B is to the left of C. In A, there is a large blue triangle that is near and below a medium black triangle. There is also a large black triangle that is near and below the large blue triangle. In B, there are two medium blue circles that are to the left of a medium black circle. The black circle is near and above a large blue circle. In C, there is a large yellow circle that is near and to the left of a small black triangle. There is also a large blue triangle near and to the right of the small black triangle.",
    "question": "What object is not far from the the large blue thing in B? the medium black circle  or  the small black square ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(large_blue_triangle_a, large, blue, triangle, a).\nobject(medium_black_triangle_a, medium, black, triangle, a).\nobject(large_black_triangle_a, large, black, triangle, a).\nobject(medium_blue_circle_b1, medium, blue, circle, b).\nobject(medium_blue_circle_b2, medium, blue, circle, b).\nobject(medium_black_circle_b, medium, black, circle, b).\nobject(large_blue_circle_b, large, blue, circle, b).\nobject(large_yellow_circle_c, large, yellow, circle, c).\nobject(small_black_triangle_c, small, black, triangle, c).\nobject(large_blue_triangle_c, large, blue, triangle, c).\nis(a, left, b).\nis(b, left, c).\nis(large_blue_triangle_a, near, medium_black_triangle_a).\nis(large_blue_triangle_a, below, medium_black_triangle_a).\nis(large_black_triangle_a, near, large_blue_triangle_a).\nis(large_black_triangle_a, below, large_blue_triangle_a).\nis(medium_blue_circle_b1, left, medium_black_circle_b).\nis(medium_blue_circle_b2, left, medium_black_circle_b).\nis(medium_black_circle_b, near, large_blue_circle_b).\nis(medium_black_circle_b, above, large_blue_circle_b).\nis(large_yellow_circle_c, near, small_black_triangle_c).\nis(large_yellow_circle_c, left, small_black_triangle_c).\nis(large_blue_triangle_c, near, small_black_triangle_c).\nis(large_blue_triangle_c, right, small_black_triangle_c).\n\n% Query\nquery(Object) :- object(Object, medium, black, circle, b), object(LargeBlueThingB, large, blue, _, b), not is(Object, far, LargeBlueThingB).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the medium black circle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. In A, there is a medium blue square that is to the left of a small blue triangle. There is also a large blue triangle far above the small blue triangle. There is another block called B, Which is to the right of A. In B, there is a large yellow circle. There is another block called C, Which is to the right of B. In B, there is a medium yellow circle far below a small black square. There is also a large yellow square near and above the small black square . There is a medium yellow square that is far to the right of the medium yellow circle, and there is a small yellow square above the medium yellow square.",
    "question": "What object is not near the medium yellow square? the medium yellow circle  or  the small black square ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_blue_square, medium, blue, square, a).\nobject(small_blue_triangle, small, blue, triangle, a).\nobject(large_blue_triangle, large, blue, triangle, a).\nobject(large_yellow_circle, large, yellow, circle, b).\nobject(medium_yellow_circle, medium, yellow, circle, b).\nobject(small_black_square, small, black, square, b).\nobject(large_yellow_square, large, yellow, square, b).\nobject(medium_yellow_square, medium, yellow, square, b).\nobject(small_yellow_square, small, yellow, square, b).\nis(medium_blue_square, left, small_blue_triangle).\nis(large_blue_triangle, far, small_blue_triangle).\nis(b, right, a).\nis(c, right, b).\nis(medium_yellow_circle, far, small_black_square).\nis(large_yellow_square, near, small_black_square).\nis(large_yellow_square, above, small_black_square).\nis(medium_yellow_square, far, medium_yellow_circle).\nis(small_yellow_square, above, medium_yellow_square).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), not is(Object, near, medium_yellow_square), Object != medium_yellow_circle.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['none of them']",
    "asp_result": "medium_blue_square, small_blue_triangle, large_blue_triangle, large_yellow_circle, small_black_square, large_yellow_square, medium_yellow_square, small_yellow_square"
  },
  {
    "context": "There is a block called A. In A, there is a medium blue square that is to the left of a small blue triangle. There is also a large blue triangle far above the small blue triangle. There is another block called B, Which is to the right of A. In B, there is a large yellow circle. There is another block called C, Which is to the right of B. In B, there is a medium yellow circle far below a small black square. There is also a large yellow square near and above the small black square . There is a medium yellow square that is far to the right of the medium yellow circle, and there is a small yellow square above the medium yellow square.",
    "question": "What object is far below the large blue thing? the small blue triangle  or  the large yellow circle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_blue_square, medium, blue, square, a).\nobject(small_blue_triangle, small, blue, triangle, a).\nobject(large_blue_triangle, large, blue, triangle, a).\nobject(large_yellow_circle, large, yellow, circle, b).\nobject(small_black_square, small, black, square, b).\nobject(medium_yellow_circle, medium, yellow, circle, b).\nobject(large_yellow_square, large, yellow, square, b).\nobject(medium_yellow_square, medium, yellow, square, b).\nobject(small_yellow_square, small, yellow, square, b).\nis(medium_blue_square, left, small_blue_triangle).\nis(large_blue_triangle, far, small_blue_triangle).\nis(b, right, a).\nis(c, right, b).\nis(medium_yellow_circle, far, small_black_square).\nis(large_yellow_square, near, small_black_square).\nis(large_yellow_square, above, small_black_square).\nis(medium_yellow_square, far, medium_yellow_circle).\nis(small_yellow_square, above, medium_yellow_square).\n\n% Query\nquery(Object) :- object(large_blue_thing, large, blue, _, _), object(Object, _, _, _, _), is(Object, far, large_blue_thing), Object = small_blue_triangle.\nquery(Object) :- object(large_blue_thing, large, blue, _, _), object(Object, _, _, _, _), is(Object, far, large_blue_thing), Object = large_yellow_circle.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small blue triangle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the left of B Which is to the left of C. In A, there is a large black triangle near and above a large black square. To the right of the black triangle is a large blue triangle. In B, there is a medium yellow square near and below a small blue circle. In C, there is a small blue square far above a small yellow square. There is a small blue circle to the right of the small yellow square. There is a medium yellow circle near and to the right of the small blue circle. There is also a medium blue circle below the medium yellow circle.",
    "question": "What object is not near the medium yellow thing in C? the large black triangle  or  the large blue triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(large_black_triangle, large, black, triangle, a).\nobject(large_black_square, large, black, square, a).\nobject(large_blue_triangle, large, blue, triangle, a).\nobject(medium_yellow_square, medium, yellow, square, b).\nobject(small_blue_circle, small, blue, circle, b).\nobject(small_blue_square, small, blue, square, c).\nobject(small_yellow_square, small, yellow, square, c).\nobject(medium_yellow_circle, medium, yellow, circle, c).\nobject(medium_blue_circle, medium, blue, circle, c).\nis(a, left, b).\nis(b, left, c).\nis(large_black_triangle, near, large_black_square).\nis(large_black_triangle, above, large_black_square).\nis(large_blue_triangle, right, large_black_triangle).\nis(medium_yellow_square, near, small_blue_circle).\nis(medium_yellow_square, below, small_blue_circle).\nis(small_blue_square, far, small_yellow_square).\nis(small_blue_square, above, small_yellow_square).\nis(small_blue_circle, right, small_yellow_square).\nis(medium_yellow_circle, near, small_blue_circle).\nis(medium_yellow_circle, right, small_blue_circle).\nis(medium_blue_circle, below, medium_yellow_circle).\n\n% Query\nquery(Object) :- object(medium_yellow_thing, medium, yellow, _, c), object(Object, _, _, _, c), not is(Object, near, medium_yellow_thing), Object = large_black_triangle.\nquery(Object) :- object(medium_yellow_thing, medium, yellow, _, c), object(Object, _, _, _, c), not is(Object, near, medium_yellow_thing), Object = large_blue_triangle.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['both of them']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the left of B Which is to the left of C. In A, there is a large black triangle near and above a large black square. To the right of the black triangle is a large blue triangle. In B, there is a medium yellow square near and below a small blue circle. In C, there is a small blue square far above a small yellow square. There is a small blue circle to the right of the small yellow square. There is a medium yellow circle near and to the right of the small blue circle. There is also a medium blue circle below the medium yellow circle.",
    "question": "What object is to the right of the medium yellow thing in B? the medium yellow circle or   the large blue triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(large_black_triangle, large, black, triangle, a).\nobject(large_black_square, large, black, square, a).\nobject(large_blue_triangle, large, blue, triangle, a).\nobject(medium_yellow_square, medium, yellow, square, b).\nobject(small_blue_circle, small, blue, circle, b).\nobject(small_blue_square, small, blue, square, c).\nobject(small_yellow_square, small, yellow, square, c).\nobject(medium_yellow_circle, medium, yellow, circle, b).\nobject(medium_blue_circle, medium, blue, circle, b).\nis(a, left, b).\nis(b, left, c).\nis(large_black_triangle, near, large_black_square).\nis(large_black_triangle, above, large_black_square).\nis(large_blue_triangle, right, large_black_triangle).\nis(medium_yellow_square, near, small_blue_circle).\nis(medium_yellow_square, below, small_blue_circle).\nis(small_blue_square, far, small_yellow_square).\nis(small_blue_square, above, small_yellow_square).\nis(small_blue_circle, right, small_yellow_square).\nis(medium_yellow_circle, near, small_blue_circle).\nis(medium_yellow_circle, right, small_blue_circle).\nis(medium_blue_circle, below, medium_yellow_circle).\n\n% Query\nquery(Object) :- object(medium_yellow_thing, medium, yellow, _, b), object(Object, _, _, _, b), is(Object, right, medium_yellow_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the medium yellow circle']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. In A, there is a small black square near and to the left of a large blue triangle. The large blue triangle is also to the left of and below a small yellow circle. In a block called B, Which is to the left of A, there a large blue square that is near and above a small blue circle. The small blue circle is near and above a medium yellow square. There is another block called C, Which is to the left of B. In C, there is a large yellow square that is near and to the left of a large yellow circle.",
    "question": "What object is not below the small blue thing, the medium yellow square or the large yellow square? the medium yellow square  or  the large yellow square ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_black_square, small, black, square, a).\nobject(large_blue_triangle, large, blue, triangle, a).\nobject(small_yellow_circle, small, yellow, circle, a).\nobject(large_blue_square, large, blue, square, b).\nobject(small_blue_circle, small, blue, circle, b).\nobject(medium_yellow_square, medium, yellow, square, b).\nobject(large_yellow_square, large, yellow, square, c).\nobject(large_yellow_circle, large, yellow, circle, c).\nis(small_black_square, near, large_blue_triangle).\nis(small_black_square, left, large_blue_triangle).\nis(large_blue_triangle, left, small_yellow_circle).\nis(large_blue_triangle, below, small_yellow_circle).\nis(large_blue_square, near, small_blue_circle).\nis(large_blue_square, above, small_blue_circle).\nis(small_blue_circle, near, medium_yellow_square).\nis(small_blue_circle, above, medium_yellow_square).\nis(large_yellow_square, near, large_yellow_circle).\nis(large_yellow_square, left, large_yellow_circle).\n% Query\nquery(Object) :- object(Object, _, _, _, _), not is(Object, below, small_blue_circle), not is(Object, below, medium_yellow_square), not is(Object, below, large_yellow_square).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the large yellow square ']",
    "asp_result": "small_black_square, large_blue_triangle, small_yellow_circle, large_blue_square, small_blue_circle, large_yellow_square, large_yellow_circle"
  },
  {
    "context": "There is a block called A. In A, there is a small black square near and to the left of a large blue triangle. The large blue triangle is also to the left of and below a small yellow circle. In a block called B, Which is to the left of A, there a large blue square that is near and above a small blue circle. The small blue circle is near and above a medium yellow square. There is another block called C, Which is to the left of B. In C, there is a large yellow square that is near and to the left of a large yellow circle.",
    "question": "What object is not near the large yellow square, the large yellow circle or the large blue triangle? the large yellow circle  or  the large blue triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_black_square, small, black, square, a).\nobject(large_blue_triangle, large, blue, triangle, a).\nobject(small_yellow_circle, small, yellow, circle, a).\nobject(large_blue_square, large, blue, square, b).\nobject(small_blue_circle, small, blue, circle, b).\nobject(medium_yellow_square, medium, yellow, square, b).\nobject(large_yellow_square, large, yellow, square, c).\nobject(large_yellow_circle, large, yellow, circle, c).\nis(small_black_square, near, large_blue_triangle).\nis(small_black_square, left, large_blue_triangle).\nis(large_blue_triangle, left, small_yellow_circle).\nis(large_blue_triangle, below, small_yellow_circle).\nis(large_blue_square, near, small_blue_circle).\nis(large_blue_square, above, small_blue_circle).\nis(small_blue_circle, near, medium_yellow_square).\nis(small_blue_circle, above, medium_yellow_square).\nis(large_yellow_square, near, large_yellow_circle).\nis(large_yellow_square, left, large_yellow_circle).\nis(b, left, a).\nis(c, left, b).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), not is(Object, near, large_yellow_square), not is(Object, near, large_yellow_circle), not is(Object, near, large_blue_triangle).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the large blue triangle ']",
    "asp_result": "large_blue_triangle, small_yellow_circle, large_blue_square, small_blue_circle, medium_yellow_square"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the left of B and B is to the left of C. In A, there is a medium yellow circle near and above a medium blue circle. There is also a large black square near and below the medium blue circle. In B, there is a medium yellow triangle near and to the left of a small blue triangle. The small blue triangle is above a medium blue triangle. The medium blue triangle is to the right of the medium yellow triangle and above a large black circle. In C, there is a medium black triangle that is near and to the left of a large blue triangle. There is a large black square near and to the right of large blue triangle.",
    "question": "What object is to the right of the medium blue thing in B, the large blue triangle or the large black square? the large blue triangle  or  the large black square ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_yellow_circle, medium, yellow, circle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(large_black_square, large, black, square, a).\nobject(medium_yellow_triangle, medium, yellow, triangle, b).\nobject(small_blue_triangle, small, blue, triangle, b).\nobject(medium_blue_triangle, medium, blue, triangle, b).\nobject(large_black_circle, large, black, circle, b).\nobject(medium_black_triangle, medium, black, triangle, c).\nobject(large_blue_triangle, large, blue, triangle, c).\nobject(large_black_square2, large, black, square, c).\nis(a, left, b).\nis(b, left, c).\nis(medium_yellow_circle, near, medium_blue_circle).\nis(medium_yellow_circle, above, medium_blue_circle).\nis(large_black_square, near, medium_blue_circle).\nis(large_black_square, below, medium_blue_circle).\nis(medium_yellow_triangle, near, small_blue_triangle).\nis(medium_yellow_triangle, left, small_blue_triangle).\nis(small_blue_triangle, above, medium_blue_triangle).\nis(medium_blue_triangle, right, medium_yellow_triangle).\nis(medium_blue_triangle, above, large_black_circle).\nis(medium_black_triangle, near, large_blue_triangle).\nis(medium_black_triangle, left, large_blue_triangle).\nis(large_black_square2, near, large_blue_triangle).\nis(large_black_square2, right, large_blue_triangle).\n\n% Query\nquery(Object) :- object(medium_blue_thing, medium, blue, _, b), object(Object, _, _, _, b), is(Object, right, medium_blue_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['both of them']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the left of B and B is to the left of C. In A, there is a medium yellow circle near and above a medium blue circle. There is also a large black square near and below the medium blue circle. In B, there is a medium yellow triangle near and to the left of a small blue triangle. The small blue triangle is above a medium blue triangle. The medium blue triangle is to the right of the medium yellow triangle and above a large black circle. In C, there is a medium black triangle that is near and to the left of a large blue triangle. There is a large black square near and to the right of large blue triangle.",
    "question": "What object is not near the medium yellow thing in A, the medium blue circle or the small blue triangle? the medium blue circle  or  the small blue triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(medium_yellow_circle, medium, yellow, circle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(large_black_square, large, black, square, a).\nobject(medium_yellow_triangle, medium, yellow, triangle, b).\nobject(small_blue_triangle, small, blue, triangle, b).\nobject(medium_blue_triangle, medium, blue, triangle, b).\nobject(large_black_circle, large, black, circle, b).\nobject(medium_black_triangle, medium, black, triangle, c).\nobject(large_blue_triangle, large, blue, triangle, c).\nobject(large_black_square2, large, black, square, c).\nis(a, left, b).\nis(b, left, c).\nis(medium_yellow_circle, near, medium_blue_circle).\nis(medium_yellow_circle, above, medium_blue_circle).\nis(large_black_square, near, medium_blue_circle).\nis(large_black_square, below, medium_blue_circle).\nis(medium_yellow_triangle, near, small_blue_triangle).\nis(medium_yellow_triangle, left, small_blue_triangle).\nis(small_blue_triangle, above, medium_blue_triangle).\nis(medium_blue_triangle, right, medium_yellow_triangle).\nis(medium_blue_triangle, above, large_black_circle).\nis(medium_black_triangle, near, large_blue_triangle).\nis(medium_black_triangle, left, large_blue_triangle).\nis(large_black_square2, near, large_blue_triangle).\nis(large_black_square2, right, large_blue_triangle).\n\n% Query\nquery(Object) :- object(Object, _, _, _, a), object(MediumYellowThing, medium, yellow, _, a), not is(Object, near, MediumYellowThing), Object != medium_blue_circle.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small blue triangle ']",
    "asp_result": "medium_yellow_circle, large_black_square"
  },
  {
    "context": "There are three blocks called A, B, and C. B is to the left of A and C is to the left of B. In A, there is a small blue circle near and above a medium blue circle. Far to the right of the circles is a large yellow square. In B, there is a small black square that is to the right of a small black triangle. There is also a small blue square far above the small black triangle. In C, there is a large black triangle that is near and above a small blue circle. The small blue circle is also near and above a small black triangle. To the left of the small black triangle is a medium yellow circle.",
    "question": "What object is not to the left of the the medium yellow thing, the small black triangle or the small blue circle in A? the small black triangle  or  the small blue circle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle_a, small, blue, circle, a).\nobject(medium_blue_circle_a, medium, blue, circle, a).\nobject(large_yellow_square_a, large, yellow, square, a).\nobject(small_black_square_b, small, black, square, b).\nobject(small_black_triangle_b, small, black, triangle, b).\nobject(small_blue_square_b, small, blue, square, b).\nobject(large_black_triangle_c, large, black, triangle, c).\nobject(small_blue_circle_c, small, blue, circle, c).\nobject(small_black_triangle_c, small, black, triangle, c).\nobject(medium_yellow_circle_c, medium, yellow, circle, c).\nis(b, left, a).\nis(c, left, b).\nis(small_blue_circle_a, near, medium_blue_circle_a).\nis(small_blue_circle_a, above, medium_blue_circle_a).\nis(large_yellow_square_a, far, medium_blue_circle_a).\nis(large_yellow_square_a, right, medium_blue_circle_a).\nis(small_black_square_b, right, small_black_triangle_b).\nis(small_blue_square_b, far, small_black_triangle_b).\nis(small_blue_square_b, above, small_black_triangle_b).\nis(large_black_triangle_c, near, small_blue_circle_c).\nis(large_black_triangle_c, above, small_blue_circle_c).\nis(small_blue_circle_c, near, small_black_triangle_c).\nis(small_blue_circle_c, above, small_black_triangle_c).\nis(medium_yellow_circle_c, left, small_black_triangle_c).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), object(medium_yellow_circle_, medium, yellow, _, _), object(small_black_triangle_, small, black, triangle, _), object(small_blue_circle_, small, blue, circle, _), not is(Object, left, medium_yellow_circle_), not is(Object, left, small_black_triangle_), not is(Object, left, small_blue_circle_).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small blue circle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. B is to the left of A and C is to the left of B. In A, there is a small blue circle near and above a medium blue circle. Far to the right of the circles is a large yellow square. In B, there is a small black square that is to the right of a small black triangle. There is also a small blue square far above the small black triangle. In C, there is a large black triangle that is near and above a small blue circle. The small blue circle is also near and above a small black triangle. To the left of the small black triangle is a medium yellow circle.",
    "question": "What object is to the left of the small black square, the small black triangle or the large black triangle the small black triangle  or  the large black triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_circle, small, blue, circle, a).\nobject(medium_blue_circle, medium, blue, circle, a).\nobject(large_yellow_square, large, yellow, square, a).\nobject(small_black_square, small, black, square, b).\nobject(small_black_triangle, small, black, triangle, b).\nobject(small_blue_square, small, blue, square, b).\nobject(large_black_triangle, large, black, triangle, c).\nobject(small_blue_circle2, small, blue, circle, c).\nobject(small_black_triangle2, small, black, triangle, c).\nobject(medium_yellow_circle, medium, yellow, circle, c).\nis(b, left, a).\nis(c, left, b).\nis(small_blue_circle, near, medium_blue_circle).\nis(small_blue_circle, above, medium_blue_circle).\nis(large_yellow_square, far, small_blue_circle).\nis(large_yellow_square, far, medium_blue_circle).\nis(small_black_square, right, small_black_triangle).\nis(small_blue_square, far, small_black_triangle).\nis(small_blue_square, above, small_black_triangle).\nis(large_black_triangle, near, small_blue_circle2).\nis(large_black_triangle, above, small_blue_circle2).\nis(large_black_triangle, near, small_black_triangle2).\nis(large_black_triangle, above, small_black_triangle2).\nis(medium_yellow_circle, left, small_black_triangle2).\n% Query\nquery(Object) :- object(Object, _, _, _, b), is(Object, left, small_black_square), Object != small_black_square.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['both of them']",
    "asp_result": "small_black_triangle"
  },
  {
    "context": "There are three blocks called A, B, and C. B is to the right of A and C is to the right of B. In A, there is a small black triangle near and below a large yellow circle. Far to the right of the yellow circle is a small blue square. In B, there is a large black triangle far below a small blue circle. The small blue circle is near and below a small blue triangle. In C, there is a small blue circle.",
    "question": "What object is not near the small black thing, the large yellow circle or the large black triangle ? the large yellow circle  or  the large black triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_black_triangle, small, black, triangle, a).\nobject(large_yellow_circle, large, yellow, circle, a).\nobject(small_blue_square, small, blue, square, a).\nobject(large_black_triangle, large, black, triangle, b).\nobject(small_blue_circle_b, small, blue, circle, b).\nobject(small_blue_triangle, small, blue, triangle, b).\nobject(small_blue_circle_c, small, blue, circle, c).\nis(small_black_triangle, near, large_yellow_circle).\nis(small_black_triangle, below, large_yellow_circle).\nis(small_blue_square, far, large_yellow_circle).\nis(small_blue_square, right, large_yellow_circle).\nis(large_black_triangle, far, small_blue_circle_b).\nis(large_black_triangle, below, small_blue_circle_b).\nis(small_blue_circle_b, near, small_blue_triangle).\nis(small_blue_circle_b, below, small_blue_triangle).\nis(b, right, a).\nis(c, right, b).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), not is(Object, near, small_black_triangle), not is(Object, near, large_yellow_circle), not is(Object, near, large_black_triangle).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the large black triangle ']",
    "asp_result": "large_black_triangle, small_blue_triangle, small_blue_circle_c"
  },
  {
    "context": "There are three blocks called A, B, and C. B is to the right of A and C is to the right of B. In A, there is a small black triangle near and below a large yellow circle. Far to the right of the yellow circle is a small blue square. In B, there is a large black triangle far below a small blue circle. The small blue circle is near and below a small blue triangle. In C, there is a small blue circle.",
    "question": "What object is not above large black thing, the small black triangle or the small blue triangle? the small black triangle  or  the small blue triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_black_triangle, small, black, triangle, a).\nobject(large_yellow_circle, large, yellow, circle, a).\nobject(small_blue_square, small, blue, square, a).\nobject(large_black_triangle, large, black, triangle, b).\nobject(small_blue_circle1, small, blue, circle, b).\nobject(small_blue_triangle, small, blue, triangle, b).\nobject(small_blue_circle2, small, blue, circle, c).\nis(small_black_triangle, near, large_yellow_circle).\nis(small_black_triangle, below, large_yellow_circle).\nis(small_blue_square, far, large_yellow_circle).\nis(small_blue_square, right, large_yellow_circle).\nis(large_black_triangle, far, small_blue_circle1).\nis(large_black_triangle, below, small_blue_circle1).\nis(small_blue_circle1, near, small_blue_triangle).\nis(small_blue_circle1, below, small_blue_triangle).\nis(b, right, a).\nis(c, right, b).\n\n% Query\nquery(Object) :- object(Object, small, black, triangle, _), not is(Object, above, large_black_thing); object(Object, small, blue, triangle, _), not is(Object, above, large_black_thing).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small black triangle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B and C. B is to the left of A and C is to the left of B. In A, there is a large blue triangle that is near and to the right of a medium yellow circle. There is also a large black square near and to the left of the medium yellow circle. In B, there is a medium yellow triangle that is near and above a large black square. Near and below the black square is a medium blue circle. In C, there is a small blue triangle to the right of a small black triangle. Near and to the left of the of the small black triangle is a large blue triangle.",
    "question": "What object is to the right of small blue thing, the medium yellow circle or the small black triangle? the medium yellow circle  or  the small black triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(large_blue_triangle_a, large, blue, triangle, a).\nobject(medium_yellow_circle_a, medium, yellow, circle, a).\nobject(large_black_square_a, large, black, square, a).\nobject(medium_yellow_triangle_b, medium, yellow, triangle, b).\nobject(large_black_square_b, large, black, square, b).\nobject(medium_blue_circle_b, medium, blue, circle, b).\nobject(small_blue_triangle_c, small, blue, triangle, c).\nobject(small_black_triangle_c, small, black, triangle, c).\nobject(large_blue_triangle_c, large, blue, triangle, c).\nis(b, left, a).\nis(c, left, b).\nis(large_blue_triangle_a, near, medium_yellow_circle_a).\nis(large_blue_triangle_a, right, medium_yellow_circle_a).\nis(large_black_square_a, near, medium_yellow_circle_a).\nis(large_black_square_a, left, medium_yellow_circle_a).\nis(medium_yellow_triangle_b, near, large_black_square_b).\nis(medium_yellow_triangle_b, above, large_black_square_b).\nis(medium_blue_circle_b, near, large_black_square_b).\nis(medium_blue_circle_b, below, large_black_square_b).\nis(small_blue_triangle_c, right, small_black_triangle_c).\nis(large_blue_triangle_c, near, small_black_triangle_c).\nis(large_blue_triangle_c, left, small_black_triangle_c).\n\n% Query\nquery(Object) :- object(small_blue_triangle_c, small, blue, _, _), object(Object, _, _, _, _), is(Object, right, small_blue_triangle_c).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the medium yellow circle ']",
    "asp_result": "large_blue_triangle_a, medium_yellow_circle_a, large_black_square_a, medium_yellow_triangle_b, large_black_square_b, medium_blue_circle_b"
  },
  {
    "context": "There are three blocks called A, B and C. B is to the left of A and C is to the left of B. In A, there is a large blue triangle that is near and to the right of a medium yellow circle. There is also a large black square near and to the left of the medium yellow circle. In B, there is a medium yellow triangle that is near and above a large black square. Near and below the black square is a medium blue circle. In C, there is a small blue triangle to the right of a small black triangle. Near and to the left of the of the small black triangle is a large blue triangle.",
    "question": "What object is not far from the large black thing in B, the medium yellow triangle or the medium blue circle? the medium yellow triangle  or  the medium blue circle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(large_blue_triangle, large, blue, triangle, a).\nobject(medium_yellow_circle, medium, yellow, circle, a).\nobject(large_black_square, large, black, square, a).\nobject(medium_yellow_triangle, medium, yellow, triangle, b).\nobject(large_black_square_b, large, black, square, b).\nobject(medium_blue_circle, medium, blue, circle, b).\nobject(small_blue_triangle, small, blue, triangle, c).\nobject(small_black_triangle, small, black, triangle, c).\nobject(large_blue_triangle_c, large, blue, triangle, c).\nis(b, left, a).\nis(c, left, b).\nis(large_blue_triangle, near, medium_yellow_circle).\nis(large_blue_triangle, right, medium_yellow_circle).\nis(large_black_square, near, medium_yellow_circle).\nis(large_black_square, left, medium_yellow_circle).\nis(medium_yellow_triangle, near, large_black_square_b).\nis(medium_yellow_triangle, above, large_black_square_b).\nis(medium_blue_circle, near, large_black_square_b).\nis(medium_blue_circle, below, large_black_square_b).\nis(small_blue_triangle, right, small_black_triangle).\nis(large_blue_triangle_c, near, small_black_triangle).\nis(large_blue_triangle_c, left, small_black_triangle).\n\n% Query\nquery(Object) :- object(Object, medium, yellow, triangle, b), not is(Object, far, large_black_square_b).\nquery(Object) :- object(Object, medium, blue, circle, b), not is(Object, far, large_black_square_b).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['both of them']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There is a block called A. In A, there a large black circle that is far below a large yellow square. There is a block called B, Which is to the right of A. In B, there is a large blue square near and to the left of a large blue triangle. The blue triangle is near and to the right of a small yellow square. There is another block called C, Which is to the right of B. In C, there is a small blue circle that is near and above a small yellow square. Far below the small square is a large blue square.",
    "question": "What object is not far from a large blue thing, the small yellow square or the large yellow square? the small yellow square  or  the large yellow square ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(large_black_circle, large, black, circle, a).\nobject(large_yellow_square, large, yellow, square, a).\nis(large_black_circle, below, large_yellow_square).\nis(large_black_circle, far, large_yellow_square).\nis(b, right, a).\nobject(large_blue_square, large, blue, square, b).\nobject(large_blue_triangle, large, blue, triangle, b).\nis(large_blue_square, near, large_blue_triangle).\nis(large_blue_square, left, large_blue_triangle).\nis(large_blue_triangle, near, large_blue_square).\nis(large_blue_triangle, right, large_blue_square).\nobject(small_yellow_square, small, yellow, square, b).\nis(large_blue_triangle, near, small_yellow_square).\nis(large_blue_triangle, right, small_yellow_square).\nis(c, right, b).\nobject(small_blue_circle, small, blue, circle, c).\nobject(small_yellow_square2, small, yellow, square, c).\nis(small_blue_circle, near, small_yellow_square2).\nis(small_blue_circle, above, small_yellow_square2).\nobject(large_blue_square2, large, blue, square, c).\nis(large_blue_square2, below, small_yellow_square2).\nis(large_blue_square2, far, small_yellow_square2).\n\n% Query\nquery(Object) :- object(Object, small, yellow, square, _), not is(Object, far, LargeBlueThing), object(LargeBlueThing, large, blue, _, _).\nquery(Object) :- object(Object, large, yellow, square, _), not is(Object, far, LargeBlueThing), object(LargeBlueThing, large, blue, _, _).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small yellow square ']",
    "asp_result": " small_yellow_square, small_yellow_square2"
  },
  {
    "context": "There is a block called A. In A, there a large black circle that is far below a large yellow square. There is a block called B, Which is to the right of A. In B, there is a large blue square near and to the left of a large blue triangle. The blue triangle is near and to the right of a small yellow square. There is another block called C, Which is to the right of B. In C, there is a small blue circle that is near and above a small yellow square. Far below the small square is a large blue square.",
    "question": "What object is above a large yellow thing, a small yellow square or the large blue square? the small yellow square  or  the large blue square ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(large_black_circle, large, black, circle, a).\nobject(large_yellow_square, large, yellow, square, a).\nis(large_black_circle, below, large_yellow_square).\nis(large_black_circle, far, large_yellow_square).\nis(b, right, a).\nobject(large_blue_square, large, blue, square, b).\nobject(large_blue_triangle, large, blue, triangle, b).\nis(large_blue_square, near, large_blue_triangle).\nis(large_blue_square, left, large_blue_triangle).\nis(large_blue_triangle, near, large_blue_square).\nis(large_blue_triangle, right, large_blue_square).\nobject(small_yellow_square, small, yellow, square, b).\nis(large_blue_triangle, near, small_yellow_square).\nis(large_blue_triangle, right, small_yellow_square).\nis(c, right, b).\nobject(small_blue_circle, small, blue, circle, c).\nobject(small_yellow_square2, small, yellow, square, c).\nis(small_blue_circle, near, small_yellow_square2).\nis(small_blue_circle, above, small_yellow_square2).\nobject(large_blue_square2, large, blue, square, c).\nis(large_blue_square2, below, small_yellow_square2).\nis(large_blue_square2, far, small_yellow_square2).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), object(LargeYellowThing, large, yellow, _, _), is(Object, above, LargeYellowThing), Object != LargeYellowThing.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['none of them']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the left of B and B is to the left of C. In A, there is a small blue square near and below a medium black triangle. Near and above the medium black triangle is a large blue circle. In B, there is a large yellow circle far above a medium black square. The medium black square is to the near and to the left of a small yellow square. In C, there is a large yellow circle far above a small black circle.",
    "question": "What object is not near the medium black thing in B, the large yellow circle or the small yellow square the large yellow circle  or  the small yellow square ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_square, small, blue, square, a).\nobject(medium_black_triangle, medium, black, triangle, a).\nobject(large_blue_circle, large, blue, circle, a).\nobject(large_yellow_circle, large, yellow, circle, b).\nobject(medium_black_square, medium, black, square, b).\nobject(small_yellow_square, small, yellow, square, b).\nobject(large_yellow_circle_c, large, yellow, circle, c).\nobject(small_black_circle, small, black, circle, c).\nis(a, left, b).\nis(b, left, c).\nis(small_blue_square, near, medium_black_triangle).\nis(small_blue_square, below, medium_black_triangle).\nis(large_blue_circle, near, medium_black_triangle).\nis(large_blue_circle, above, medium_black_triangle).\nis(large_yellow_circle, far, medium_black_square).\nis(large_yellow_circle, above, medium_black_square).\nis(medium_black_square, near, small_yellow_square).\nis(medium_black_square, left, small_yellow_square).\nis(large_yellow_circle_c, far, small_black_circle).\nis(large_yellow_circle_c, above, small_black_circle).\n\n% Query\nquery(Object) :- object(medium_black_thing, medium, black, _, b), object(Object, _, _, _, b), not is(Object, near, medium_black_thing), Object != medium_black_thing.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the large yellow circle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the left of B and B is to the left of C. In A, there is a small blue square near and below a medium black triangle. Near and above the medium black triangle is a large blue circle. In B, there is a large yellow circle far above a medium black square. The medium black square is to the near and to the left of a small yellow square. In C, there is a large yellow circle far above a small black circle.",
    "question": "What object is not below the large yellow thing, the small black circle or the small blue square? the small black circle  or  the small blue circle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_square, small, blue, square, a).\nobject(medium_black_triangle, medium, black, triangle, a).\nobject(large_blue_circle, large, blue, circle, a).\nobject(large_yellow_circle, large, yellow, circle, b).\nobject(medium_black_square, medium, black, square, b).\nobject(small_yellow_square, small, yellow, square, b).\nobject(large_yellow_circle2, large, yellow, circle, c).\nobject(small_black_circle, small, black, circle, c).\nis(a, left, b).\nis(b, left, c).\nis(small_blue_square, near, medium_black_triangle).\nis(small_blue_square, below, medium_black_triangle).\nis(large_blue_circle, near, medium_black_triangle).\nis(large_blue_circle, above, medium_black_triangle).\nis(large_yellow_circle, far, medium_black_square).\nis(large_yellow_circle, above, medium_black_square).\nis(medium_black_square, near, small_yellow_square).\nis(medium_black_square, left, small_yellow_square).\nis(large_yellow_circle2, far, small_black_circle).\nis(large_yellow_circle2, above, small_black_circle).\n\n% Query\nquery(Object) :- object(large_yellow_thing, large, yellow, _, _), object(Object, _, _, _, _), not is(Object, below, large_yellow_thing), Object != small_black_circle.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['none of them']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the right of B and B is to the right of C. In A, there is a small blue triangle. In B, there is a large blue circle near and to the right of a small yellow square. The yellow square is near and to the right of a small black circle. In C, there is a small yellow circle near and below a medium black triangle. There is a small blue square near and above the black triangle.",
    "question": "What object is not near the thing in A, the small yellow circle or the medium black triangle? the small yellow circle  or  the medium black triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_triangle, small, blue, triangle, a).\nobject(large_blue_circle, large, blue, circle, b).\nobject(small_yellow_square, small, yellow, square, b).\nobject(small_black_circle, small, black, circle, b).\nobject(small_yellow_circle, small, yellow, circle, c).\nobject(medium_black_triangle, medium, black, triangle, c).\nobject(small_blue_square, small, blue, square, c).\nis(a, right, b).\nis(b, right, c).\nis(large_blue_circle, near, small_yellow_square).\nis(large_blue_circle, right, small_yellow_square).\nis(small_yellow_square, near, small_black_circle).\nis(small_yellow_square, right, small_black_circle).\nis(small_yellow_circle, near, medium_black_triangle).\nis(small_yellow_circle, below, medium_black_triangle).\nis(small_blue_square, near, medium_black_triangle).\nis(small_blue_square, above, medium_black_triangle).\n\n% Query\nquery(Object) :- object(Object, _, _, _, _), not is(Object, near, small_blue_triangle), Object != small_yellow_circle, Object != medium_black_triangle.\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "['both of them']",
    "asp_result": "small_blue_triangle, large_blue_circle, small_yellow_square, small_black_circle, small_blue_square"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the right of B and B is to the right of C. In A, there is a small blue triangle. In B, there is a large blue circle near and to the right of a small yellow square. The yellow square is near and to the right of a small black circle. In C, there is a small yellow circle near and below a medium black triangle. There is a small blue square near and above the black triangle.",
    "question": "What object is to the left of the small yellow thing in B, the large blue circle or the medium black triangle? the large blue circle  or  the medium black triangle ?",
    "q_type": "CO",
    "predicted_ASP": "\nblock(a).\nblock(b).\nblock(c).\nobject(small_blue_triangle, small, blue, triangle, a).\nobject(large_blue_circle, large, blue, circle, b).\nobject(small_yellow_square, small, yellow, square, b).\nobject(small_black_circle, small, black, circle, b).\nobject(small_yellow_circle, small, yellow, circle, c).\nobject(medium_black_triangle, medium, black, triangle, c).\nobject(small_blue_square, small, blue, square, c).\nis(a, right, b).\nis(b, right, c).\nis(large_blue_circle, near, small_yellow_square).\nis(large_blue_circle, right, small_yellow_square).\nis(small_yellow_square, near, small_black_circle).\nis(small_yellow_square, right, small_black_circle).\nis(small_yellow_circle, near, medium_black_triangle).\nis(small_yellow_circle, below, medium_black_triangle).\nis(small_blue_square, near, medium_black_triangle).\nis(small_blue_square, above, medium_black_triangle).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the medium black triangle ']",
    "asp_result": "satisfiable, but no query results"
  },
  {
    "context": "There are three blocks called A, B, and C. A is to the left of B and B is to the left of C. In A, there is a small yellow square near and to the left of a large yellow circle. The large circle is near and to the left of a large blue triangle. In B, there is a small yellow square near and below a large blue triangle. There is a medium black triangle near and above the large blue triangle. In C, there is a small black square far to the left and above a small blue circle. The blue circle is near and to the left of a large yellow square.",
    "question": "What object is not far from the large yellow thing in A, the small yellow square or the small black square? the small yellow square  or  the small black square ?",
    "q_type": "CO",
    "predicted_ASP": "\n% Facts\nblock(a).\nblock(b).\nblock(c).\nobject(small_yellow_square_a, small, yellow, square, a).\nobject(large_yellow_circle_a, large, yellow, circle, a).\nobject(large_blue_triangle_a, large, blue, triangle, a).\nobject(small_yellow_square_b, small, yellow, square, b).\nobject(large_blue_triangle_b, large, blue, triangle, b).\nobject(medium_black_triangle_b, medium, black, triangle, b).\nobject(small_black_square_c, small, black, square, c).\nobject(small_blue_circle_c, small, blue, circle, c).\nobject(large_yellow_square_c, large, yellow, square, c).\nis(a, left, b).\nis(b, left, c).\nis(small_yellow_square_a, near, large_yellow_circle_a).\nis(small_yellow_square_a, left, large_yellow_circle_a).\nis(large_yellow_circle_a, near, large_blue_triangle_a).\nis(large_yellow_circle_a, left, large_blue_triangle_a).\nis(small_yellow_square_b, near, large_blue_triangle_b).\nis(small_yellow_square_b, below, large_blue_triangle_b).\nis(medium_black_triangle_b, near, large_blue_triangle_b).\nis(medium_black_triangle_b, above, large_blue_triangle_b).\nis(small_black_square_c, far, small_blue_circle_c).\nis(small_black_square_c, above, small_blue_circle_c).\nis(small_blue_circle_c, near, large_yellow_square_c).\nis(small_blue_circle_c, left, large_yellow_square_c).\n\n% Query\nquery(Object) :- object(Object, small, yellow, square, a), not is(Object, far, large), object(large, large, yellow, _, a).\nquery(Object) :- object(Object, small, black, square, c), not is(Object, far, large), object(large, large, yellow, _, a).\n#show query/1.\n  % Inverse relations\n        inverse(left, right; right, left; front, behind; behind, front; above, below; below, above; near, far; far, near;).\n        is(Y, R2, X) :- is(X, R1, Y), inverse(R1, R2), X != Y.\n        % Symmetric relations\n        symmetric(touching; disconnected; overlapping; adjacent; near; far).\n        is(Y, R, X) :- is(X, R, Y), symmetric(R), X != Y .\n        % Transitive relations\n        transitive(above; below; left; right; front; behind).\n        is(X, R, Z) :- is(X, R, Y), is(Y, R, Z), transitive(R), X != Y, Y != Z, X != Z.\n        % Inter-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, B1), object(O2, _, _, _, B2), is(B1, R, B2), O1 != O2, B1 != B2.\n        % Intra-block object relations\n        is(O1, R, O2) :- object(O1, _, _, _, Block), object(O2, _, _, _, Block), is(O1, R, O2), O1 != O2. #show query/1.\n        ",
    "actual_answer": "[' the small yellow square ']",
    "asp_result": "satisfiable, but no query results"
  }
]